<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><para><coId>8131-1635937482206</coId><text>随着业务发展的需要，原单体单机部署的系统被演化成分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的Java API并不能提供分布式锁的能力。为了解决这个问题就需要一种跨JVM的互斥机制来控制共享资源的访问，这就是分布式锁要解决的问题！</text><inline-styles/><styles><text-indent>1</text-indent></styles></para><para><coId>8432-1635937564588</coId><text/><inline-styles/><styles><text-indent>1</text-indent></styles></para><para><coId>3037-1635937558668</coId><text>分布式锁主流的实现方案：</text><inline-styles/><styles/></para><para><coId>1567-1635937558907</coId><text>1. 基于数据库实现分布式锁</text><inline-styles/><styles/></para><para><coId>6695-1635937558907</coId><text>2. 基于缓存（Redis等）</text><inline-styles/><styles/></para><para><coId>2167-1635937558907</coId><text>3. 基于Zookeeper</text><inline-styles/><styles/></para><para><coId>6873-1635937558907</coId><text>每一种分布式锁解决方案都有各自的优缺点：</text><inline-styles/><styles/></para><para><coId>4052-1635937558907</coId><text>1. 性能：redis最高</text><inline-styles/><styles/></para><para><coId>8856-1635937558907</coId><text>2. 可靠性：zookeeper最高</text><inline-styles/><styles/></para><para><coId>8083-1635937558907</coId><text>这里，我们就基于redis实现分布式锁。</text><inline-styles/><styles/></para><para><coId>6856-1635937618774</coId><text/><inline-styles/><styles/></para><para><coId>7477-1635937689972</coId><text>setnx user 10 创建key并锁住（无法修改直到释放锁，del user释放锁）</text><inline-styles/><styles/></para><para><coId>4162-1635937618919</coId><text>redis:命令</text><inline-styles/><styles/></para><para><coId>4990-1635937619206</coId><text># set sku:1:info “OK” NX PX 10000</text><inline-styles/><styles/></para><para><coId>1347-1635937619206</coId><text>EX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value 。</text><inline-styles/><styles/></para><para><coId>8284-1635937619206</coId><text>PX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于 PSETEX key millisecond value 。</text><inline-styles/><styles/></para><para><coId>1264-1635937619206</coId><text>NX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。</text><inline-styles/><styles/></para><para><coId>4398-1635937619206</coId><text>XX ：只在键已经存在时，才对键进行设置操作。</text><inline-styles/><styles/></para><image><coId>1983-1635937768192</coId><source>https://note.youdao.com/yws/res/14467/7C51A05978A642CE95E3BDB46A24D878</source><text/><styles><width>516</width><height>413</height></styles></image><image><coId>2630-1635937928666</coId><source>https://note.youdao.com/yws/res/14470/8EE4082CA3E1429D964FBD47D26856C1</source><text/><styles><width>294</width><height>92</height></styles></image><para><coId>7640-1635937920085</coId><text>1.使用setnx上锁，通过del释放锁</text><inline-styles><font-size><from>0</from><to>20</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>5330-1635937984714</coId><text>2.锁一直没有释放，设置key过期时间，自动释放</text><inline-styles><font-size><from>0</from><to>24</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>2932-1635938001161</coId><text>3.上锁后突然出现异常，可以在setnx的同时设置过期时间	</text><inline-styles><font-size><from>0</from><to>30</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>3141-1635938031156</coId><text>set users 10 nx ex 12 //12秒过期</text><inline-styles><font-size><from>0</from><to>29</to><value>16</value></font-size></inline-styles><styles><text-indent>2</text-indent></styles></para><table><coId>7198-1635938133993</coId><resource-list/><content>{"cells":[{"value":"@GetMapping(\"testLock\")\npublic void testLock(){\n    //1获取锁，setne\n    Boolean\nlock = redisTemplate.opsForValue().setIfAbsent(\"lock\", \"111\");\n    //2获取锁成功、查询num的值\n    if(lock){\n        Object value = redisTemplate.opsForValue().get(\"num\");\n        //2.1判断num为空return\n        if(StringUtils.isEmpty(value)){\n           return;\n        }\n        //2.2有值就转成成int\n        int num = Integer.parseInt(value+\"\");\n        //2.3把redis的num加1\n        redisTemplate.opsForValue().set(\"num\", ++num);\n        //2.4释放锁，del\n        redisTemplate.delete(\"lock\");\n    }else{\n        //3获取锁失败、每隔0.1秒再获取\n        try {\n            Thread.sleep(100);\n            testLock();\n        } catch\n(InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}","inlineStyles":{"bold":[{"from":12,"to":22,"value":true},{"from":24,"to":36,"value":true},{"from":84,"to":97,"value":true},{"from":124,"to":130,"value":true},{"from":132,"to":137,"value":true},{"from":165,"to":167,"value":true},{"from":198,"to":211,"value":true},{"from":230,"to":235,"value":true},{"from":273,"to":275,"value":true},{"from":316,"to":322,"value":true},{"from":365,"to":369,"value":true},{"from":398,"to":400,"value":true},{"from":437,"to":450,"value":true},{"from":469,"to":474,"value":true},{"from":513,"to":526,"value":true},{"from":534,"to":540,"value":true},{"from":548,"to":552,"value":true},{"from":589,"to":593,"value":true},{"from":660,"to":665,"value":true}],"italic":[{"from":52,"to":64,"value":true},{"from":65,"to":69,"value":true},{"from":144,"to":160,"value":true},{"from":161,"to":165,"value":true},{"from":246,"to":264,"value":true},{"from":265,"to":273,"value":true},{"from":288,"to":295,"value":true},{"from":342,"to":356,"value":true},{"from":357,"to":365,"value":true},{"from":383,"to":391,"value":true},{"from":411,"to":428,"value":true},{"from":429,"to":437,"value":true},{"from":492,"to":504,"value":true},{"from":505,"to":513,"value":true},{"from":562,"to":580,"value":true},{"from":581,"to":589,"value":true},{"from":614,"to":619,"value":true}],"font-family":[{"from":0,"to":23,"value":"SimSun"},{"from":24,"to":47,"value":"SimSun"},{"from":48,"to":64,"value":"SimSun"},{"from":65,"to":76,"value":"SimSun"},{"from":77,"to":139,"value":"SimSun"},{"from":140,"to":160,"value":"SimSun"},{"from":161,"to":174,"value":"SimSun"},{"from":175,"to":237,"value":"SimSun"},{"from":238,"to":264,"value":"SimSun"},{"from":265,"to":304,"value":"SimSun"},{"from":305,"to":323,"value":"SimSun"},{"from":324,"to":333,"value":"SimSun"},{"from":334,"to":356,"value":"SimSun"},{"from":357,"to":402,"value":"SimSun"},{"from":403,"to":428,"value":"SimSun"},{"from":429,"to":483,"value":"SimSun"},{"from":484,"to":504,"value":"SimSun"},{"from":505,"to":542,"value":"SimSun"},{"from":543,"to":553,"value":"SimSun"},{"from":554,"to":580,"value":"SimSun"},{"from":581,"to":594,"value":"SimSun"},{"from":595,"to":625,"value":"SimSun"},{"from":626,"to":649,"value":"SimSun"},{"from":650,"to":665,"value":"SimSun"},{"from":666,"to":692,"value":"SimSun"},{"from":693,"to":725,"value":"SimSun"},{"from":726,"to":735,"value":"SimSun"},{"from":736,"to":741,"value":"SimSun"},{"from":742,"to":743,"value":"SimSun"}],"color":[{"from":0,"to":11,"value":"#808000"},{"from":12,"to":22,"value":"#008000"},{"from":24,"to":36,"value":"#000080"},{"from":52,"to":64,"value":"#808080"},{"from":65,"to":69,"value":"#808080"},{"from":84,"to":97,"value":"#660e7a"},{"from":124,"to":130,"value":"#008000"},{"from":132,"to":137,"value":"#008000"},{"from":144,"to":160,"value":"#808080"},{"from":161,"to":165,"value":"#808080"},{"from":165,"to":167,"value":"#000080"},{"from":198,"to":211,"value":"#660e7a"},{"from":230,"to":235,"value":"#008000"},{"from":246,"to":264,"value":"#808080"},{"from":265,"to":273,"value":"#808080"},{"from":273,"to":275,"value":"#000080"},{"from":316,"to":322,"value":"#000080"},{"from":342,"to":356,"value":"#808080"},{"from":357,"to":365,"value":"#808080"},{"from":365,"to":369,"value":"#000080"},{"from":398,"to":400,"value":"#008000"},{"from":411,"to":428,"value":"#808080"},{"from":429,"to":437,"value":"#808080"},{"from":437,"to":450,"value":"#660e7a"},{"from":469,"to":474,"value":"#008000"},{"from":492,"to":504,"value":"#808080"},{"from":505,"to":513,"value":"#808080"},{"from":513,"to":526,"value":"#660e7a"},{"from":534,"to":540,"value":"#008000"},{"from":548,"to":552,"value":"#000080"},{"from":562,"to":580,"value":"#808080"},{"from":581,"to":589,"value":"#808080"},{"from":589,"to":593,"value":"#000080"},{"from":620,"to":623,"value":"#0000ff"},{"from":660,"to":665,"value":"#000080"}]}}],"heights":[40],"widths":[620]}</content><styles/></table><para><coId>6096-1635938133993</coId><text>基本实现。</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size><color><from>0</from><to>5</to><value>#333333</value></color><back-color><from>0</from><to>5</to><value>#ffffff</value></back-color></inline-styles><styles/></para><para><coId>8799-1635939083301</coId><text>问题：setnx刚好获取到锁，业务逻辑出现异常，导致锁无法释放</text><inline-styles><color><from>0</from><to>31</to><value>#333333</value></color></inline-styles><styles/></para><para><coId>6570-1635939083301</coId><text>解决：设置过期时间，自动释放锁。</text><inline-styles><color><from>0</from><to>16</to><value>#333333</value></color></inline-styles><styles/></para><image><coId>7281-1635939197720</coId><source>https://note.youdao.com/yws/res/14485/1E890FD3A7FC44369FA034C9DCFFA966</source><text/><styles><width>189</width><height>99</height></styles></image><para><coId>5814-1635939239885</coId><text/><inline-styles/><styles/></para><image><coId>2518-1635939239885</coId><source>https://note.youdao.com/yws/res/14487/112E0A93EFD942668D707FF241FE5E90</source><text/><styles><width>620</width><height>68</height></styles></image><para><coId>1081-1635939307527</coId><text/><inline-styles/><styles/></para><image><coId>4766-1635939307527</coId><source>https://note.youdao.com/yws/res/14489/ADC3F095E2A44B948E97FE84A5AE4096</source><text/><styles><width>620</width><height>275</height></styles></image><para><coId>8040-1635939307527</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>2120-1635940286708</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>7046-1635940286845</coId><text>优化之LUA脚本保证删除的原子性</text><inline-styles><bold><from>0</from><to>16</to><value>true</value></bold><font-family><from>0</from><to>16</to><value>SimSun</value></font-family><font-size><from>0</from><to>16</to><value>21</value></font-size></inline-styles><styles><align>justify</align></styles></para><table><coId>5237-1635940911807</coId><resource-list/><content>{"cells":[{"value":"@GetMapping(\"testLockLua\")\npublic void testLockLua() {\n    //1 声明一个uuid ,将做为一个value 放入我们的key所对应的值中\n    String uuid = UUID.randomUUID().toString();\n    //2 定义一个锁：lua 脚本可以使用同一把锁，来实现删除！\n    String skuId = \"25\"; // 访问skuId 为25号的商品 100008348542\n    String locKey = \"lock:\" + skuId; // 锁住的是每个商品的数据\n\n    // 3 获取锁\n    Boolean lock = redisTemplate.opsForValue().setIfAbsent(locKey, uuid, 3, TimeUnit.SECONDS);\n\n    // 第一种： lock 与过期时间中间不写任何的代码。\n    // redisTemplate.expire(\"lock\",10, TimeUnit.SECONDS);//设置过期时间\n    // 如果true\n    if (lock) {\n        // 执行的业务逻辑开始\n        // 获取缓存中的num 数据\n        Object value = redisTemplate.opsForValue().get(\"num\");\n        // 如果是空直接返回\n        if (StringUtils.isEmpty(value)) {\n            return;\n        }\n        // 不是空 如果说在这出现了异常！ 那么delete 就删除失败！ 也就是说锁永远存在！\n        int num = Integer.parseInt(value + \"\");\n        // 使num 每次+1 放入缓存\n        redisTemplate.opsForValue().set(\"num\", String.valueOf(++num));\n        /*使用lua脚本来锁*/\n        // 定义lua 脚本\n        String script = \"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end\";\n        // 使用redis执行lua执行\n        DefaultRedisScript&lt;Long&gt; redisScript = new DefaultRedisScript&lt;&gt;();\n        redisScript.setScriptText(script);\n        // 设置一下返回值类型 为Long\n        // 因为删除判断的时候，返回的0,给其封装为数据类型。如果不封装那么默认返回String 类型，\n        // 那么返回字符串与0 会有发生错误。\n        redisScript.setResultType(Long.class);\n        // 第一个要是script 脚本 ，第二个需要判断的key，第三个就是key所对应的值。\n        redisTemplate.execute(redisScript, Arrays.asList(locKey), uuid);\n    } else {\n        // 其他线程等待\n        try {\n            // 睡眠\n            Thread.sleep(1000);\n            // 睡醒了之后，调用方法。\n            testLockLua();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}","inlineStyles":{"bold":[{"from":12,"to":25,"value":true},{"from":27,"to":39,"value":true},{"from":202,"to":206,"value":true},{"from":260,"to":268,"value":true},{"from":325,"to":338,"value":true},{"from":391,"to":398,"value":true},{"from":519,"to":522,"value":true},{"from":599,"to":612,"value":true},{"from":631,"to":636,"value":true},{"from":667,"to":670,"value":true},{"from":713,"to":719,"value":true},{"from":793,"to":797,"value":true},{"from":828,"to":830,"value":true},{"from":867,"to":880,"value":true},{"from":899,"to":904,"value":true},{"from":996,"to":1095,"value":true},{"from":1170,"to":1174,"value":true},{"from":1394,"to":1399,"value":true},{"from":1464,"to":1477,"value":true},{"from":1535,"to":1540,"value":true},{"from":1568,"to":1572,"value":true},{"from":1688,"to":1694,"value":true}],"italic":[{"from":55,"to":98,"value":true},{"from":99,"to":103,"value":true},{"from":122,"to":132,"value":true},{"from":151,"to":182,"value":true},{"from":183,"to":187,"value":true},{"from":208,"to":239,"value":true},{"from":240,"to":244,"value":true},{"from":277,"to":291,"value":true},{"from":293,"to":305,"value":true},{"from":306,"to":310,"value":true},{"from":391,"to":398,"value":true},{"from":406,"to":434,"value":true},{"from":435,"to":500,"value":true},{"from":501,"to":514,"value":true},{"from":515,"to":519,"value":true},{"from":539,"to":551,"value":true},{"from":552,"to":575,"value":true},{"from":576,"to":584,"value":true},{"from":647,"to":658,"value":true},{"from":659,"to":667,"value":true},{"from":683,"to":690,"value":true},{"from":739,"to":784,"value":true},{"from":785,"to":793,"value":true},{"from":811,"to":819,"value":true},{"from":841,"to":858,"value":true},{"from":859,"to":867,"value":true},{"from":913,"to":920,"value":true},{"from":938,"to":951,"value":true},{"from":952,"to":971,"value":true},{"from":972,"to":980,"value":true},{"from":1105,"to":1122,"value":true},{"from":1123,"to":1131,"value":true},{"from":1249,"to":1267,"value":true},{"from":1268,"to":1325,"value":true},{"from":1326,"to":1354,"value":true},{"from":1355,"to":1363,"value":true},{"from":1410,"to":1455,"value":true},{"from":1456,"to":1464,"value":true},{"from":1506,"to":1512,"value":true},{"from":1550,"to":1559,"value":true},{"from":1560,"to":1568,"value":true},{"from":1586,"to":1591,"value":true},{"from":1592,"to":1604,"value":true},{"from":1611,"to":1616,"value":true},{"from":1636,"to":1650,"value":true},{"from":1651,"to":1663,"value":true}],"font-family":[{"from":0,"to":26,"value":"SimSun"},{"from":27,"to":54,"value":"SimSun"},{"from":55,"to":98,"value":"SimSun"},{"from":99,"to":146,"value":"SimSun"},{"from":147,"to":182,"value":"SimSun"},{"from":183,"to":239,"value":"SimSun"},{"from":240,"to":291,"value":"SimSun"},{"from":293,"to":305,"value":"SimSun"},{"from":306,"to":400,"value":"SimSun"},{"from":402,"to":434,"value":"SimSun"},{"from":435,"to":500,"value":"SimSun"},{"from":501,"to":514,"value":"SimSun"},{"from":515,"to":530,"value":"SimSun"},{"from":531,"to":551,"value":"SimSun"},{"from":552,"to":575,"value":"SimSun"},{"from":576,"to":638,"value":"SimSun"},{"from":639,"to":658,"value":"SimSun"},{"from":659,"to":700,"value":"SimSun"},{"from":701,"to":720,"value":"SimSun"},{"from":721,"to":730,"value":"SimSun"},{"from":731,"to":784,"value":"SimSun"},{"from":785,"to":832,"value":"SimSun"},{"from":833,"to":858,"value":"SimSun"},{"from":859,"to":929,"value":"SimSun"},{"from":930,"to":951,"value":"SimSun"},{"from":952,"to":971,"value":"SimSun"},{"from":972,"to":1096,"value":"SimSun"},{"from":1097,"to":1122,"value":"SimSun"},{"from":1123,"to":1197,"value":"SimSun"},{"from":1198,"to":1240,"value":"SimSun"},{"from":1241,"to":1267,"value":"SimSun"},{"from":1268,"to":1325,"value":"SimSun"},{"from":1326,"to":1354,"value":"SimSun"},{"from":1355,"to":1401,"value":"SimSun"},{"from":1402,"to":1455,"value":"SimSun"},{"from":1456,"to":1528,"value":"SimSun"},{"from":1529,"to":1541,"value":"SimSun"},{"from":1542,"to":1559,"value":"SimSun"},{"from":1560,"to":1573,"value":"SimSun"},{"from":1574,"to":1591,"value":"SimSun"},{"from":1592,"to":1623,"value":"SimSun"},{"from":1624,"to":1650,"value":"SimSun"},{"from":1651,"to":1677,"value":"SimSun"},{"from":1678,"to":1720,"value":"SimSun"},{"from":1721,"to":1753,"value":"SimSun"},{"from":1754,"to":1763,"value":"SimSun"},{"from":1764,"to":1769,"value":"SimSun"},{"from":1770,"to":1771,"value":"SimSun"}],"color":[{"from":0,"to":11,"value":"#808000"},{"from":12,"to":25,"value":"#008000"},{"from":27,"to":39,"value":"#000080"},{"from":55,"to":98,"value":"#808080"},{"from":99,"to":103,"value":"#808080"},{"from":151,"to":182,"value":"#808080"},{"from":183,"to":187,"value":"#808080"},{"from":202,"to":206,"value":"#008000"},{"from":208,"to":239,"value":"#808080"},{"from":240,"to":244,"value":"#808080"},{"from":260,"to":268,"value":"#008000"},{"from":277,"to":291,"value":"#808080"},{"from":293,"to":305,"value":"#808080"},{"from":306,"to":310,"value":"#808080"},{"from":325,"to":338,"value":"#660e7a"},{"from":379,"to":380,"value":"#0000ff"},{"from":391,"to":398,"value":"#660e7a"},{"from":406,"to":434,"value":"#808080"},{"from":435,"to":500,"value":"#808080"},{"from":501,"to":514,"value":"#808080"},{"from":515,"to":519,"value":"#808080"},{"from":519,"to":522,"value":"#000080"},{"from":539,"to":551,"value":"#808080"},{"from":552,"to":575,"value":"#808080"},{"from":576,"to":584,"value":"#808080"},{"from":599,"to":612,"value":"#660e7a"},{"from":631,"to":636,"value":"#008000"},{"from":647,"to":658,"value":"#808080"},{"from":659,"to":667,"value":"#808080"},{"from":667,"to":670,"value":"#000080"},{"from":713,"to":719,"value":"#000080"},{"from":739,"to":784,"value":"#808080"},{"from":785,"to":793,"value":"#808080"},{"from":793,"to":797,"value":"#000080"},{"from":828,"to":830,"value":"#008000"},{"from":841,"to":858,"value":"#808080"},{"from":859,"to":867,"value":"#808080"},{"from":867,"to":880,"value":"#660e7a"},{"from":899,"to":904,"value":"#008000"},{"from":938,"to":951,"value":"#808080"},{"from":952,"to":971,"value":"#808080"},{"from":972,"to":980,"value":"#808080"},{"from":996,"to":1095,"value":"#008000"},{"from":1105,"to":1122,"value":"#808080"},{"from":1123,"to":1131,"value":"#808080"},{"from":1170,"to":1174,"value":"#000080"},{"from":1249,"to":1267,"value":"#808080"},{"from":1268,"to":1325,"value":"#808080"},{"from":1326,"to":1354,"value":"#808080"},{"from":1355,"to":1363,"value":"#808080"},{"from":1394,"to":1399,"value":"#000080"},{"from":1410,"to":1455,"value":"#808080"},{"from":1456,"to":1464,"value":"#808080"},{"from":1464,"to":1477,"value":"#660e7a"},{"from":1535,"to":1540,"value":"#000080"},{"from":1550,"to":1559,"value":"#808080"},{"from":1560,"to":1568,"value":"#808080"},{"from":1568,"to":1572,"value":"#000080"},{"from":1586,"to":1591,"value":"#808080"},{"from":1592,"to":1604,"value":"#808080"},{"from":1617,"to":1621,"value":"#0000ff"},{"from":1636,"to":1650,"value":"#808080"},{"from":1651,"to":1663,"value":"#808080"},{"from":1688,"to":1694,"value":"#000080"}]}}],"heights":[40],"widths":[620]}</content><styles/></table><para><coId>4759-1635940288242</coId><text>Lua 脚本详解：</text><inline-styles><color><from>0</from><to>9</to><value>#333333</value></color><back-color><from>0</from><to>9</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><image><coId>3855-1635940975791</coId><source>https://note.youdao.com/yws/res/14496/C6EB702063A24B63A84A3717E06DE3C7</source><text/><styles><width>553</width><height>258</height></styles></image><para><coId>6765-1635940288395</coId><text>项目中正确使用：</text><inline-styles/><styles><align>justify</align></styles></para><table><coId>4479-1635940985927</coId><resource-list/><content>{"cells":[{"verticalAlign":"top","wrap":true,"value":"1. 定义key，key应该是为每个sku定义的，也就是每个sku有一把锁。\nString locKey =\"lock:\"+skuId; // 锁住的是每个商品的数据\nBoolean lock = redisTemplate.opsForValue().setIfAbsent(locKey, uuid,3,TimeUnit.SECONDS);\n ","inlineStyles":{"bold":[{"from":54,"to":61,"value":true},{"from":99,"to":112,"value":true},{"from":163,"to":170,"value":true}],"italic":[{"from":69,"to":83,"value":true},{"from":163,"to":170,"value":true}],"font-size":[{"from":39,"to":83,"value":12},{"from":84,"to":172,"value":12},{"from":173,"to":174,"value":10}],"color":[{"from":54,"to":61,"value":"#008000"},{"from":69,"to":83,"value":"#808080"},{"from":99,"to":112,"value":"#660e7a"},{"from":152,"to":153,"value":"#0000ff"},{"from":163,"to":170,"value":"#660e7a"}],"back-color":[{"from":39,"to":83,"value":"#ffffff"},{"from":84,"to":172,"value":"#ffffff"}]}}],"heights":[40],"widths":[426]}</content><styles/></table><image><coId>5823-1635940991908</coId><source>https://note.youdao.com/yws/res/14499/634EB29ECB3F4980A6E91728382A5981</source><text/><styles><width>553</width><height>181</height></styles></image><para><coId>2060-1635940990468</coId><text/><inline-styles/><styles/></para><para><coId>4070-1635940990468</coId><text>1.1.1.           总结</text><inline-styles><bold><from>0</from><to>6</to><value>true</value></bold><bold><from>17</from><to>19</to><value>true</value></bold><font-family><from>0</from><to>17</to><value>Times New Roman</value></font-family><font-family><from>17</from><to>19</to><value>SimSun</value></font-family><font-size><from>0</from><to>6</to><value>21</value></font-size><font-size><from>6</from><to>17</to><value>9</value></font-size><font-size><from>17</from><to>19</to><value>21</value></font-size></inline-styles><styles><align>justify</align></styles></para><para><coId>6313-1635941004966</coId><text>1、加锁</text><inline-styles><font-size><from>0</from><to>4</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#333333</value></color><back-color><from>0</from><to>4</to><value>#ffffff</value></back-color></inline-styles><styles/></para><table><coId>1363-1635941004966</coId><resource-list/><content>{"cells":[{"verticalAlign":"top","wrap":true,"value":"// 1. 从redis中获取锁,set k1 v1 px 20000 nx\n\n  String uuid = UUID.randomUUID().toString();\n\nBoolean lock = this.redisTemplate.opsForValue()\n\n      .setIfAbsent(\"lock\", uuid, 2, TimeUnit.SECONDS);","inlineStyles":{"bold":[{"from":102,"to":106,"value":true},{"from":107,"to":120,"value":true},{"from":155,"to":161,"value":true},{"from":181,"to":188,"value":true}],"italic":[{"from":0,"to":38,"value":true},{"from":40,"to":42,"value":true},{"from":61,"to":71,"value":true},{"from":181,"to":188,"value":true}],"color":[{"from":0,"to":38,"value":"#808080"},{"from":40,"to":42,"value":"#808080"},{"from":102,"to":106,"value":"#000080"},{"from":107,"to":120,"value":"#660e7a"},{"from":155,"to":161,"value":"#008000"},{"from":169,"to":170,"value":"#0000ff"},{"from":181,"to":188,"value":"#660e7a"}],"back-color":[{"from":0,"to":38,"value":"#ffffff"},{"from":40,"to":85,"value":"#ffffff"},{"from":87,"to":134,"value":"#ffffff"},{"from":136,"to":190,"value":"#ffffff"}]}}],"heights":[40],"widths":[426]}</content><styles/></table><para><coId>1012-1635941004966</coId><text/><inline-styles/><styles/></para><para><coId>7562-1635941004966</coId><text>2、使用lua释放锁</text><inline-styles><font-family><from>2</from><to>4</to><value>SimSun</value></font-family><font-size><from>0</from><to>10</to><value>16</value></font-size><color><from>0</from><to>10</to><value>#333333</value></color><back-color><from>2</from><to>10</to><value>#ffffff</value></back-color></inline-styles><styles/></para><table><coId>8081-1635941004966</coId><resource-list/><content>{"cells":[{"verticalAlign":"top","wrap":true,"value":"// 2. 释放锁 del\n\n  String script = \"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end\";\n\n  // 设置lua脚本返回的数据类型\n\n  DefaultRedisScript&lt;Long&gt; redisScript = new DefaultRedisScript&lt;&gt;();\n\n  // 设置lua脚本返回类型为Long\n\n  redisScript.setResultType(Long.class);\n\nredisScript.setScriptText(script);\n\n  redisTemplate.execute(redisScript, Arrays.asList(\"lock\"),uuid);","inlineStyles":{"bold":[{"from":33,"to":132,"value":true},{"from":197,"to":201,"value":true},{"from":282,"to":287,"value":true},{"from":329,"to":342,"value":true},{"from":378,"to":384,"value":true}],"italic":[{"from":0,"to":13,"value":true},{"from":15,"to":17,"value":true},{"from":137,"to":154,"value":true},{"from":156,"to":158,"value":true},{"from":228,"to":247,"value":true},{"from":249,"to":251,"value":true},{"from":371,"to":377,"value":true}],"font-size":[{"from":17,"to":133,"value":13},{"from":135,"to":154,"value":13},{"from":156,"to":224,"value":13},{"from":226,"to":247,"value":13},{"from":249,"to":289,"value":13},{"from":291,"to":325,"value":13},{"from":327,"to":392,"value":13}],"color":[{"from":0,"to":13,"value":"#808080"},{"from":15,"to":17,"value":"#808080"},{"from":33,"to":132,"value":"#008000"},{"from":137,"to":154,"value":"#808080"},{"from":156,"to":158,"value":"#808080"},{"from":197,"to":201,"value":"#000080"},{"from":228,"to":247,"value":"#808080"},{"from":249,"to":251,"value":"#808080"},{"from":282,"to":287,"value":"#000080"},{"from":329,"to":342,"value":"#660e7a"},{"from":378,"to":384,"value":"#008000"}],"back-color":[{"from":0,"to":13,"value":"#ffffff"},{"from":15,"to":133,"value":"#ffffff"},{"from":135,"to":154,"value":"#ffffff"},{"from":156,"to":224,"value":"#ffffff"},{"from":226,"to":247,"value":"#ffffff"},{"from":249,"to":289,"value":"#ffffff"},{"from":291,"to":325,"value":"#ffffff"},{"from":327,"to":392,"value":"#ffffff"}]}}],"heights":[40],"widths":[426]}</content><styles/></table><para><coId>3258-1635941004966</coId><text/><inline-styles/><styles/></para><para><coId>8956-1635941004966</coId><text>3、重试</text><inline-styles><font-size><from>0</from><to>4</to><value>16</value></font-size><color><from>0</from><to>4</to><value>#333333</value></color><back-color><from>2</from><to>4</to><value>#ffffff</value></back-color></inline-styles><styles/></para><table><coId>4950-1635941004966</coId><resource-list/><content>{"cells":[{"verticalAlign":"top","wrap":true,"value":"Thread.sleep(500);\n\ntestLock();","inlineStyles":{"italic":[{"from":7,"to":12,"value":true}],"color":[{"from":13,"to":16,"value":"#0000ff"}],"back-color":[{"from":0,"to":18,"value":"#ffffff"},{"from":20,"to":31,"value":"#ffffff"}]}}],"heights":[40],"widths":[426]}</content><styles/></table><para><coId>4053-1635941004969</coId><text>为了确保分布式锁可用，我们至少要确保锁的实现同时满足以下四个条件：</text><inline-styles><bold><from>24</from><to>32</to><value>true</value></bold><font-size><from>0</from><to>33</to><value>16</value></font-size><color><from>0</from><to>33</to><value>#333333</value></color><back-color><from>0</from><to>33</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><para><coId>7230-1635941017878</coId><text>- 互斥性。在任意时刻，只有一个客户端能持有锁。</text><inline-styles><font-size><from>0</from><to>24</to><value>16</value></font-size><color><from>0</from><to>24</to><value>#333333</value></color><back-color><from>0</from><to>24</to><value>#ffffff</value></back-color></inline-styles><styles/></para><para><coId>7245-1635941017878</coId><text>- 不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</text><inline-styles><font-size><from>0</from><to>49</to><value>16</value></font-size><color><from>0</from><to>49</to><value>#333333</value></color><back-color><from>0</from><to>49</to><value>#ffffff</value></back-color></inline-styles><styles/></para><para><coId>3663-1635941017878</coId><text>- 解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。</text><inline-styles><font-size><from>0</from><to>42</to><value>16</value></font-size><color><from>0</from><to>42</to><value>#333333</value></color><back-color><from>0</from><to>42</to><value>#ffffff</value></back-color></inline-styles><styles/></para><para><coId>0044-1635941017878</coId><text>- 加锁和解锁必须具有原子性。</text><inline-styles><font-size><from>0</from><to>15</to><value>16</value></font-size><color><from>0</from><to>15</to><value>#333333</value></color><back-color><from>0</from><to>15</to><value>#ffffff</value></back-color></inline-styles><styles/></para></body></note>