<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><heading compat="true" level="b"><coId>7820-1596428167754</coId><text>在JS中提供了三种包装类，通过这些包装类可以将基本数据类型转换为对象</text><inline-styles><bold><from>0</from><to>34</to><value>true</value></bold><font-size><from>0</from><to>34</to><value>18</value></font-size><color><from>0</from><to>34</to><value>#595959</value></color></inline-styles><styles/></heading><heading compat="true" level="1"><coId>4240-1596428413983</coId><text>String()</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>28</value></font-size></inline-styles><styles/></heading><image><coId>1370-1596450839762</coId><source>https://note.youdao.com/yws/res/8239/B20F5D4D05E9465F8E324F849280B569</source><text/><styles><width>620</width><height>130</height></styles></image><para><coId>2415-1596451587665</coId><text>charAt();//返回字符串中指定位置的字符</text><inline-styles/><styles/></para><para><coId>2934-1596451790084</coId><text>charCodeAt();//获取指定位置的字符编码</text><inline-styles/><styles/></para><para><coId>3049-1596451832815</coId><text>String.formCharCode();//根据字符编码获取字符</text><inline-styles/><styles/></para><para><coId>1235-1596451587665</coId><text>concat();//连接两个或多个字符串</text><inline-styles/><styles/></para><para><coId>6727-1596451918331</coId><text>indexOf("a"，int);//检索字符串中第一次出现指定字符的位置,若没有返回-1.可以指定int开始查找的位置</text><inline-styles/><styles/></para><para><coId>5563-1596451977588</coId><text>lastIndexOf();检索字符串中最后一次出现指定字符的位置，也可以指定开始查找的位置</text><inline-styles/><styles/></para><para><coId>8760-1596452180289</coId><text>slice(start,end);//截取指定长度的字符串</text><inline-styles/><styles/></para><para><coId>7060-1596452262367</coId><text>substring();//喝silce类似，第二个参数不支持负数默认变成0</text><inline-styles/><styles/></para><para><coId>4517-1596452516644</coId><text>split();//按照括号内的字符将一个字符串拆分成数组，可以使用空串</text><inline-styles/><styles/></para><para><coId>8091-1596452678492</coId><text>toUpperCase();//将一个字符串转化为大写</text><inline-styles/><styles/></para><para><coId>6750-1596452705125</coId><text>toLowerCase();//将一个字符串转化为小写</text><inline-styles/><styles/></para><heading compat="true" level="1"><coId>7915-1596451565767</coId><text>Number()</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>28</value></font-size></inline-styles><styles/></heading><heading compat="true" level="1"><coId>4462-1596428426673</coId><text>Boolean()</text><inline-styles><bold><from>0</from><to>9</to><value>true</value></bold><font-size><from>0</from><to>9</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>6074-1596428498079</coId><text/><inline-styles/><styles/></para></body></note>