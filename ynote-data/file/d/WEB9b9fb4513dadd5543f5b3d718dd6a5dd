{"2":"1","3":"Ju9C-1621846617594","4":{"version":1,"incompatibleVersion":0,"fv":"0"},"5":[{"3":"3060-1621846615933","5":[{"2":"2","3":"p5PQ-1621846617594","7":[{"8":"向Collection接口的实现类的对象中添加数据obj时，要求（非必要）obj所在类要重写equals()","9":[{"2":"i"},{"2":"inlineCode"}]}]}]},{"3":"EF88-1654416121070","5":[{"2":"2","3":"MQin-1654416121068"}]},{"3":"B2gY-1654416060846","4":{"l":"h1"},"5":[{"2":"2","3":"1yv8-1654416060835","7":[{"8":"collection接口提供了几个方法：","9":[{"0":"#FFF2CC","2":"bg"},{"2":"u"},{"2":"b"}]}]}],"6":"h"},{"3":"MdeR-1654493867315","4":{"version":1},"5":[{"2":"2","3":"IJ1r-1654493867316","7":[{"8":"单列集合，用来存储一个一个的对象"}]}]},{"3":"A9T7-1654411053070","5":[{"2":"2","3":"4ga1-1654411053068","7":[{"8":"size(); "}]}]},{"3":"OCbs-1654415864136","5":[{"2":"2","3":"TkIB-1654415864134","7":[{"8":"add(); "}]}]},{"3":"S9FE-1654415863107","5":[{"2":"2","3":"by0v-1654415863104","7":[{"8":"addall(集合); "}]}]},{"3":"eyKR-1654415868312","5":[{"2":"2","3":"b2Wz-1654415868311","7":[{"8":"isEmpty(); "}]}]},{"3":"DDpu-1654415870447","5":[{"2":"2","3":"LHsz-1654415870446","7":[{"8":"clear();清空元素 "}]}]},{"3":"ylAg-1654415871782","5":[{"2":"2","3":"6aMN-1654415871781","7":[{"8":"contains(Object obj);判断当前元素是否包含obj "}]}]},{"3":"o8Ja-1654415876161","5":[{"2":"2","3":"pyd9-1654415876160","7":[{"8":"containsAll(Collection coll1);判断形参coll1中的所有元素是否都存在于当前集合中。"}]}]},{"3":"PZUk-1654415713972","5":[{"2":"2","3":"H9yE-1654415713970","7":[{"8":"remove(obj);移除元素"}]}]},{"3":"FUHI-1654415952874","5":[{"2":"2","3":"DAMS-1654415952864","7":[{"8":"removeAll(Collection coll1);从集合中移除包含coll1的所有元素"}]}]},{"3":"RJPV-1654415900524","5":[{"2":"2","3":"D9kM-1654415900523","7":[{"8":"retainAll(Collection coll1);获取当前集合和coll1的交集，并使当前集合成为交集"}]}]},{"3":"Ctu6-1654415881127","5":[{"2":"2","3":"4v5I-1654415881126","7":[{"8":"coll.equals(colls);对比两个集合是否相同（有序集合还需比较顺序）"}]}]},{"3":"ouOC-1654415881332","5":[{"2":"2","3":"tZH9-1654415881330","7":[{"8":"hashcode();返回当前对象的哈希值"}]}]},{"3":"IjaU-1654416908257","5":[{"2":"2","3":"nWCQ-1654416908255","7":[{"8":"iterator();迭代器，返回Iterator接口的实例，用于遍集合元素，Iterator接口中的方法："}]}]},{"3":"CYlb-1654417655415","4":{"s":{"ti":28}},"5":[{"2":"2","3":"P4LN-1654417655411","7":[{"8":"next();方法遍历到下一个元素（指针下移），并将元素返回"}]}]},{"3":"sJc7-1654417827784","4":{"s":{"ti":28}},"5":[{"2":"2","3":"zmSG-1654417827781","7":[{"8":"remove();移除当前集合元素，此方法不同于集合调用remove。如果还未调用next()或在上一次调用next方法之后已经调用了remove方法，再调用remove都会报illegalStateException。"}]}]},{"3":"rlBI-1654417331664","4":{"version":1,"u":"https://note.youdao.com/yws/res/18185/WEBRESOURCEb6352aad10848dde47876145b7531828","w":582,"h":97},"6":"im"},{"3":"4s3P-1654416604950","5":[{"2":"2","3":"aKxl-1654416604948","7":[{"8":"toArray(); 将当前集合转换为数组"}]}]},{"3":"PSrw-1654416888135","5":[{"2":"2","3":"Gorp-1654416888133","7":[{"8":"toArray(T[] a); 将当前集合转换为数组"}]}]},{"3":"5jpd-1654415881476","5":[{"2":"2","3":"4a3h-1654415881475","7":[{"8":"Arrays.asList(new String[]{...}); 将数组转换为集合（list集合）生成的是不可变集合（只读集合）"}]}]},{"3":"Q6AU-1654416808617","4":{"version":1,"u":"https://note.youdao.com/yws/res/18174/WEBRESOURCEf366de6fba6c4b1a543aaf992e62705e","w":582,"h":56},"6":"im"},{"3":"dwxy-1654415881780","4":{"s":{"ti":28}},"5":[{"2":"2","3":"IYnw-1654415881779","7":[{"8":"需使用包装类进行转换"}]}]},{"3":"wufG-1654415714170","5":[{"2":"2","3":"STLZ-1654415714169"}]},{"3":"QBun-1654418887477","4":{"l":"h1"},"5":[{"2":"2","3":"OclU-1654418887475","7":[{"8":"List接口："}]}],"6":"h"},{"3":"eShl-1654487284133","4":{"version":1},"5":[{"2":"2","3":"9NWp-1654487284134","7":[{"8":"存储有序的可重复的数据"}]}]},{"3":"v2pw-1654429267765","4":{"version":1},"5":[{"2":"2","3":"rbaS-1654429267763","7":[{"8":"List接口提供的常用方法：","9":[{"0":"#FFF2CC","2":"bg"},{"2":"b"},{"2":"u"}]}]}]},{"3":"aMNO-1654429382023","4":{"version":1},"5":[{"2":"2","3":"OrVE-1654429382021","7":[{"8":"void add(int index， object ele):在index位置插入ele元素"}]}]},{"3":"6I5L-1654429417824","4":{"version":1},"5":[{"2":"2","3":"CYNx-1654429417822","7":[{"8":"boolean addAll(int index，collection eles):从index位置开始将eLes中的所有元素添加进来"}]}]},{"3":"apgN-1654429472311","4":{"version":1},"5":[{"2":"2","3":"lZEb-1654429472310","7":[{"8":"Object get(int index)∶获取指定index位置的元素"}]}]},{"3":"8kC2-1654429417963","4":{"version":1},"5":[{"2":"2","3":"86XQ-1654429417961","7":[{"8":"int indexOf(object obj):返回obj在集合中首次出现的位置"}]}]},{"3":"s0rP-1654429418094","4":{"version":1},"5":[{"2":"2","3":"dDJ2-1654429418093","7":[{"8":"int LastIndexOf(object obj):返回obj在当前集合中末次出现的位置object remove(int index):移除指定index位置的元素，并返回此元素"}]}]},{"3":"kY3N-1654429517880","4":{"version":1},"5":[{"2":"2","3":"Syk8-1654429517870","7":[{"8":"Object set(int index, object ele):设置指定index位置的元素为eLe"}]}]},{"3":"Hj5s-1654429418211","4":{"version":1},"5":[{"2":"2","3":"s7UC-1654429418210","7":[{"8":"list subList(int fromIndex, int toIndex):返回从fromIndex到toIndex位置的左闭右开子集合"}]}]},{"3":"cwYs-1656392959148","4":{"version":1},"5":[{"2":"2","3":"P9i0-1656392959146","7":[{"8":"List.of(1,2,3/obj,obj)生成的集合也是不可变集合（只读集合）"}]}]},{"3":"BVsn-1654418927146","4":{"l":"h3"},"5":[{"2":"2","3":"LJ0C-1654418927145","7":[{"8":"ArrayList："}]}],"6":"h"},{"3":"i1lL-1654419044074","4":{"version":1},"5":[{"2":"2","3":"itwI-1654419044075","7":[{"8":"作为List接口的主要实现；线程不安全，效率高，底层使用Object[] elementData存储。可以存储null"}]}]},{"3":"Rshz-1654418966116","4":{"l":"h3"},"5":[{"2":"2","3":"Mxup-1654418966115","7":[{"8":"LinkedList："}]}],"6":"h"},{"3":"py4j-1654419059690","4":{"version":1},"5":[{"2":"2","3":"haxf-1654419059691","7":[{"8":"底层使用双向链表的方式进行存储，对于频繁的插入删除操作,使用此类效率比ArrayList高。可以存储null"}]}]},{"3":"iiGk-1654418970622","4":{"l":"h3"},"5":[{"2":"2","3":"chWM-1654418970621","7":[{"8":"Vector："}]}],"6":"h"},{"3":"mdBH-1654415714385","5":[{"2":"2","3":"EZN3-1654415714383","7":[{"8":"作为List接口的"},{"8":"古老实现，线程安全的","9":[{"0":"#262626","2":"c"}]},{"8":"，效率低，底层使用Object[] elementData存储"}]}]},{"3":"9GvX-1654426250745","4":{"l":"h3"},"5":[{"2":"2","3":"m0vn-1654426250743","7":[{"8":"ArrayList源码分析：","9":[{"2":"b"}]}]}],"6":"h"},{"3":"rmT6-1654426276151","5":[{"2":"2","3":"tp9d-1654426276149","7":[{"8":"jdk7中：","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"GMP9-1654426439639","5":[{"2":"2","3":"eaYh-1654426439637","7":[{"8":"ArrayList list \u003d new ArrayLst();//底层创建了长度是10的Object[]数组elementData。","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"25ai-1654426380501","5":[{"2":"2","3":"vUmC-1654426380499","7":[{"8":"List.add ( 123); //elementData[0] \u003d new Integer(123);","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"ZKBR-1654426289890","4":{"version":1},"5":[{"2":"2","3":"W0QA-1654426289889","7":[{"8":"...","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"Oe8m-1654426289892","4":{"version":1},"5":[{"2":"2","3":"ckd6-1654426289891","7":[{"8":"list.add(11);//如果此次的添加导致底层elementData数组容量不够，则扩容。","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"VUBf-1654426289894","4":{"version":1},"5":[{"2":"2","3":"BNDA-1654426289893","7":[{"8":"默认情况下，扩容为原来的容量的1.5倍，同时需要将原有数组中的数据复制到新的数组中。","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"cIA5-1654426289896","4":{"version":1},"5":[{"2":"2","3":"9ZYr-1654426289895","7":[{"8":"结论:建议开发中使用带参的构造器: ArrayList list \u003d new ArrayList(int capacity)","9":[{"0":"#7B7B7B","2":"c"}]}]}]},{"3":"NewO-1654426449020","4":{"version":1},"5":[{"2":"2","3":"TXAG-1654426449019","7":[{"8":"jdk8中：","9":[{"0":"#262626","2":"c"}]}]}]},{"3":"WL4v-1654426470247","4":{"version":1},"5":[{"2":"2","3":"HnRh-1654426470245","7":[{"8":"ArrayList list \u003d new ArrayList( );//底层object[] elementData初始化为{},并没有创建长度为10的数组。"}]}]},{"3":"Pklc-1654426757366","4":{"version":1},"5":[{"2":"2","3":"iFMS-1654426757365","7":[{"8":"list.add(123);//第一次调用add()时，底层才创建了长度10的数组，并将数据123添加到eLementData[0]"}]}]},{"3":"wPOq-1654426801698","4":{"version":1},"5":[{"2":"2","3":"STP0-1654426801696","7":[{"8":"后续的添加扩容操作和jdk7相同。"}]}]},{"3":"hWg4-1654426865323","4":{"version":1},"5":[{"2":"2","3":"5a5s-1654426865313","7":[{"8":"小结: jdk7中的ArrayList的对象的创建类似于单例的饿汉式，而jdk8中的ArrayList的对象的创建类似于单例的懒汉式，延迟了数组的创建，节省内存。"}]}]},{"3":"27zE-1654426900824","4":{"l":"h3"},"5":[{"2":"2","3":"wOOP-1654426900823","7":[{"8":"LinkedList源码分析：","9":[{"2":"b"}]}]}],"6":"h"},{"3":"vjL9-1654426918747","5":[{"2":"2","3":"cuK9-1654426918746","7":[{"8":"LinkedList list \u003d new LinkedList();内部声明了Node类型的first和Last属性，默认值为null。"}]}]},{"3":"gVXt-1654429006997","5":[{"2":"2","3":"Ru3l-1654429006995","7":[{"8":"List.add(123);//将123封装到Node中，创建了Node对象。"}]}]},{"3":"tNLS-1654429044684","5":[{"2":"2","3":"xj7X-1654429044682","7":[{"8":"其中，Node定义为:体现了LinkedList的双向链表的说法"}]}]},{"3":"SEF4-1654429053222","4":{"version":1,"u":"https://note.youdao.com/yws/res/18263/WEBRESOURCE9a4fc8e4f262fe5f5839f8142216b768","w":400,"h":177},"6":"im"},{"3":"pGXS-1654418861672","4":{"l":"h1"},"5":[{"2":"2","3":"wAQP-1654418861670","7":[{"8":"Set集合（接口："}]}],"6":"h"},{"3":"QSvg-1654430891039","4":{"version":1},"5":[{"2":"2","3":"l9ZE-1654430891040","7":[{"8":"存储无序的，不可重复的数据。"}]}]},{"3":"8kh2-1654431115239","4":{"version":1},"5":[{"2":"2","3":"yqEt-1654431115238","7":[{"8":"无序性！\u003d随机性。存储的数据在底层数组中并非按照数组索引的顺序添加，而是根据数据的哈希值决定的。"}]}]},{"3":"kb6e-1654431112977","4":{"version":1},"5":[{"2":"2","3":"PYcb-1654431112973","7":[{"8":"不可重复性:保证添加的元素按照equals()判断时，不能返回true.即相同元素只能添加一个。"}]}]},{"3":"C4sz-1654430561926","4":{"version":1},"5":[{"2":"2","3":"oDsi-1654430561927","7":[{"8":"set接口中没有定义新的方法，使用的都是Collection中声明过的方法。"}]}]},{"3":"Kxsf-1654431216838","4":{"version":1},"6":"hr"},{"3":"UPIH-1654431210754","4":{"version":1},"5":[{"2":"2","3":"ClT5-1654431210752","7":[{"8":"添加过程，以HashSet为例"}]}]},{"3":"n47j-1654432570142","4":{"version":1},"5":[{"2":"2","3":"qh5S-1654432570132","7":[{"8":"我们向HashSet中添加元素q,首先调用元素α所在类的hashCode()方法，计算元素a的哈希值，此哈希值接着通过某种算法计算出在HashSet底层数组中的存放位置（即为:索引位置），判断数组此位置上是否已经有元素："}]}]},{"3":"Ai9E-1654432713810","4":{"li":"G3cp-1654432734362","lt":"unordered","ll":1},"5":[{"2":"2","3":"LHAD-1654432713807","7":[{"8":"如果此位置上没有其他元素，则元素α添加成功。"}]}],"6":"l"},{"3":"uKHE-1654432682361","4":{"li":"G3cp-1654432734362","lt":"unordered","ll":1},"5":[{"2":"2","3":"PC4A-1654432682360","7":[{"8":"如果此位置上有其他元素b(或以链表形式存在的多个元素），则比较元素a与元素b的hash值:"}]}],"6":"l"},{"3":"jCyK-1654432682363","4":{"li":"rWMu-1654432745891","lt":"unordered","ll":2},"5":[{"2":"2","3":"yvLs-1654432682362","7":[{"8":"如果hash值不相同，则元素a添加成功。"},{"8":"*","9":[{"0":"#FF0001","2":"c"}]}]}],"6":"l"},{"3":"4b6H-1654432682365","4":{"li":"rWMu-1654432745891","lt":"unordered","ll":2},"5":[{"2":"2","3":"XcD7-1654432682364","7":[{"8":"如果hash 值相同，进而需要调用元素α所在类的equLas()方法:"}]}],"6":"l"},{"3":"nkxg-1654432682367","4":{"li":"PIfD-1654432759129","lt":"unordered","ll":3},"5":[{"2":"2","3":"SPNC-1654432682366","7":[{"8":"equals()返回true,元素α添加失败"}]}],"6":"l"},{"3":"b8nG-1654432682369","4":{"li":"PIfD-1654432759129","lt":"unordered","ll":3},"5":[{"2":"2","3":"pLfX-1654432682368","7":[{"8":"equals( )返回false,则元素a添加成功。"},{"8":"*","9":[{"0":"#FF0001","2":"c"}]}]}],"6":"l"},{"3":"Yi4E-1654431213421","4":{"version":1},"5":[{"2":"2","3":"sSYP-1654431213419","7":[{"8":"对于添加成功的带"},{"8":"*","9":[{"0":"#FF0001","2":"c"}]},{"8":"的情况而言，元素a与已经存在指定索引位置上数据以链表的方式存储。总结: 七上八下"}]}]},{"3":"qzXj-1654432905372","4":{"version":1},"5":[{"2":"2","3":"KNwB-1654432905370","7":[{"8":"jdk 7 ︰元素α放到数组中，指向原来的元素。"}]}]},{"3":"9fh6-1654432898256","4":{"version":1},"5":[{"2":"2","3":"IACC-1654432898255","7":[{"8":"jdk 8 ∶原来的元素在数组中，指向元素α"}]}]},{"3":"1RTd-1654477154287","4":{"version":1},"6":"hr"},{"3":"b5Ku-1654434333525","4":{"version":1},"5":[{"2":"2","3":"sCuz-1654434333521","7":[{"8":"为什么用Eclipse/IDEA复写hashSode方法，有31这个数字?"}]}]},{"3":"dLVV-1654434367035","4":{"version":1},"5":[{"2":"2","3":"fQMR-1654434367034","7":[{"8":"选择系数的时候要选择尽量大的系数。因为如果计算出来的hash地址越大，所谓的“冲突”就越少，查找起来效率也会提高。(减少冲突)"}]}]},{"3":"BOZo-1654477487054","4":{"version":1},"6":"hr"},{"3":"5Gm8-1654477336264","4":{"version":1},"5":[{"2":"2","3":"Ywzf-1654477336261","7":[{"8":"要求:向Set中添加的数据，其所在的类一定要重写hashcode( )和equals()","9":[{"0":"#FFF2CC","2":"bg"}]}]}]},{"3":"jdAZ-1654477488544","4":{"version":1},"5":[{"2":"2","3":"nn2R-1654477488543","7":[{"8":"要求:重写的hashCode()和equals()尽可能保持一致性:相等的对象必须具有相等的散列码"}]}]},{"3":"4zO2-1654477527541","4":{"version":1},"5":[{"2":"2","3":"gRap-1654477527540","7":[{"8":"重写两个方法的小技巧:对象中用作equals()方法比较的Field，都应该用来计算hashCode"}]}]},{"3":"9ZgD-1654418861925","4":{"l":"h3"},"5":[{"2":"2","3":"FdL7-1654418861923","7":[{"8":"HashSet："}]}],"6":"h"},{"3":"bkOU-1654430101485","4":{"version":1},"5":[{"2":"2","3":"FzE8-1654430101486","7":[{"8":"作为Set接口的主要实现类，线程不安全，可以存储null，底层以数组加链表的形式存储"}]}]},{"3":"MdTS-1654430047193","4":{"l":"h4"},"5":[{"2":"2","3":"ZDkS-1654430047192","7":[{"8":"LinkedHashSet："}]}],"6":"h"},{"3":"XjXY-1654430127000","4":{"version":1},"5":[{"2":"2","3":"zqGz-1654430127001","7":[{"8":"作为HashSet的子类，遍历内部数据时，可以按照添加顺序遍历"}]}]},{"3":"cDDM-1654479049716","4":{"version":1},"5":[{"2":"2","3":"GXLn-1654479049715","7":[{"8":"作为HashSet的子类，在添加数据的同时，每个数据还维护了两个引用，记录此数据前一个数据和后一个数据。"}]}]},{"3":"2yeD-1654479095456","4":{"version":1},"5":[{"2":"2","3":"teJm-1654479095454","7":[{"8":"对于频繁的遍历操作，LinkedHashSet效率高于HashSet"}]}]},{"3":"S4f9-1654430054107","4":{"l":"h3"},"5":[{"2":"2","3":"5xPe-1654430054105","7":[{"8":"TreeSet："}]}],"6":"h"},{"3":"V6lY-1654430209845","4":{"version":1},"5":[{"2":"2","3":"k693-1654430209846","7":[{"8":"可以按照添加对象的指定属性，进行排序。"}]}]},{"3":"GJA8-1654479343103","4":{"version":1},"5":[{"2":"2","3":"MIyn-1654479343101","7":[{"8":"向TreeSet中添加数据，要求是相同类的对象。不同类的对象会因为无相同属性无法排序。需要实现compareTo方法","9":[{"0":"#FFF2CC","2":"bg"}]}]}]},{"3":"IYDU-1654479944126","4":{"version":1},"5":[{"2":"2","3":"vqGi-1654479944113","7":[{"8":"两种排序方式：自然排序和定制排序"}]}]},{"3":"IJ1l-1654479816564","4":{"version":1},"5":[{"2":"2","3":"8ffE-1654479816563","7":[{"8":"TreeSet（自然排序）会按照compareTo方法进行比较两个对象，若两个对象compareTo结果相同，则视为同一个对象，再次添加将无效"}]}]},{"3":"g9on-1654418986562","5":[{"2":"2","3":"kNEa-1654418986560","7":[{"8":"TreeSet和TreeMap采用红黑树的存储结构，特点：有序，查询速度比List快"}]}]},{"3":"fz6B-1654418986780","5":[{"2":"2","3":"LoaD-1654418986778","7":[{"8":"定制排序，也会按照compare方法判断两个对象是否一样"}]}]},{"3":"Oh5H-1654485538068","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"xj8g-1654485538067","5":[{"2":"2","3":"jYTB-1654418862185","7":[{"8":"Comparator com \u003d new Comparator() {"}]}],"6":"cl"},{"3":"lv46-1654485539219","5":[{"2":"2","3":"n5nM-1654485539218","7":[{"8":"    @Override"}]}],"6":"cl"},{"3":"INrX-1654485539221","5":[{"2":"2","3":"Qssj-1654485539220","7":[{"8":"    public int compare(Object o1, Object o2) {"}]}],"6":"cl"},{"3":"q6OK-1654485539223","5":[{"2":"2","3":"S0ZC-1654485539222","7":[{"8":"        return 0;//定制排序内容"}]}],"6":"cl"},{"3":"PsOa-1654485539226","5":[{"2":"2","3":"p5TU-1654485539225","7":[{"8":"    }"}]}],"6":"cl"},{"3":"eodY-1654485539228","5":[{"2":"2","3":"qKp7-1654485539227","7":[{"8":"};"}]}],"6":"cl"},{"3":"eRAN-1654485539230","5":[{"2":"2","3":"bOEV-1654485539229","7":[{"8":"TreeSet set \u003d new TreeSet(com);"}]}],"6":"cl"},{"3":"iJO5-1654485539232","5":[{"2":"2","3":"3lba-1654485539231","7":[{"8":"set.add(\"123\");"}]}],"6":"cl"},{"3":"7uYB-1654485539234","5":[{"2":"2","3":"9TtP-1654485539233","7":[{"8":"//add..."}]}],"6":"cl"}],"6":"cd"},{"3":"4BY8-1654418863253","5":[{"2":"2","3":"vtxF-1654418863251","7":[{"8":"","9":[{"2":"b"}]}]}]},{"3":"Vz9Y-1654429897365","4":{"version":1,"u":"https://note.youdao.com/yws/res/18283/WEBRESOURCE622b479ba8f8473fdb7aa718d39d8277","w":349,"h":204},"6":"im"},{"3":"sqe6-1654429897370","5":[{"2":"2","3":"bWCE-1654429897368","7":[{"8":"","9":[{"2":"b"}]}]}]},{"3":"2VSR-1654493092356","4":{"version":1,"u":"https://note.youdao.com/yws/res/18362/WEBRESOURCEdf2d6460a34861eaa60bb586334b97bd","w":582,"h":469},"6":"im"},{"3":"h079-1654493092362","5":[{"2":"2","3":"cvBF-1654493092359","7":[{"8":"","9":[{"2":"b"}]}]}]}],"__compress__":true,"title":""}