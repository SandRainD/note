<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><para><coId>3236-1638863238086</coId><text>先把项目还原成集群的状态</text><inline-styles><font-size><from>0</from><to>12</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>2226-1638863344450</coId><text/><inline-styles/><styles/></para><para><coId>2050-1638863344552</coId><text>Spring Cloud Ribbon是基于Netflix Ribbon实现的一套客户端</text><inline-styles/><styles/></para><para><coId>1712-1638863296371</coId><text>负载均衡的工具。</text><inline-styles/><styles/></para><para><coId>9074-1638863296371</coId><text>简单的说，Ribbon是Netflix发布的开源项目，主要功能是提供客户端的软件负载均衡算法和服务调用。Ribbon客户端组件提供一系列完善的配置项如连接超时，重试等。简单的说，就是在配置文件中列出Load Balancer (简称LB)后面所有的机器，Ribbon会自动的帮助你基于某种规则(如简单轮询，随机连接等）去连接这些机器。我们很容易使用Ribbon实现自定义的负载均衡算法。</text><inline-styles><color><from>32</from><to>51</to><value>#df402a</value></color></inline-styles><styles/></para><para><coId>6940-1638863296371</coId><text/><inline-styles/><styles/></para><para><coId>8989-1638871323154</coId><text/><inline-styles/><styles/></para><para><coId>5282-1638871323301</coId><text>LB负载均衡(Load Balance)是什么</text><inline-styles><font-family><from>0</from><to>23</to><value>微软雅黑</value></font-family><font-size><from>0</from><to>23</to><value>16</value></font-size><color><from>0</from><to>23</to><value>#df402a</value></color></inline-styles><styles/></para><para><coId>6554-1638871536914</coId><text>简单的说就是将用户的请求平摊的分配到多个服务上，从而达到系统的HA(高可用)常见的负载均衡有软件Nginx，LVS，硬件F5等。</text><inline-styles><font-family><from>0</from><to>64</to><value>微软雅黑</value></font-family><font-size><from>0</from><to>64</to><value>16</value></font-size><color><from>0</from><to>64</to><value>#df402a</value></color></inline-styles><styles/></para><para><coId>5646-1638871573956</coId><text/><inline-styles/><styles/></para><para><coId>9826-1638871536914</coId><text>Ribbon本地负载均衡客户端VS Nginx服务端负载均衡区别</text><inline-styles/><styles/></para><para><coId>4062-1638871558155</coId><text>Nginx是服务器负载均衡，客户端所有请求都会交给nginx，然后由nginx实现转发请求。即负载均衡是由服务端实现的。</text><inline-styles/><styles/></para><para><coId>4142-1638871558155</coId><text>Ribbon本地负载均衡，在调用微服务接口时候，会在注册中心上获取注册信息服务列表之后缓存到VM本地，从而在本地实现RPC远程服务调用技术。</text><inline-styles/><styles/></para><para><coId>3972-1638871558155</coId><text>进程内LB</text><inline-styles/><styles/></para><para><coId>5164-1638871711913</coId><text>将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用，然后自己再从这些地址中选择出一个合适的服务器。</text><inline-styles/><styles/></para><para><coId>9066-1638871711913</coId><text>Ribbon就属于进程内LB，它只是一个类库，集成于消费方进程，消费方通过它来获取到服务提供方的地址。</text><inline-styles/><styles/></para><para><coId>8091-1638871711913</coId><text/><inline-styles/><styles/></para><para><coId>6298-1638871332393</coId><text>Netflix eureka携带ribbon</text><inline-styles><font-size><from>0</from><to>22</to><value>16</value></font-size><back-color><from>0</from><to>22</to><value>#FAE220</value></back-color></inline-styles><styles/></para><image><coId>2957-1638872138585</coId><source>https://note.youdao.com/yws/res/15742/3AF1B4479D0B4BB9AC5746264D3058FD</source><text/><styles><width>620</width><height>282</height></styles></image><para><coId>3516-1638872137057</coId><text/><inline-styles/><styles/></para><heading compat="true" level="a"><coId>8813-1638871332987</coId><text>lRule</text><inline-styles><bold><from>0</from><to>5</to><value>true</value></bold><font-size><from>0</from><to>5</to><value>32</value></font-size></inline-styles><styles/></heading><para><coId>7264-1638873291200</coId><text>根据特定算法中从服务列表中选取一个要访问的服务</text><inline-styles/><styles/></para><image><coId>6641-1638873735757</coId><source>https://note.youdao.com/yws/res/15746/2A4BA9306C9348DD9874D4058FC6B430</source><text/><styles><width>620</width><height>248</height></styles></image><para><coId>5077-1638874144738</coId><text/><inline-styles/><styles/></para><image><coId>3047-1638874144738</coId><source>https://note.youdao.com/yws/res/15748/F3024C5674AF4B4CB4FD0A2B2C0A8D84</source><text/><styles><width>620</width><height>186</height></styles></image><para><coId>7413-1638871323461</coId><text> 替换选择机制</text><inline-styles><font-size><from>0</from><to>7</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>8183-1638871323614</coId><text>1、修改springcloud_order80</text><inline-styles><font-size><from>0</from><to>23</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>3766-1638874350395</coId><text>2、注意配置细节，注意：自定义配置文件不能和@CompentScan能够扫描到的包放在一起</text><inline-styles><font-size><from>0</from><to>45</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>2028-1638871323789</coId><text>3、新建package</text><inline-styles><font-size><from>0</from><to>11</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>6260-1638875123857</coId><text>4、新建MySelfRule规则类</text><inline-styles><font-size><from>0</from><to>17</to><value>16</value></font-size></inline-styles><styles/></para><table><coId>1180-1638875360799</coId><resource-list/><content>{"cells":[{"value":"@Configuration\npublic class MySelfRule {\n    @Bean\n    public IRule myRule(){\n        return new RandomRule();//定义为随机规则\n    }\n}","inlineStyles":{"font-family":[{"from":112,"to":119,"value":"SimSun"},{"from":120,"to":124,"value":"SimSun"}],"font-size":[{"from":0,"to":14,"value":13},{"from":15,"to":40,"value":13},{"from":41,"to":50,"value":13},{"from":51,"to":77,"value":13},{"from":78,"to":119,"value":13},{"from":120,"to":125,"value":13},{"from":126,"to":127,"value":13}],"color":[{"from":0,"to":14,"value":"#bbb529"},{"from":15,"to":28,"value":"#cc7832"},{"from":28,"to":40,"value":"#a9b7c6"},{"from":41,"to":45,"value":"#a9b7c6"},{"from":45,"to":50,"value":"#bbb529"},{"from":51,"to":55,"value":"#bbb529"},{"from":55,"to":62,"value":"#cc7832"},{"from":62,"to":68,"value":"#a9b7c6"},{"from":68,"to":74,"value":"#ffc66d"},{"from":74,"to":77,"value":"#a9b7c6"},{"from":78,"to":86,"value":"#a9b7c6"},{"from":86,"to":97,"value":"#cc7832"},{"from":97,"to":109,"value":"#a9b7c6"},{"from":109,"to":110,"value":"#cc7832"},{"from":110,"to":119,"value":"#808080"},{"from":120,"to":124,"value":"#808080"},{"from":124,"to":125,"value":"#a9b7c6"},{"from":126,"to":127,"value":"#a9b7c6"}],"back-color":[{"from":0,"to":14,"value":"#2b2b2b"},{"from":15,"to":40,"value":"#2b2b2b"},{"from":41,"to":50,"value":"#2b2b2b"},{"from":51,"to":77,"value":"#2b2b2b"},{"from":78,"to":119,"value":"#2b2b2b"},{"from":120,"to":125,"value":"#2b2b2b"},{"from":126,"to":127,"value":"#2b2b2b"}]}}],"heights":[40],"widths":[620]}</content><styles/></table><para><coId>5444-1638875145536</coId><text>5、主启动类添加@RibbonClient</text><inline-styles><font-size><from>0</from><to>21</to><value>16</value></font-size></inline-styles><styles/></para><table><coId>3466-1638876073943</coId><resource-list/><content>{"cells":[{"value":"@SpringBootApplication(exclude= {DataSourceAutoConfiguration.class})\n@EnableEurekaClient\n@RibbonClient(name = \"SPRINGCLOUD-PAYMENT\",configuration = MySelfRule.class)\npublic class OrderMain80 {\n    public static void main(String[] args) {\n        SpringApplication.run(OrderMain80.class,args);\n    }\n}","inlineStyles":{"italic":[{"from":264,"to":267,"value":true}],"font-size":[{"from":0,"to":68,"value":13},{"from":69,"to":88,"value":13},{"from":89,"to":165,"value":13},{"from":166,"to":192,"value":13},{"from":193,"to":237,"value":13},{"from":238,"to":292,"value":13},{"from":293,"to":298,"value":13},{"from":299,"to":300,"value":13}],"color":[{"from":0,"to":22,"value":"#bbb529"},{"from":22,"to":61,"value":"#a9b7c6"},{"from":61,"to":66,"value":"#cc7832"},{"from":66,"to":68,"value":"#a9b7c6"},{"from":69,"to":88,"value":"#bbb529"},{"from":89,"to":102,"value":"#bbb529"},{"from":102,"to":110,"value":"#a9b7c6"},{"from":110,"to":131,"value":"#6a8759"},{"from":131,"to":132,"value":"#cc7832"},{"from":132,"to":159,"value":"#a9b7c6"},{"from":159,"to":164,"value":"#cc7832"},{"from":164,"to":165,"value":"#a9b7c6"},{"from":166,"to":179,"value":"#cc7832"},{"from":179,"to":192,"value":"#a9b7c6"},{"from":193,"to":197,"value":"#a9b7c6"},{"from":197,"to":216,"value":"#cc7832"},{"from":216,"to":220,"value":"#ffc66d"},{"from":220,"to":237,"value":"#a9b7c6"},{"from":238,"to":280,"value":"#a9b7c6"},{"from":280,"to":286,"value":"#cc7832"},{"from":286,"to":291,"value":"#a9b7c6"},{"from":291,"to":292,"value":"#cc7832"},{"from":293,"to":297,"value":"#cc7832"},{"from":297,"to":298,"value":"#a9b7c6"},{"from":299,"to":300,"value":"#a9b7c6"}],"back-color":[{"from":0,"to":68,"value":"#2b2b2b"},{"from":69,"to":88,"value":"#2b2b2b"},{"from":89,"to":165,"value":"#2b2b2b"},{"from":166,"to":192,"value":"#2b2b2b"},{"from":193,"to":237,"value":"#2b2b2b"},{"from":238,"to":292,"value":"#2b2b2b"},{"from":293,"to":298,"value":"#2b2b2b"},{"from":299,"to":300,"value":"#2b2b2b"}]}}],"heights":[40],"widths":[620]}</content><styles/></table><para><coId>5129-1638875160007</coId><text>测试</text><inline-styles><font-size><from>0</from><to>2</to><value>16</value></font-size></inline-styles><styles/></para><attach><coId>3080-1639047830421</coId><source>https://note.youdao.com/yws/res/15788/25C2373235EE4EA886925CE81E57E931</source><resource>https://note.youdao.com/yws/res/15789/0A906408F7F344DB8351A317A60BB0ED</resource><filename>springcloud.zip</filename><filelength>105735</filelength><styles/></attach><heading compat="true" level="2"><coId>9790-1638871324126</coId><text>默认负载均衡算法原理</text><inline-styles><bold><from>0</from><to>10</to><value>true</value></bold><font-size><from>0</from><to>10</to><value>20</value></font-size></inline-styles><styles/></heading><para><coId>0039-1638871324314</coId><text>负载均衡</text><inline-styles/><styles/></para><para><coId>5452-1639047829039</coId><text/><inline-styles/><styles/></para><para><coId>1660-1639047829039</coId><text>算法: rest接口第几次请求数%服务器集群总数量=实际调用服务器位置下标，每次服务重启动后rest接口计数从1开始。</text><inline-styles/><styles/></para><para><coId>9088-1638876256493</coId><text/><inline-styles/><styles/></para><para><coId>2455-1638876225568</coId><text>手写轮询算法</text><inline-styles><font-size><from>0</from><to>6</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>8241-1638876226076</coId><text/><inline-styles/><styles/></para><para><coId>9380-1638876226109</coId><text/><inline-styles/><styles/></para><para><coId>6093-1638876226141</coId><text/><inline-styles/><styles/></para><para><coId>2868-1638876226168</coId><text/><inline-styles/><styles/></para><para><coId>9339-1638876226215</coId><text/><inline-styles/><styles/></para><para><coId>5170-1638876226249</coId><text/><inline-styles/><styles/></para><para><coId>5580-1638876226278</coId><text/><inline-styles/><styles/></para><para><coId>8060-1638876226311</coId><text/><inline-styles/><styles/></para><para><coId>4090-1638871324483</coId><text/><inline-styles/><styles/></para></body></note>