<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><heading compat="true" level="1"><coId>8344-1634211305356</coId><text>String</text><inline-styles><bold><from>0</from><to>6</to><value>true</value></bold><font-size><from>0</from><to>6</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>3089-1634211369336</coId><text>String是Redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。</text><inline-styles><font-family><from>0</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>7</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>12</to><value>Times New Roman</value></font-family><font-family><from>12</from><to>26</to><value>微软雅黑</value></font-family><font-family><from>26</from><to>35</to><value>Times New Roman</value></font-family><font-family><from>35</from><to>45</to><value>微软雅黑</value></font-family><font-family><from>45</from><to>48</to><value>Times New Roman</value></font-family><font-family><from>48</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>57</to><value>Times New Roman</value></font-family><font-family><from>57</from><to>58</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2216-1634211367055</coId><text>String类型是二进制安全的。意味着Redis的string可以包含任何数据。比如jpg图片或者序列化的对象。</text><inline-styles><font-family><from>0</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>31</to><value>Times New Roman</value></font-family><font-family><from>31</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>45</to><value>Times New Roman</value></font-family><font-family><from>45</from><to>56</to><value>微软雅黑</value></font-family><color><from>8</from><to>15</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>9381-1634211367055</coId><text>String类型是Redis最基本的数据类型，一个Redis中字符串value最多可以是512M</text><inline-styles><font-family><from>0</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>14</to><value>Times New Roman</value></font-family><font-family><from>14</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>30</to><value>Times New Roman</value></font-family><font-family><from>30</from><to>34</to><value>微软雅黑</value></font-family><font-family><from>34</from><to>39</to><value>Times New Roman</value></font-family><font-family><from>39</from><to>44</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>48</to><value>Tahoma</value></font-family><color><from>44</from><to>48</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>8930-1634211373260</coId><text>常用命令</text><inline-styles><font-family><from>0</from><to>4</to><value>Tahoma</value></font-family><color><from>0</from><to>4</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>7581-1634211385035</coId><text>set   &lt;key&gt;&lt;value&gt;添加键值对</text><inline-styles><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>23</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>6685-1634211385541</coId><text>get   &lt;key&gt;查询对应键值</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>17</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5075-1634211507958</coId><text>append  &lt;key&gt;&lt;value&gt;将给定的&lt;value&gt; 追加到原值的末尾</text><inline-styles><font-family><from>0</from><to>20</to><value>Tahoma</value></font-family><font-family><from>20</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>40</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>9956-1634211507958</coId><text>strlen  &lt;key&gt;获得值的长度</text><inline-styles><font-family><from>0</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>19</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>3956-1634211507958</coId><text>setnx  &lt;key&gt;&lt;value&gt;只有在 key 不存在时    设置 key 的值</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>27</to><value>Tahoma</value></font-family><font-family><from>27</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>42</to><value>Times New Roman</value></font-family><font-family><from>42</from><to>44</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5050-1634211507958</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>6042-1634211507958</coId><text>incr  &lt;key&gt;</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>6840-1634211507958</coId><text>将 key 中储存的数字值增1</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>14</to><value>微软雅黑</value></font-family><font-family><from>14</from><to>15</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>3022-1634211507958</coId><text>只能对数字值操作，如果为空，新增值为1</text><inline-styles><font-family><from>0</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>19</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>9470-1634211507958</coId><text>decr  &lt;key&gt;</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>6995-1634211507958</coId><text>将 key 中储存的数字值减1</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>14</to><value>微软雅黑</value></font-family><font-family><from>14</from><to>15</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>8440-1634211507959</coId><text>只能对数字值操作，如果为空，新增值为-1</text><inline-styles><font-family><from>0</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>20</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>8522-1634211507959</coId><text>incrby / decrby  &lt;key&gt;&lt;步长&gt;将 key 中储存的数字值增减。自定义步长。</text><inline-styles><font-family><from>0</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>26</to><value>Times New Roman</value></font-family><font-family><from>26</from><to>27</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>48</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>8475-1634211385593</coId><text/><inline-styles/><styles/></para><para><coId>5825-1634215628807</coId><text>mset  &lt;key1&gt;&lt;value1&gt;&lt;key2&gt;&lt;value2&gt;  .....</text><inline-styles><font-family><from>0</from><to>41</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>3646-1634215620702</coId><text>同时设置一个或多个 key-value对  </text><inline-styles><font-family><from>0</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>22</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>6085-1634215620702</coId><text>mget  &lt;key1&gt;&lt;key2&gt;&lt;key3&gt; .....</text><inline-styles><font-family><from>0</from><to>30</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>1245-1634215620703</coId><text>同时获取一个或多个 value  </text><inline-styles><font-family><from>0</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>17</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>4072-1634215620703</coId><text>msetnx &lt;key1&gt;&lt;value1&gt;&lt;key2&gt;&lt;value2&gt;  .....</text><inline-styles><font-family><from>0</from><to>42</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>4984-1634215620703</coId><text>同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。</text><inline-styles><font-family><from>0</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>20</to><value>Tahoma</value></font-family><font-family><from>20</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>35</to><value>Times New Roman</value></font-family><font-family><from>35</from><to>40</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>7063-1634215620703</coId><text>原子性，有一个失败则都失败</text><inline-styles><bold><from>0</from><to>13</to><value>true</value></bold><font-family><from>0</from><to>13</to><value>微软雅黑</value></font-family><color><from>0</from><to>13</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>7273-1634215620703</coId><text> getrange  &lt;key&gt;&lt;起始位置&gt;&lt;结束位置&gt;</text><inline-styles><font-family><from>0</from><to>17</to><value>Tahoma</value></font-family><font-family><from>17</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>23</to><value>Times New Roman</value></font-family><font-family><from>23</from><to>27</to><value>微软雅黑</value></font-family><font-family><from>27</from><to>28</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>8964-1634215620703</coId><text>获得值的范围，类似java中的substring，前包，后包</text><inline-styles><bold><from>25</from><to>30</to><value>true</value></bold><font-family><from>0</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>24</to><value>Times New Roman</value></font-family><font-family><from>24</from><to>30</to><value>微软雅黑</value></font-family><color><from>25</from><to>30</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>4520-1634215620703</coId><text>setrange  &lt;key&gt;&lt;起始位置&gt;&lt;value&gt;</text><inline-styles><font-family><from>0</from><to>16</to><value>Tahoma</value></font-family><font-family><from>16</from><to>20</to><value>微软雅黑</value></font-family><font-family><from>20</from><to>28</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>9366-1634215620703</coId><text>用 &lt;value&gt;  覆写&lt;key&gt;所储存的字符串值，从&lt;起始位置&gt;开始(索引从0开始)。</text><inline-styles><bold><from>37</from><to>43</to><value>true</value></bold><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>13</to><value>微软雅黑</value></font-family><font-family><from>13</from><to>18</to><value>Times New Roman</value></font-family><font-family><from>18</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>29</to><value>Times New Roman</value></font-family><font-family><from>29</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>34</to><value>Times New Roman</value></font-family><font-family><from>34</from><to>36</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>41</to><value>Tahoma</value></font-family><font-family><from>41</from><to>43</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>45</to><value>微软雅黑</value></font-family><color><from>37</from><to>43</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>9662-1634215620703</coId><text/><inline-styles/><styles/></para><para><coId>7760-1634215620703</coId><text>setex  &lt;key&gt;&lt;过期时间&gt;&lt;value&gt;</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-family><from>0</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>25</to><value>Times New Roman</value></font-family><color><from>0</from><to>25</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>9582-1634215620703</coId><text>设置键值的同时，设置过期时间，单位秒。</text><inline-styles><font-family><from>0</from><to>19</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5652-1634215620703</coId><text>getset &lt;key&gt;&lt;value&gt;</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>2671-1634215620703</coId><text>以新换旧，设置了新值同时获得旧值。</text><inline-styles><font-family><from>0</from><to>17</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>4975-1634211385625</coId><text/><inline-styles/><styles><text-indent>1</text-indent></styles></para><para><coId>4610-1634215764333</coId><text>String的数据结构为简单动态字符串(Simple Dynamic String,缩写SDS)。是可以修改的字符串，内部结构实现上类似于Java的ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配.</text><inline-styles><font-family><from>0</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>44</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>48</to><value>Tahoma</value></font-family><font-family><from>48</from><to>69</to><value>微软雅黑</value></font-family><font-family><from>69</from><to>73</to><value>Tahoma</value></font-family><font-family><from>73</from><to>74</to><value>微软雅黑</value></font-family><font-family><from>74</from><to>83</to><value>Tahoma</value></font-family><font-family><from>83</from><to>106</to><value>微软雅黑</value></font-family><font-family><from>106</from><to>107</to><value>Tahoma</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><image><coId>5978-1634215764333</coId><source>https://note.youdao.com/yws/res/14118/0891683EA21541BD9EEAF315067F79D8</source><text/><styles><width>554</width><height>101</height></styles></image><para><coId>1528-1634215764333</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>3030-1634215764333</coId><text>如图中所示，内部为当前字符串实际分配的空间capacity一般要高于实际字符串长度len。当字符串长度小于1M时，扩容都是加倍现有的空间，如果超过1M，扩容时一次只会多扩1M的空间。需要注意的是字符串最大长度为512M。</text><inline-styles><font-family><from>0</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>29</to><value>Times New Roman</value></font-family><font-family><from>29</from><to>41</to><value>微软雅黑</value></font-family><font-family><from>41</from><to>44</to><value>Times New Roman</value></font-family><font-family><from>44</from><to>53</to><value>微软雅黑</value></font-family><font-family><from>53</from><to>55</to><value>Times New Roman</value></font-family><font-family><from>55</from><to>73</to><value>微软雅黑</value></font-family><font-family><from>73</from><to>75</to><value>Times New Roman</value></font-family><font-family><from>75</from><to>85</to><value>微软雅黑</value></font-family><font-family><from>85</from><to>87</to><value>Times New Roman</value></font-family><font-family><from>87</from><to>105</to><value>微软雅黑</value></font-family><font-family><from>105</from><to>109</to><value>Times New Roman</value></font-family><font-family><from>109</from><to>110</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2188-1634211385646</coId><text/><inline-styles/><styles/></para><heading compat="true" level="1"><coId>6510-1634211385666</coId><text>List</text><inline-styles><bold><from>0</from><to>4</to><value>true</value></bold><font-size><from>0</from><to>4</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>7873-1634216689015</coId><text>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</text><inline-styles><font-family><from>0</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>55</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5262-1634216706809</coId><text>它的底层实际是个双向链表，对两端的操作性能很高，通过索引下标的操作中间的节点性能会较差。</text><inline-styles><font-family><from>0</from><to>44</to><value>微软雅黑</value></font-family><color><from>8</from><to>12</to><value>#ff0000</value></color></inline-styles><styles/></para><image><coId>8066-1634216706809</coId><source>https://note.youdao.com/yws/res/14115/E34D1AF413164721A0C5F2A9415A01A8</source><text/><styles><width>556</width><height>84</height></styles></image><para><coId>4866-1634216706809</coId><text> lpush/rpush  &lt;key&gt;&lt;value1&gt;&lt;value2&gt;&lt;value3&gt; .... 从左边/右边插入一个或多个值。</text><inline-styles><font-family><from>0</from><to>49</to><value>Tahoma</value></font-family><font-family><from>49</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>53</to><value>Tahoma</value></font-family><font-family><from>53</from><to>64</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>3470-1634216728936</coId><text>lpop/rpop  &lt;key&gt;从左边/右边吐出一个值。值在键在，值光键亡。</text><inline-styles><font-family><from>0</from><to>16</to><value>Tahoma</value></font-family><font-family><from>16</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>20</to><value>Tahoma</value></font-family><font-family><from>20</from><to>38</to><value>微软雅黑</value></font-family><color><from>28</from><to>37</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>4144-1634216728936</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>6552-1634216728936</coId><text>rpoplpush  &lt;key1&gt;&lt;key2&gt;从&lt;key1&gt;列表右边吐出一个值，插到&lt;key2&gt;列表左边。</text><inline-styles><font-family><from>0</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>48</to><value>Times New Roman</value></font-family><font-family><from>48</from><to>53</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>7692-1634216728936</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>2041-1634216728936</coId><text>lrange &lt;key&gt;&lt;start&gt;&lt;stop&gt;</text><inline-styles><font-family><from>0</from><to>25</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>9813-1634216728936</coId><text>按照索引下标获得元素(从左到右)</text><inline-styles><font-family><from>0</from><to>10</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>16</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>3626-1634216728936</coId><text>lrange mylist 0 -1   0左边第一个，-1右边第一个，（0-1表示获取所有）</text><inline-styles><font-family><from>0</from><to>22</to><value>Tahoma</value></font-family><font-family><from>22</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>47</to><value>微软雅黑</value></font-family><color><from>28</from><to>47</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>7410-1634216728936</coId><text>lindex &lt;key&gt;&lt;index&gt;按照索引下标获得元素(从左到右)</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>34</to><value>微软雅黑</value></font-family><font-family><from>34</from><to>35</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>6130-1634216728937</coId><text>llen &lt;key&gt;获得列表长度</text><inline-styles><font-family><from>0</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>16</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5265-1634216728937</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>7521-1634216728937</coId><text>linsert &lt;key&gt;  before &lt;value&gt;&lt;newvalue&gt;在&lt;value&gt;的后面插入&lt;newvalue&gt;插入值</text><inline-styles><font-family><from>0</from><to>39</to><value>Tahoma</value></font-family><font-family><from>39</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>47</to><value>Tahoma</value></font-family><font-family><from>47</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>62</to><value>Times New Roman</value></font-family><font-family><from>62</from><to>65</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>3838-1634216728937</coId><text>lrem &lt;key&gt;&lt;n&gt;&lt;value&gt;从左边删除n个value(从左到右)</text><inline-styles><font-family><from>0</from><to>20</to><value>Tahoma</value></font-family><font-family><from>20</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>27</to><value>微软雅黑</value></font-family><font-family><from>27</from><to>33</to><value>Times New Roman</value></font-family><font-family><from>33</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>38</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>6072-1634216728937</coId><text>lset&lt;key&gt;&lt;index&gt;&lt;value&gt;将列表key下标为index的值替换成value</text><inline-styles><font-family><from>0</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>26</to><value>微软雅黑</value></font-family><font-family><from>26</from><to>29</to><value>Tahoma</value></font-family><font-family><from>29</from><to>32</to><value>微软雅黑</value></font-family><font-family><from>32</from><to>37</to><value>Tahoma</value></font-family><font-family><from>37</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>47</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>0067-1634553393007</coId><text/><inline-styles/><styles/></para><para><coId>4770-1634553393735</coId><text>List的数据结构为快速链表quickList。</text><inline-styles><underline><from>0</from><to>24</to><value>true</value></underline><font-family><from>0</from><to>4</to><value>Times New Roman</value></font-family><font-family><from>4</from><to>14</to><value>微软雅黑</value></font-family><font-family><from>14</from><to>23</to><value>Times New Roman</value></font-family><font-family><from>23</from><to>24</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>6020-1634216706809</coId><text> 首先在列表元素较少的情况下会使用一块连续的内存存储，这个结构是ziplist，也即是压缩列表。</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>32</to><value>微软雅黑</value></font-family><font-family><from>32</from><to>39</to><value>Times New Roman</value></font-family><font-family><from>39</from><to>48</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>4390-1634211385698</coId><text>它将所有的元素紧挨着一起存储，分配的是一块连续的内存。</text><inline-styles><font-family><from>0</from><to>27</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>8400-1634553497116</coId><text>当数据量比较多的时候才会改成quicklist。</text><inline-styles><font-family><from>0</from><to>14</to><value>微软雅黑</value></font-family><font-family><from>14</from><to>23</to><value>Times New Roman</value></font-family><font-family><from>23</from><to>24</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>4153-1634553497116</coId><text>因为普通的链表需要的附加指针空间太大，会比较浪费空间。比如这个列表里存的只是int类型的数据，结构上还需要两个额外的指针prev和next。</text><inline-styles><font-family><from>0</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>41</to><value>Times New Roman</value></font-family><font-family><from>41</from><to>60</to><value>微软雅黑</value></font-family><font-family><from>60</from><to>64</to><value>Times New Roman</value></font-family><font-family><from>64</from><to>65</to><value>微软雅黑</value></font-family><font-family><from>65</from><to>69</to><value>Times New Roman</value></font-family><font-family><from>69</from><to>70</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>6328-1634211385733</coId><text>Redis将链表和ziplist结合起来组成了quicklist。也就是将多个ziplist使用双向指针串起来使用。这样既满足了快速的插入删除性能，又不会出现太大的空间冗余。</text><inline-styles><font-family><from>0</from><to>5</to><value>Times New Roman</value></font-family><font-family><from>5</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>16</to><value>Times New Roman</value></font-family><font-family><from>16</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>32</to><value>Times New Roman</value></font-family><font-family><from>32</from><to>39</to><value>微软雅黑</value></font-family><font-family><from>39</from><to>46</to><value>Times New Roman</value></font-family><font-family><from>46</from><to>87</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>7387-1634211385764</coId><text/><inline-styles/><styles/></para><heading compat="true" level="1"><coId>5590-1634211385800</coId><text>Set</text><inline-styles><bold><from>0</from><to>3</to><value>true</value></bold><font-family><from>0</from><to>3</to><value>微软雅黑</value></font-family><font-size><from>0</from><to>3</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>8266-1634211385831</coId><text>Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。</text><inline-styles><bold><from>44</from><to>48</to><value>true</value></bold><font-family><from>0</from><to>9</to><value>Tahoma</value></font-family><font-family><from>9</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>21</to><value>Times New Roman</value></font-family><font-family><from>21</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>41</to><value>Times New Roman</value></font-family><font-family><from>41</from><to>75</to><value>微软雅黑</value></font-family><font-family><from>75</from><to>78</to><value>Tahoma</value></font-family><font-family><from>78</from><to>89</to><value>微软雅黑</value></font-family><font-family><from>89</from><to>92</to><value>Times New Roman</value></font-family><font-family><from>92</from><to>106</to><value>微软雅黑</value></font-family><font-family><from>106</from><to>109</to><value>Times New Roman</value></font-family><font-family><from>109</from><to>122</to><value>微软雅黑</value></font-family><font-family><from>122</from><to>126</to><value>Times New Roman</value></font-family><font-family><from>126</from><to>133</to><value>微软雅黑</value></font-family><color><from>44</from><to>48</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>6270-1634553612960</coId><text>Redis的Set是string类型的无序集合。它底层其实是一个value为null的hash表，所以添加，删除，查找的复杂度都是O(1)。</text><inline-styles><bold><from>60</from><to>69</to><value>true</value></bold><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>6</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>9</to><value>Times New Roman</value></font-family><font-family><from>9</from><to>10</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>16</to><value>Times New Roman</value></font-family><font-family><from>16</from><to>32</to><value>微软雅黑</value></font-family><font-family><from>32</from><to>37</to><value>Tahoma</value></font-family><font-family><from>37</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>42</to><value>Times New Roman</value></font-family><font-family><from>42</from><to>43</to><value>微软雅黑</value></font-family><font-family><from>43</from><to>47</to><value>Times New Roman</value></font-family><font-family><from>47</from><to>65</to><value>微软雅黑</value></font-family><font-family><from>65</from><to>69</to><value>Tahoma</value></font-family><font-family><from>69</from><to>70</to><value>微软雅黑</value></font-family><color><from>19</from><to>23</to><value>#ff0000</value></color><color><from>24</from><to>48</to><value>#ff0000</value></color><color><from>60</from><to>69</to><value>#ff0000</value></color><back-color><from>60</from><to>69</to><value>#ffff00</value></back-color></inline-styles><styles/></para><para><coId>6488-1634211385865</coId><text>Set数据结构是dict字典，字典是用哈希表实现的。</text><inline-styles><font-family><from>0</from><to>3</to><value>Times New Roman</value></font-family><font-family><from>3</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>12</to><value>Times New Roman</value></font-family><font-family><from>12</from><to>26</to><value>微软雅黑</value></font-family><color><from>15</from><to>26</to><value>#4d4d4d</value></color><back-color><from>15</from><to>26</to><value>#ffffff</value></back-color></inline-styles><styles/></para><para><coId>1999-1634553742828</coId><text>Java中HashSet的内部实现使用的是HashMap，只不过所有的value都指向同一个对象。Redis的set结构也是一样，它的内部也使用hash结构，所有的value都指向同一个内部值。</text><inline-styles><font-family><from>0</from><to>4</to><value>Times New Roman</value></font-family><font-family><from>4</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>12</to><value>Times New Roman</value></font-family><font-family><from>12</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>28</to><value>Times New Roman</value></font-family><font-family><from>28</from><to>35</to><value>微软雅黑</value></font-family><font-family><from>35</from><to>40</to><value>Times New Roman</value></font-family><font-family><from>40</from><to>49</to><value>微软雅黑</value></font-family><font-family><from>49</from><to>54</to><value>Times New Roman</value></font-family><font-family><from>54</from><to>55</to><value>微软雅黑</value></font-family><font-family><from>55</from><to>58</to><value>Times New Roman</value></font-family><font-family><from>58</from><to>72</to><value>微软雅黑</value></font-family><font-family><from>72</from><to>76</to><value>Times New Roman</value></font-family><font-family><from>76</from><to>82</to><value>微软雅黑</value></font-family><font-family><from>82</from><to>87</to><value>Times New Roman</value></font-family><font-family><from>87</from><to>97</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>9689-1634553747633</coId><text/><inline-styles/><styles/></para><para><coId>2293-1634553678677</coId><text>sadd &lt;key&gt;&lt;value1&gt;&lt;value2&gt; .....</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles/></para><para><coId>6130-1634553678943</coId><text>将一个或多个 member 元素加入到集合 key 中，已经存在的 member 元素将被忽略</text><inline-styles><font-family><from>0</from><to>6</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>14</to><value>Tahoma</value></font-family><font-family><from>14</from><to>22</to><value>微软雅黑</value></font-family><font-family><from>22</from><to>26</to><value>Times New Roman</value></font-family><font-family><from>26</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>34</from><to>41</to><value>Times New Roman</value></font-family><font-family><from>41</from><to>47</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>7570-1634553678943</coId><text>smembers &lt;key&gt;取出该集合的所有值。</text><inline-styles><font-family><from>0</from><to>14</to><value>Tahoma</value></font-family><font-family><from>14</from><to>24</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2878-1634553678943</coId><text>sismember &lt;key&gt;&lt;value&gt;判断集合&lt;key&gt;是否为含有该&lt;value&gt;值，有1，没有0</text><inline-styles><font-family><from>0</from><to>22</to><value>Tahoma</value></font-family><font-family><from>22</from><to>26</to><value>微软雅黑</value></font-family><font-family><from>26</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>44</to><value>Times New Roman</value></font-family><font-family><from>44</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>48</to><value>Times New Roman</value></font-family><font-family><from>48</from><to>51</to><value>微软雅黑</value></font-family><font-family><from>51</from><to>52</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>2940-1634553678943</coId><text>scard&lt;key&gt;返回该集合的元素个数。</text><inline-styles><font-family><from>0</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>21</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5696-1634553678943</coId><text>srem &lt;key&gt;&lt;value1&gt;&lt;value2&gt; .... 删除集合中的某个元素。</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>43</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>8823-1634553678943</coId><text>spop &lt;key&gt;随机从该集合中吐出一个值。</text><inline-styles><bold><from>10</from><to>23</to><value>true</value></bold><font-family><from>0</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>23</to><value>微软雅黑</value></font-family><color><from>10</from><to>23</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>2070-1634553678943</coId><text>srandmember &lt;key&gt;&lt;n&gt;随机从该集合中取出n个值。不会从集合中删除 。</text><inline-styles><font-family><from>0</from><to>20</to><value>Tahoma</value></font-family><font-family><from>20</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>41</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>43</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>4028-1634553678944</coId><text>smove &lt;source&gt;&lt;destination&gt;value把集合中一个值从一个集合移动到另一个集合</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>52</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>1474-1634553678944</coId><text>sinter &lt;key1&gt;&lt;key2&gt;返回两个集合的交集元素。</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>31</to><value>微软雅黑</value></font-family><color><from>26</from><to>28</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>8991-1634553678944</coId><text>sunion &lt;key1&gt;&lt;key2&gt;返回两个集合的并集元素。</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>31</to><value>微软雅黑</value></font-family><color><from>26</from><to>28</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>5578-1634553678944</coId><text>sdiff &lt;key1&gt;&lt;key2&gt;返回两个集合的差集元素(key1中的，不包含key2中的)</text><inline-styles><bold><from>25</from><to>27</to><value>true</value></bold><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>34</to><value>Tahoma</value></font-family><font-family><from>34</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>44</to><value>Times New Roman</value></font-family><font-family><from>44</from><to>46</to><value>微软雅黑</value></font-family><font-family><from>46</from><to>47</to><value>Times New Roman</value></font-family><color><from>25</from><to>27</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>6873-1634553678944</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><heading compat="true" level="1"><coId>7999-1634553684148</coId><text>Hash</text><inline-styles><bold><from>0</from><to>4</to><value>true</value></bold><font-size><from>0</from><to>4</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>1515-1634555485389</coId><text>Redis hash 是一个键值对集合。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>20</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>9358-1634555508502</coId><text>Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。</text><inline-styles><font-family><from>0</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>13</to><value>微软雅黑</value></font-family><font-family><from>13</from><to>19</to><value>Times New Roman</value></font-family><font-family><from>19</from><to>22</to><value>微软雅黑</value></font-family><font-family><from>22</from><to>27</to><value>Tahoma</value></font-family><font-family><from>27</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>33</to><value>Tahoma</value></font-family><font-family><from>33</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>53</to><value>微软雅黑</value></font-family><color><from>22</from><to>27</to><value>#ff0000</value></color><color><from>28</from><to>33</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>7467-1634555508502</coId><text>类似Java里面的Map&lt;String,Object&gt;</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>6</to><value>Tahoma</value></font-family><font-family><from>6</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>27</to><value>Times New Roman</value></font-family></inline-styles><styles/></para><para><coId>8077-1634555508502</coId><text>用户ID为查找的key，存储的value用户对象包含姓名，年龄，生日等信息，如果用普通的key/value结构来存储</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>4</to><value>Tahoma</value></font-family><font-family><from>4</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>11</to><value>Times New Roman</value></font-family><font-family><from>11</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>20</to><value>Times New Roman</value></font-family><font-family><from>20</from><to>44</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>53</to><value>Times New Roman</value></font-family><font-family><from>53</from><to>58</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>3369-1634555485558</coId><text>Hash类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当field-value长度较短且个数较少时，使用ziplist，否则使用hashtable。</text><inline-styles><font-family><from>0</from><to>4</to><value>Times New Roman</value></font-family><font-family><from>4</from><to>17</to><value>宋体</value></font-family><font-family><from>17</from><to>24</to><value>Times New Roman</value></font-family><font-family><from>24</from><to>31</to><value>宋体</value></font-family><font-family><from>31</from><to>40</to><value>Times New Roman</value></font-family><font-family><from>40</from><to>47</to><value>宋体</value></font-family><font-family><from>47</from><to>58</to><value>Times New Roman</value></font-family><font-family><from>58</from><to>71</to><value>宋体</value></font-family><font-family><from>71</from><to>78</to><value>Times New Roman</value></font-family><font-family><from>78</from><to>83</to><value>宋体</value></font-family><font-family><from>83</from><to>92</to><value>Times New Roman</value></font-family><font-family><from>92</from><to>93</to><value>宋体</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><para><coId>4316-1634555660787</coId><text/><inline-styles/><styles><text-indent>1</text-indent></styles></para><para><coId>6065-1634555485698</coId><text>hset &lt;key&gt;&lt;field&gt;&lt;value&gt;给&lt;key&gt;集合中的  &lt;field&gt;键赋值&lt;value&gt;</text><inline-styles/><styles/></para><para><coId>2500-1634555522485</coId><text>hget &lt;key1&gt;&lt;field&gt;从&lt;key1&gt;集合&lt;field&gt;取出 value</text><inline-styles/><styles/></para><para><coId>9414-1634555522485</coId><text>hmset &lt;key1&gt;&lt;field1&gt;&lt;value1&gt;&lt;field2&gt;&lt;value2&gt;... 批量设置hash的值</text><inline-styles/><styles/></para><para><coId>9888-1634555522485</coId><text>hexists&lt;key1&gt;&lt;field&gt;查看哈希表 key 中，给定域 field 是否存在。</text><inline-styles/><styles/></para><para><coId>3999-1634555522485</coId><text>hkeys &lt;key&gt;列出该hash集合的所有field</text><inline-styles/><styles/></para><para><coId>1050-1634555522485</coId><text>hvals &lt;key&gt;列出该hash集合的所有value</text><inline-styles/><styles/></para><para><coId>9968-1634555522485</coId><text>hincrby &lt;key&gt;&lt;field&gt;&lt;increment&gt;为哈希表 key 中的域 field 的值加上增量 1   -1</text><inline-styles/><styles/></para><para><coId>4880-1634555522485</coId><text>hsetnx &lt;key&gt;&lt;field&gt;&lt;value&gt;将哈希表 key 中的域 field 的值设置为 value ，当且仅当域 field 不存在 .</text><inline-styles/><styles/></para><para><coId>3256-1634555485847</coId><text/><inline-styles/><styles/></para><heading compat="true" level="1"><coId>9785-1634555485977</coId><text>Zset有序集合</text><inline-styles><bold><from>0</from><to>8</to><value>true</value></bold><font-size><from>0</from><to>8</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>3849-1634555662683</coId><text>Redis有序集合zset与普通集合set非常相似，是一个没有重复元素的字符串集合。</text><inline-styles><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>13</to><value>Times New Roman</value></font-family><font-family><from>13</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>21</to><value>Times New Roman</value></font-family><font-family><from>21</from><to>42</to><value>微软雅黑</value></font-family><color><from>29</from><to>35</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>6671-1634555797647</coId><text>不同之处是有序集合的每个成员都关联了一个评分（score）,这个评分（score）被用来按照从最低分到最高分的方式排序集合中的成员。集合的成员是唯一的，但是评分可以是重复了 。</text><inline-styles><bold><from>20</from><to>29</to><value>true</value></bold><font-family><from>0</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>28</to><value>Tahoma</value></font-family><font-family><from>28</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>35</to><value>微软雅黑</value></font-family><font-family><from>35</from><to>40</to><value>Times New Roman</value></font-family><font-family><from>40</from><to>86</to><value>微软雅黑</value></font-family><font-family><from>87</from><to>88</to><value>微软雅黑</value></font-family><color><from>20</from><to>29</to><value>#ff0000</value></color><color><from>66</from><to>86</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>4139-1634555797647</coId><text>因为元素是有序的, 所以你也可以很快的根据评分（score）或者次序（position）来获取一个范围的元素。</text><inline-styles><font-family><from>0</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>29</to><value>Times New Roman</value></font-family><font-family><from>29</from><to>35</to><value>微软雅黑</value></font-family><font-family><from>35</from><to>43</to><value>Times New Roman</value></font-family><font-family><from>43</from><to>55</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2757-1634555797647</coId><text>访问有序集合的中间元素也是非常快的,因此你能够使用有序集合作为一个没有重复成员的智能列表。</text><inline-styles><font-family><from>0</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>45</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>8533-1634555873926</coId><text>SortedSet(zset)是Redis提供的一个非常特别的数据结构，一方面它等价于Java的数据结构Map&lt;String, Double&gt;，可以给每一个元素value赋予一个权重score，另一方面它又类似于TreeSet，内部的元素会按照权重score进行排序，可以得到每个元素的名次，还可以通过score的范围来获取元素的列表。</text><inline-styles><font-family><from>0</from><to>15</to><value>宋体</value></font-family><font-family><from>15</from><to>16</to><value>微软雅黑</value></font-family><font-family><from>16</from><to>21</to><value>宋体</value></font-family><font-family><from>21</from><to>43</to><value>微软雅黑</value></font-family><font-family><from>43</from><to>47</to><value>宋体</value></font-family><font-family><from>47</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>71</to><value>宋体</value></font-family><font-family><from>71</from><to>80</to><value>微软雅黑</value></font-family><font-family><from>80</from><to>85</to><value>宋体</value></font-family><font-family><from>85</from><to>91</to><value>微软雅黑</value></font-family><font-family><from>91</from><to>96</to><value>宋体</value></font-family><font-family><from>96</from><to>106</to><value>微软雅黑</value></font-family><font-family><from>106</from><to>113</to><value>宋体</value></font-family><font-family><from>113</from><to>124</to><value>微软雅黑</value></font-family><font-family><from>124</from><to>129</to><value>宋体</value></font-family><font-family><from>129</from><to>151</to><value>微软雅黑</value></font-family><font-family><from>151</from><to>156</to><value>宋体</value></font-family><font-family><from>156</from><to>168</to><value>微软雅黑</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><para><coId>6868-1634557002050</coId><text>zset底层使用了两个数据结构</text><inline-styles><font-family><from>0</from><to>4</to><value>宋体</value></font-family><font-family><from>4</from><to>15</to><value>微软雅黑</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><para><coId>5540-1634557002050</coId><text>（1）hash，hash的作用就是关联元素value和权重score，保障元素value的唯一性，可以通过元素value找到相应的score值。</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>宋体</value></font-family><font-family><from>2</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>3</from><to>7</to><value>宋体</value></font-family><font-family><from>7</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>12</to><value>宋体</value></font-family><font-family><from>12</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>26</to><value>宋体</value></font-family><font-family><from>26</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>34</to><value>宋体</value></font-family><font-family><from>34</from><to>39</to><value>微软雅黑</value></font-family><font-family><from>39</from><to>44</to><value>宋体</value></font-family><font-family><from>44</from><to>55</to><value>微软雅黑</value></font-family><font-family><from>55</from><to>60</to><value>宋体</value></font-family><font-family><from>60</from><to>65</to><value>微软雅黑</value></font-family><font-family><from>65</from><to>70</to><value>宋体</value></font-family><font-family><from>70</from><to>72</to><value>微软雅黑</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><para><coId>6040-1634557002050</coId><text>（2）跳跃表，跳跃表的目的在于给元素value排序，根据score的范围获取元素列表。</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>宋体</value></font-family><font-family><from>2</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>23</to><value>宋体</value></font-family><font-family><from>23</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>33</to><value>宋体</value></font-family><font-family><from>33</from><to>43</to><value>微软雅黑</value></font-family></inline-styles><styles><text-indent>1</text-indent></styles></para><para><coId>5089-1634555662874</coId><text>zadd  &lt;key&gt;&lt;score1&gt;&lt;value1&gt;&lt;score2&gt;&lt;value2&gt;…</text><inline-styles><font-family><from>0</from><to>43</to><value>Tahoma</value></font-family><font-family><from>43</from><to>44</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>1924-1634555871150</coId><text>将一个或多个 member 元素及其 score 值加入到有序集 key 当中。</text><inline-styles><font-family><from>0</from><to>6</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>14</to><value>Tahoma</value></font-family><font-family><from>14</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>25</to><value>Times New Roman</value></font-family><font-family><from>25</from><to>32</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>37</to><value>Times New Roman</value></font-family><font-family><from>37</from><to>40</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5432-1634557003756</coId><text/><inline-styles/><styles/></para><para><coId>2265-1634555871150</coId><text>zrange &lt;key&gt;&lt;start&gt;&lt;stop&gt;  [WITHSCORES]   </text><inline-styles><bold><from>0</from><to>42</to><value>true</value></bold><font-family><from>0</from><to>42</to><value>Tahoma</value></font-family><color><from>0</from><to>42</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>7631-1634555871150</coId><text>返回有序集 key 中，下标在&lt;start&gt;&lt;stop&gt;之间的元素</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>28</to><value>Times New Roman</value></font-family><font-family><from>28</from><to>33</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2965-1634555871150</coId><text>带WITHSCORES，可以让分数一起和值返回到结果集。</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>28</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5778-1634555871150</coId><text>zrangebyscore key minmax [withscores] [limit offset count]</text><inline-styles><font-family><from>0</from><to>24</to><value>Tahoma</value></font-family><font-family><from>25</from><to>58</to><value>Tahoma</value></font-family><color><from>18</from><to>24</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>9757-1634555871150</coId><text>返回有序集 key 中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员。有序集成员按 score 值递增(从小到大)次序排列。</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>21</to><value>Times New Roman</value></font-family><font-family><from>21</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>29</to><value>Times New Roman</value></font-family><font-family><from>29</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>35</to><value>Times New Roman</value></font-family><font-family><from>35</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>38</to><value>Times New Roman</value></font-family><font-family><from>38</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>43</from><to>47</to><value>Times New Roman</value></font-family><font-family><from>47</from><to>48</to><value>微软雅黑</value></font-family><font-family><from>49</from><to>54</to><value>Times New Roman</value></font-family><font-family><from>54</from><to>64</to><value>微软雅黑</value></font-family><font-family><from>65</from><to>71</to><value>Times New Roman</value></font-family><font-family><from>71</from><to>74</to><value>微软雅黑</value></font-family><font-family><from>74</from><to>75</to><value>Times New Roman</value></font-family><font-family><from>75</from><to>79</to><value>微软雅黑</value></font-family><font-family><from>79</from><to>80</to><value>Times New Roman</value></font-family><font-family><from>80</from><to>85</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>5982-1634555871150</coId><text>zrevrangebyscore key maxmin [withscores] [limit offset count]               </text><inline-styles><font-family><from>0</from><to>27</to><value>Tahoma</value></font-family><font-family><from>28</from><to>76</to><value>Tahoma</value></font-family><color><from>1</from><to>4</to><value>#ff0000</value></color><color><from>21</from><to>27</to><value>#ff0000</value></color></inline-styles><styles/></para><para><coId>8719-1634555871150</coId><text>同上，改为从大到小排列。</text><inline-styles><font-family><from>0</from><to>12</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>6017-1634555871150</coId><text>zincrby &lt;key&gt;&lt;increment&gt;&lt;value&gt;      为元素的score加上增量</text><inline-styles><font-family><from>0</from><to>37</to><value>Tahoma</value></font-family><font-family><from>37</from><to>41</to><value>微软雅黑</value></font-family><font-family><from>41</from><to>46</to><value>Times New Roman</value></font-family><font-family><from>46</from><to>50</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>4016-1634555871150</coId><text>zrem  &lt;key&gt;&lt;value&gt;删除该集合下，指定值的元素</text><inline-styles><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>31</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>9419-1634555871150</coId><text>zcount &lt;key&gt;&lt;min&gt;&lt;max&gt;统计该集合，分数区间内的元素个数</text><inline-styles><font-family><from>0</from><to>22</to><value>Tahoma</value></font-family><font-family><from>22</from><to>38</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>7614-1634555871150</coId><text>zrank &lt;key&gt;&lt;value&gt;返回该值在集合中的排名，从0开始。</text><inline-styles><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>35</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>2227-1634555663038</coId><text/><inline-styles/><styles/></para><para><coId>6142-1634555663195</coId><text/><inline-styles/><styles/></para><para><coId>1651-1634555663350</coId><text/><inline-styles/><styles/></para><para><coId>9754-1634555609579</coId><text/><inline-styles/><styles/></para><heading compat="true" level="1"><coId>9719-1634555609819</coId><text>Bitmaps</text><inline-styles><bold><from>0</from><to>7</to><value>true</value></bold><font-family><from>0</from><to>7</to><value>Arial</value></font-family><font-size><from>0</from><to>7</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>7240-1634560233846</coId><text>现代计算机用二进制（位） 作为信息的基础单位， 1个字节等于8位， 例如“abc”字符串是由3个字节组成， 但实际在计算机存储时将其用二进制表示， “abc”分别对应的ASCII码分别是97、 98、 99， 对应的二进制分别是01100001、 01100010和01100011，如下图</text><inline-styles><font-family><from>0</from><to>12</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>25</to><value>Tahoma</value></font-family><font-family><from>25</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>46</to><value>微软雅黑</value></font-family><font-family><from>46</from><to>47</to><value>Tahoma</value></font-family><font-family><from>47</from><to>75</to><value>微软雅黑</value></font-family><font-family><from>75</from><to>78</to><value>Tahoma</value></font-family><font-family><from>78</from><to>84</to><value>微软雅黑</value></font-family><font-family><from>84</from><to>89</to><value>Tahoma</value></font-family><font-family><from>89</from><to>93</to><value>微软雅黑</value></font-family><font-family><from>93</from><to>95</to><value>Tahoma</value></font-family><font-family><from>95</from><to>96</to><value>微软雅黑</value></font-family><font-family><from>97</from><to>99</to><value>Tahoma</value></font-family><font-family><from>99</from><to>100</to><value>微软雅黑</value></font-family><font-family><from>101</from><to>103</to><value>Tahoma</value></font-family><font-family><from>103</from><to>104</to><value>微软雅黑</value></font-family><font-family><from>114</from><to>122</to><value>Tahoma</value></font-family><font-family><from>122</from><to>123</to><value>微软雅黑</value></font-family><font-family><from>124</from><to>132</to><value>Tahoma</value></font-family><font-family><from>132</from><to>133</to><value>微软雅黑</value></font-family><font-family><from>133</from><to>141</to><value>Tahoma</value></font-family><font-family><from>141</from><to>145</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4386-1634560242706</coId><source>https://note.youdao.com/yws/res/14113/C1986F0C810F453E86C96C4BDD6631D7</source><text/><styles><align>justify</align><width>553</width><height>102</height></styles></image><para><coId>8215-1634560242706</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6611-1634560242706</coId><text>合理地使用操作位能够有效地提高内存使用率和开发效率。</text><inline-styles><font-family><from>0</from><to>26</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2851-1634560242706</coId><text>Redis提供了Bitmaps这个“数据类型”可以实现对位的操作：</text><inline-styles><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>15</to><value>Tahoma</value></font-family><font-family><from>15</from><to>33</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6570-1634560242706</coId><text>（1） Bitmaps本身不是一种数据类型， 实际上它就是字符串（key-value） ， 但是它可以对字符串的位进行操作。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>22</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>62</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5985-1634560242706</coId><text>（2） Bitmaps单独提供了一套命令， 所以在Redis中使用Bitmaps和使用字符串的方法不太相同。 可以把Bitmaps想象成一个以位为单位的数组， 数组的每个单元只能存储0和1， 数组的下标在Bitmaps中叫做偏移量。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>58</to><value>微软雅黑</value></font-family><font-family><from>58</from><to>65</to><value>Tahoma</value></font-family><font-family><from>65</from><to>91</to><value>微软雅黑</value></font-family><font-family><from>91</from><to>92</to><value>Tahoma</value></font-family><font-family><from>92</from><to>93</to><value>微软雅黑</value></font-family><font-family><from>93</from><to>94</to><value>Tahoma</value></font-family><font-family><from>94</from><to>102</to><value>微软雅黑</value></font-family><font-family><from>102</from><to>109</to><value>Tahoma</value></font-family><font-family><from>109</from><to>116</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1893-1634560242706</coId><source>https://note.youdao.com/yws/res/14116/DB9F6B7006E34B0F8E0D0CC34F4DB45E</source><text/><styles><width>553</width><height>55</height></styles></image><para><coId>9813-1634560242708</coId><text>1、setbit</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>8</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7572-1634560348510</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1519-1634560348510</coId><text>setbit&lt;key&gt;&lt;offset&gt;&lt;value&gt;设置Bitmaps中某个偏移量的值（0或1）</text><inline-styles><font-family><from>0</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>35</to><value>Tahoma</value></font-family><font-family><from>35</from><to>44</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>45</to><value>Tahoma</value></font-family><font-family><from>45</from><to>46</to><value>微软雅黑</value></font-family><font-family><from>46</from><to>47</to><value>Tahoma</value></font-family><font-family><from>47</from><to>48</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>8028-1634560348510</coId><source>https://note.youdao.com/yws/res/14117/C92E8F01A19A4585AF805C5EA2B087CF</source><text/><styles><align>justify</align><width>337</width><height>24</height></styles></image><para><coId>7811-1634560348510</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8154-1634560348510</coId><text>*offset:偏移量从0开始</text><inline-styles><font-family><from>0</from><to>8</to><value>Tahoma</value></font-family><font-family><from>8</from><to>12</to><value>微软雅黑</value></font-family><font-family><from>12</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>15</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2930-1634560348510</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3025-1634560348510</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9921-1634560348510</coId><text>每个独立用户是否访问过网站存放在Bitmaps中， 将访问的用户记做1， 没有访问的用户记做0， 用偏移量作为用户的id。</text><inline-styles><font-family><from>0</from><to>16</to><value>微软雅黑</value></font-family><font-family><from>16</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>34</to><value>微软雅黑</value></font-family><font-family><from>34</from><to>35</to><value>Tahoma</value></font-family><font-family><from>35</from><to>46</to><value>微软雅黑</value></font-family><font-family><from>46</from><to>47</to><value>Tahoma</value></font-family><font-family><from>47</from><to>58</to><value>微软雅黑</value></font-family><font-family><from>58</from><to>60</to><value>Tahoma</value></font-family><font-family><from>60</from><to>61</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>2093-1634560348510</coId><text>设置键的第offset个位的值（从0算起） ， 假设现在有20个用户，userid=1， 6， 11， 15， 19的用户对网站进行了访问， 那么当前Bitmaps初始化结果如图</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>35</to><value>微软雅黑</value></font-family><font-family><from>35</from><to>43</to><value>Tahoma</value></font-family><font-family><from>43</from><to>45</to><value>微软雅黑</value></font-family><font-family><from>45</from><to>46</to><value>Tahoma</value></font-family><font-family><from>46</from><to>48</to><value>微软雅黑</value></font-family><font-family><from>48</from><to>50</to><value>Tahoma</value></font-family><font-family><from>50</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>54</to><value>Tahoma</value></font-family><font-family><from>54</from><to>56</to><value>微软雅黑</value></font-family><font-family><from>56</from><to>58</to><value>Tahoma</value></font-family><font-family><from>58</from><to>75</to><value>微软雅黑</value></font-family><font-family><from>75</from><to>82</to><value>Tahoma</value></font-family><font-family><from>82</from><to>89</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><image><coId>9724-1634560348510</coId><source>https://note.youdao.com/yws/res/14112/7CEBFB1C6D3D4B08928BC027F190F456</source><text/><styles><align>justify</align><width>431</width><height>90</height></styles></image><para><coId>8517-1634560348510</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3889-1634560348510</coId><text>unique:users:20201106代表2020-11-06这天的独立访问用户的Bitmaps</text><inline-styles><font-family><from>0</from><to>21</to><value>Tahoma</value></font-family><font-family><from>21</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>33</to><value>Tahoma</value></font-family><font-family><from>33</from><to>43</to><value>微软雅黑</value></font-family><font-family><from>43</from><to>50</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>7594-1634560348510</coId><source>https://note.youdao.com/yws/res/14114/4B33BFF37D5C4477938DB0FC9E46DD13</source><text/><styles><width>420</width><height>162</height></styles></image><para><coId>3687-1634560247806</coId><text>注：</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><color><from>0</from><to>2</to><value>#ff0000</value></color></inline-styles><styles><align>justify</align></styles></para><para><coId>5611-1634560572873</coId><text>很多应用的用户id以一个指定数字（例如10000） 开头， 直接将用户id和Bitmaps的偏移量对应势必会造成一定的浪费， 通常的做法是每次做setbit操作时将用户id减去这个指定数字。</text><inline-styles><font-family><from>0</from><to>7</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>9</to><value>Tahoma</value></font-family><font-family><from>9</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>35</to><value>微软雅黑</value></font-family><font-family><from>35</from><to>37</to><value>Tahoma</value></font-family><font-family><from>37</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>45</to><value>Tahoma</value></font-family><font-family><from>45</from><to>72</to><value>微软雅黑</value></font-family><font-family><from>72</from><to>78</to><value>Tahoma</value></font-family><font-family><from>78</from><to>84</to><value>微软雅黑</value></font-family><font-family><from>84</from><to>86</to><value>Tahoma</value></font-family><font-family><from>86</from><to>95</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>1030-1634560572873</coId><text>在第一次初始化Bitmaps时， 假如偏移量非常大， 那么整个初始化过程执行会比较慢， 可能会造成Redis的阻塞。</text><inline-styles><font-family><from>0</from><to>7</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>14</to><value>Tahoma</value></font-family><font-family><from>14</from><to>49</to><value>微软雅黑</value></font-family><font-family><from>49</from><to>54</to><value>Tahoma</value></font-family><font-family><from>54</from><to>58</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>6750-1634560248023</coId><text>2、getbit</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>8</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3112-1634560633551</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7419-1634560633551</coId><text>getbit&lt;key&gt;&lt;offset&gt;获取Bitmaps中某个偏移量的值</text><inline-styles><font-family><from>0</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>28</to><value>Tahoma</value></font-family><font-family><from>28</from><to>36</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4880-1634560633551</coId><source>https://note.youdao.com/yws/res/14121/CC0A01D8393F466C86AF19441416E590</source><text/><styles><align>justify</align><width>301</width><height>24</height></styles></image><para><coId>1081-1634560633551</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7869-1634560633551</coId><text>获取键的第offset位的值（从0开始算）</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>11</to><value>Arial</value></font-family><font-family><from>11</from><to>16</to><value>微软雅黑</value></font-family><font-family><from>16</from><to>17</to><value>Arial</value></font-family><font-family><from>17</from><to>21</to><value>微软雅黑</value></font-family><color><from>0</from><to>21</to><value>#333333</value></color><back-color><from>0</from><to>21</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><para><coId>2510-1634560633551</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5995-1634560633551</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4216-1634560633551</coId><text>获取id=8的用户是否在2020-11-06这天访问过， 返回0说明没有访问过：</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>6</to><value>Arial</value></font-family><font-family><from>6</from><to>12</to><value>微软雅黑</value></font-family><font-family><from>12</from><to>22</to><value>Arial</value></font-family><font-family><from>22</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>32</to><value>Arial</value></font-family><font-family><from>32</from><to>40</to><value>微软雅黑</value></font-family><color><from>0</from><to>40</to><value>#333333</value></color><back-color><from>0</from><to>40</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><image><coId>6281-1634560633551</coId><source>https://note.youdao.com/yws/res/14122/9CAA67C5D40D41998641F877ADA1C262</source><text/><styles><align>justify</align><width>407</width><height>99</height></styles></image><para><coId>6087-1634560633551</coId><text> 注：因为100根本不存在，所以也是返回0</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>8</to><value>Tahoma</value></font-family><font-family><from>8</from><to>20</to><value>微软雅黑</value></font-family><font-family><from>20</from><to>21</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2177-1634560655726</coId><text>3、bitcount</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>10</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9069-1634560656195</coId><text>统计字符串被设置为1的bit数。一般情况下，给定的整个字符串都会被进行计数，通过指定额外的 start 或 end 参数，可以让计数只在特定的位上进行。start 和 end 参数的设置，都可以使用负数值：比如 -1 表示最后一个位，而 -2 表示倒数第二个位，start、end 是指bit组的字节的下标数，二者皆包含。</text><inline-styles><bold><from>2</from><to>5</to><value>true</value></bold><font-family><from>0</from><to>9</to><value>微软雅黑</value></font-family><font-family><from>9</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>11</to><value>微软雅黑</value></font-family><font-family><from>11</from><to>14</to><value>Tahoma</value></font-family><font-family><from>14</from><to>45</to><value>微软雅黑</value></font-family><font-family><from>45</from><to>52</to><value>Tahoma</value></font-family><font-family><from>52</from><to>54</to><value>微软雅黑</value></font-family><font-family><from>54</from><to>58</to><value>Tahoma</value></font-family><font-family><from>58</from><to>76</to><value>微软雅黑</value></font-family><font-family><from>76</from><to>82</to><value>Tahoma</value></font-family><font-family><from>82</from><to>84</to><value>微软雅黑</value></font-family><font-family><from>84</from><to>88</to><value>Tahoma</value></font-family><font-family><from>88</from><to>106</to><value>微软雅黑</value></font-family><font-family><from>106</from><to>109</to><value>Tahoma</value></font-family><font-family><from>109</from><to>119</to><value>微软雅黑</value></font-family><font-family><from>119</from><to>122</to><value>Tahoma</value></font-family><font-family><from>122</from><to>131</to><value>微软雅黑</value></font-family><font-family><from>131</from><to>136</to><value>Tahoma</value></font-family><font-family><from>136</from><to>137</to><value>微软雅黑</value></font-family><font-family><from>137</from><to>141</to><value>Tahoma</value></font-family><font-family><from>141</from><to>143</to><value>微软雅黑</value></font-family><font-family><from>143</from><to>146</to><value>Tahoma</value></font-family><font-family><from>146</from><to>161</to><value>微软雅黑</value></font-family></inline-styles><styles/></para><para><coId>9033-1634560656195</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9221-1634560656195</coId><text>bitcount&lt;key&gt;[start end] 统计字符串从start字节到end字节比特值为1的数量</text><inline-styles><font-family><from>0</from><to>25</to><value>Tahoma</value></font-family><font-family><from>25</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>36</to><value>Tahoma</value></font-family><font-family><from>36</from><to>39</to><value>微软雅黑</value></font-family><font-family><from>39</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>48</to><value>微软雅黑</value></font-family><font-family><from>48</from><to>49</to><value>Tahoma</value></font-family><font-family><from>49</from><to>52</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>3910-1634560656195</coId><source>https://note.youdao.com/yws/res/14128/2CC9ECFD47E1446F9314EA796880DEBA</source><text/><styles><align>justify</align><width>372</width><height>21</height></styles></image><para><coId>1244-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5814-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>0031-1634560656195</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8052-1634560656195</coId><text>计算2022-11-06这天的独立访问用户数量</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>12</to><value>Arial</value></font-family><font-family><from>12</from><to>23</to><value>微软雅黑</value></font-family><color><from>0</from><to>23</to><value>#333333</value></color><back-color><from>0</from><to>23</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><image><coId>6720-1634560656195</coId><source>https://note.youdao.com/yws/res/14130/2F227E702C6449B180F27A5B5AC9AC48</source><text/><styles><align>justify</align><width>393</width><height>38</height></styles></image><para><coId>9980-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6910-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5391-1634560656195</coId><text>start和end代表起始和结束字节数， 下面操作计算用户id在第1个字节到第3个字节之间的独立访问用户数， 对应的用户id是11， 15， 19。</text><inline-styles><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>6</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>9</to><value>Tahoma</value></font-family><font-family><from>9</from><to>29</to><value>微软雅黑</value></font-family><font-family><from>29</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>34</to><value>Tahoma</value></font-family><font-family><from>34</from><to>39</to><value>微软雅黑</value></font-family><font-family><from>39</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>60</to><value>微软雅黑</value></font-family><font-family><from>60</from><to>62</to><value>Tahoma</value></font-family><font-family><from>62</from><to>63</to><value>微软雅黑</value></font-family><font-family><from>63</from><to>65</to><value>Tahoma</value></font-family><font-family><from>65</from><to>67</to><value>微软雅黑</value></font-family><font-family><from>67</from><to>69</to><value>Tahoma</value></font-family><font-family><from>69</from><to>71</to><value>微软雅黑</value></font-family><font-family><from>71</from><to>73</to><value>Tahoma</value></font-family><font-family><from>73</from><to>74</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1694-1634560656195</coId><source>https://note.youdao.com/yws/res/14129/028420D8C12D483281D60AB0106F4D0F</source><text/><styles><align>justify</align><width>397</width><height>31</height></styles></image><para><coId>3846-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6067-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>0040-1634560656195</coId><text>举例： K1 【01000001 01000000  00000000 00100001】，对应【0，1，2，3】</text><inline-styles><font-family><from>0</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>4</from><to>7</to><value>Tahoma</value></font-family><font-family><from>7</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>44</to><value>Tahoma</value></font-family><font-family><from>44</from><to>49</to><value>微软雅黑</value></font-family><font-family><from>49</from><to>50</to><value>Tahoma</value></font-family><font-family><from>50</from><to>51</to><value>微软雅黑</value></font-family><font-family><from>51</from><to>52</to><value>Tahoma</value></font-family><font-family><from>52</from><to>53</to><value>微软雅黑</value></font-family><font-family><from>53</from><to>54</to><value>Tahoma</value></font-family><font-family><from>54</from><to>55</to><value>微软雅黑</value></font-family><font-family><from>55</from><to>56</to><value>Tahoma</value></font-family><font-family><from>56</from><to>57</to><value>微软雅黑</value></font-family><color><from>0</from><to>57</to><value>#ff0000</value></color></inline-styles><styles><align>justify</align></styles></para><para><coId>9351-1634560656195</coId><text>bitcount K1 1 2  ： 统计下标1、2字节组中bit=1的个数，即01000000  00000000</text><inline-styles><font-family><from>0</from><to>17</to><value>Tahoma</value></font-family><font-family><from>17</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>35</to><value>Tahoma</value></font-family><font-family><from>35</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>58</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8479-1634560656195</coId><text>--》bitcount K1 1 2 　　--》1</text><inline-styles><font-family><from>0</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>3</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>25</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9328-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4154-1634560656195</coId><text>bitcount K1 1 3  ： 统计下标1、2字节组中bit=1的个数，即01000000  00000000 00100001</text><inline-styles><font-family><from>0</from><to>17</to><value>Tahoma</value></font-family><font-family><from>17</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>35</to><value>Tahoma</value></font-family><font-family><from>35</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>67</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4949-1634560656195</coId><text>--》bitcount K1 1 3　　--》3</text><inline-styles><font-family><from>0</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>3</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>20</to><value>微软雅黑</value></font-family><font-family><from>20</from><to>22</to><value>Tahoma</value></font-family><font-family><from>22</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>24</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9391-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2450-1634560656195</coId><text>bitcount K1 0 -2  ： 统计下标0到下标倒数第2，字节组中bit=1的个数，即01000001  01000000   00000000</text><inline-styles><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>25</to><value>Tahoma</value></font-family><font-family><from>25</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>31</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>37</to><value>微软雅黑</value></font-family><font-family><from>37</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>76</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4667-1634560656195</coId><text>--》bitcount K1 0 -2　　--》3</text><inline-styles><font-family><from>0</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>3</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>21</to><value>微软雅黑</value></font-family><font-family><from>21</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>25</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3082-1634560656195</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6615-1634560656195</coId><text> 注意：redis的setbit设置或清除的是bit位置，而bitcount计算的是byte位置。</text><inline-styles><font-family><from>1</from><to>4</to><value>微软雅黑</value></font-family><font-family><from>4</from><to>9</to><value>Tahoma</value></font-family><font-family><from>9</from><to>10</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>16</to><value>Tahoma</value></font-family><font-family><from>16</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>23</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>38</to><value>Tahoma</value></font-family><font-family><from>38</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>46</to><value>Tahoma</value></font-family><font-family><from>46</from><to>49</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4730-1634560656195</coId><text> 4、bitop</text><inline-styles><font-family><from>0</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>3</to><value>微软雅黑</value></font-family><font-family><from>3</from><to>8</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5270-1634560666484</coId><text>(1)格式</text><inline-styles><font-family><from>0</from><to>3</to><value>Tahoma</value></font-family><font-family><from>3</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9312-1634560666484</coId><text>bitop  and(or/not/xor) &lt;destkey&gt; [key…]</text><inline-styles><font-family><from>0</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>31</to><value>Arial</value></font-family><font-family><from>31</from><to>39</to><value>Tahoma</value></font-family><color><from>24</from><to>31</to><value>#333333</value></color><back-color><from>24</from><to>31</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><image><coId>2514-1634560666484</coId><source>https://note.youdao.com/yws/res/14133/868F32E517674FFC9ECD731530762CDF</source><text/><styles><align>justify</align><width>440</width><height>19</height></styles></image><para><coId>5431-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1947-1634560666484</coId><text>bitop是一个复合操作， 它可以做多个Bitmaps的and（交集） 、 or（并集） 、 not（非） 、 xor（异或） 操作并将结果保存在destkey中。</text><inline-styles><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>20</to><value>微软雅黑</value></font-family><font-family><from>20</from><to>27</to><value>Tahoma</value></font-family><font-family><from>27</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>38</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>50</to><value>Tahoma</value></font-family><font-family><from>50</from><to>56</to><value>微软雅黑</value></font-family><font-family><from>56</from><to>59</to><value>Tahoma</value></font-family><font-family><from>59</from><to>73</to><value>微软雅黑</value></font-family><font-family><from>73</from><to>80</to><value>Tahoma</value></font-family><font-family><from>80</from><to>82</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4512-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7931-1634560666484</coId><text>(2)实例</text><inline-styles><font-family><from>0</from><to>3</to><value>Tahoma</value></font-family><font-family><from>3</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1241-1634560666484</coId><text>2020-11-04 日访问网站的userid=1,2,5,9。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>32</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9480-1634560666484</coId><text>setbit unique:users:20201104 1 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2697-1634560666484</coId><text>setbit unique:users:20201104 2 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4144-1634560666484</coId><text>setbit unique:users:20201104 5 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3365-1634560666484</coId><text>setbit unique:users:20201104 9 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8747-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1486-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6945-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6599-1634560666484</coId><text>2020-11-03 日访问网站的userid=0,1,4,9。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>17</to><value>微软雅黑</value></font-family><font-family><from>17</from><to>31</to><value>Tahoma</value></font-family><font-family><from>31</from><to>32</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4322-1634560666484</coId><text>setbit unique:users:20201103 0 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9096-1634560666484</coId><text>setbit unique:users:20201103 1 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9095-1634560666484</coId><text>setbit unique:users:20201103 4 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9077-1634560666484</coId><text>setbit unique:users:20201103 9 1</text><inline-styles><font-family><from>0</from><to>32</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9384-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Arial</value></font-family><color><from>0</from><to>1</to><value>#333333</value></color><back-color><from>0</from><to>1</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><para><coId>4165-1634560666484</coId><text>计算出两天都访问过网站的用户数量</text><inline-styles><font-family><from>0</from><to>16</to><value>微软雅黑</value></font-family><color><from>0</from><to>16</to><value>#333333</value></color><back-color><from>0</from><to>16</to><value>#ffffff</value></back-color></inline-styles><styles><align>justify</align></styles></para><para><coId>2422-1634560666484</coId><text>bitop and unique:users:and:20201104_03</text><inline-styles><font-family><from>0</from><to>38</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2432-1634560666484</coId><text> unique:users:20201103unique:users:20201104</text><inline-styles><font-family><from>0</from><to>43</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>9831-1634560666484</coId><source>https://note.youdao.com/yws/res/14135/51726804278E4003B0958B6877C02006</source><text/><styles><align>justify</align><width>554</width><height>61</height></styles></image><para><coId>2812-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4548-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1044-1634560666484</coId><source>https://note.youdao.com/yws/res/14134/009C78AF944E4437912EC96490E847F5</source><text/><styles><align>justify</align><width>395</width><height>252</height></styles></image><para><coId>4531-1634560666484</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2760-1634560666484</coId><text>计算出任意一天都访问过网站的用户数量（例如月活跃就是类似这种） ， 可以使用or求并集</text><inline-styles><font-family><from>0</from><to>31</to><value>微软雅黑</value></font-family><font-family><from>38</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>43</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>2929-1634560666484</coId><source>https://note.youdao.com/yws/res/14132/B76FC78370C5415B966D849AA8CD5669</source><text/><styles><align>justify</align><width>554</width><height>59</height></styles></image><para><coId>2195-1634560666484</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>3073-1634727199522</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>8073-1634727200648</coId><text>-------------------------------------------------------------------------------------------------------------------------Redis6新数据类型 </text><inline-styles><font-family><from>0</from><to>133</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9896-1634727547163</coId><text/><inline-styles/><styles><align>justify</align></styles></para><heading compat="true" level="1"><coId>8755-1634727547479</coId><text>Bitmaps</text><inline-styles><bold><from>0</from><to>7</to><value>true</value></bold><font-family><from>0</from><to>7</to><value>Tahoma</value></font-family><font-size><from>0</from><to>7</to><value>28</value></font-size></inline-styles><styles><align>justify</align></styles></heading><para><coId>8236-1634727223321</coId><text>Redis提供了Bitmaps这个“数据类型”可以实现对位的操作：</text><inline-styles><font-family><from>0</from><to>5</to><value>Tahoma</value></font-family><font-family><from>5</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>15</to><value>Tahoma</value></font-family><font-family><from>15</from><to>33</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7942-1634727540778</coId><text>（1） Bitmaps本身不是一种数据类型， 实际上它就是字符串（key-value） ， 但是它可以对字符串的位进行操作。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>22</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>62</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8397-1634727540778</coId><text>（2） Bitmaps单独提供了一套命令， 所以在Redis中使用Bitmaps和使用字符串的方法不太相同。 可以把Bitmaps想象成一个以位为单位的数组， 数组的每个单元只能存储0和1， 数组的下标在Bitmaps中叫做偏移量。</text><inline-styles><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-family><from>11</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>30</to><value>Tahoma</value></font-family><font-family><from>30</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>40</to><value>Tahoma</value></font-family><font-family><from>40</from><to>58</to><value>微软雅黑</value></font-family><font-family><from>58</from><to>65</to><value>Tahoma</value></font-family><font-family><from>65</from><to>91</to><value>微软雅黑</value></font-family><font-family><from>91</from><to>92</to><value>Tahoma</value></font-family><font-family><from>92</from><to>93</to><value>微软雅黑</value></font-family><font-family><from>93</from><to>94</to><value>Tahoma</value></font-family><font-family><from>94</from><to>102</to><value>微软雅黑</value></font-family><font-family><from>102</from><to>109</to><value>Tahoma</value></font-family><font-family><from>109</from><to>116</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4085-1634727540778</coId><source>https://note.youdao.com/yws/res/14140/C120D3C9707948E5A2375FF2F213E6D1</source><text/><styles><width>553</width><height>55</height></styles></image><heading compat="true" level="1"><coId>4310-1634729879765</coId><text/><inline-styles/><styles><align>justify</align><text-indent>1</text-indent></styles></heading><heading compat="true" level="1"><coId>9027-1634729882150</coId><text/><inline-styles/><styles/></heading><heading compat="true" level="1"><coId>6863-1634729883363</coId><text>HyperLogLog</text><inline-styles><bold><from>0</from><to>11</to><value>true</value></bold><font-family><from>0</from><to>11</to><value>Tahoma</value></font-family><font-size><from>0</from><to>11</to><value>28</value></font-size></inline-styles><styles/></heading><para><coId>8367-1634729535837</coId><text>在工作当中，我们经常会遇到与统计相关的功能需求，比如统计网站PV（PageView页面访问量）,可以使用Redis的incr、incrby轻松实现。</text><inline-styles><font-family><from>0</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>41</to><value>Tahoma</value></font-family><font-family><from>41</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>48</to><value>Tahoma</value></font-family><font-family><from>48</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>57</to><value>Tahoma</value></font-family><font-family><from>57</from><to>58</to><value>微软雅黑</value></font-family><font-family><from>58</from><to>62</to><value>Tahoma</value></font-family><font-family><from>62</from><to>63</to><value>微软雅黑</value></font-family><font-family><from>63</from><to>69</to><value>Tahoma</value></font-family><font-family><from>69</from><to>74</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>8028-1634729735311</coId><text>但像UV（UniqueVisitor，独立访客）、独立IP数、搜索记录数等需要去重和计数的问题如何解决？这种求集合中不重复元素个数的问题称为基数问题。</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>4</to><value>Tahoma</value></font-family><font-family><from>4</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>27</to><value>微软雅黑</value></font-family><font-family><from>27</from><to>29</to><value>Tahoma</value></font-family><font-family><from>29</from><to>75</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>3163-1634729735311</coId><text>解决基数问题有很多种方案：</text><inline-styles><font-family><from>0</from><to>13</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>2014-1634729735311</coId><text>（1）数据存储在MySQL表中，使用distinct count计算不重复个数</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>32</to><value>Tahoma</value></font-family><font-family><from>32</from><to>39</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>2988-1634729735311</coId><text>（2）使用Redis提供的hash、set、bitmaps等数据结构来处理</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>13</to><value>微软雅黑</value></font-family><font-family><from>13</from><to>17</to><value>Tahoma</value></font-family><font-family><from>17</from><to>18</to><value>微软雅黑</value></font-family><font-family><from>18</from><to>21</to><value>Tahoma</value></font-family><font-family><from>21</from><to>22</to><value>微软雅黑</value></font-family><font-family><from>22</from><to>29</to><value>Tahoma</value></font-family><font-family><from>29</from><to>37</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>4000-1634729735311</coId><text>以上的方案结果精确，但随着数据不断增加，导致占用空间越来越大，对于非常大的数据集是不切实际的。</text><inline-styles><font-family><from>0</from><to>47</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>6091-1634729735311</coId><text>能否能够降低一定的精度来平衡存储空间？Redis推出了HyperLogLog</text><inline-styles><font-family><from>0</from><to>19</to><value>微软雅黑</value></font-family><font-family><from>19</from><to>24</to><value>Tahoma</value></font-family><font-family><from>24</from><to>27</to><value>微软雅黑</value></font-family><font-family><from>27</from><to>38</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>8350-1634729735311</coId><text>Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。</text><inline-styles><font-family><from>0</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>30</to><value>微软雅黑</value></font-family><font-family><from>30</from><to>42</to><value>Tahoma</value></font-family><font-family><from>42</from><to>88</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>7254-1634729735311</coId><text>在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>8</to><value>Tahoma</value></font-family><font-family><from>8</from><to>14</to><value>微软雅黑</value></font-family><font-family><from>14</from><to>26</to><value>Tahoma</value></font-family><font-family><from>26</from><to>33</to><value>微软雅黑</value></font-family><font-family><from>33</from><to>39</to><value>Tahoma</value></font-family><font-family><from>39</from><to>50</to><value>微软雅黑</value></font-family><font-family><from>50</from><to>55</to><value>Tahoma</value></font-family><font-family><from>55</from><to>93</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>6379-1634729735311</coId><text>但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>59</to><value>Tahoma</value></font-family><font-family><from>59</from><to>77</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>9123-1634729735311</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5985-1634729735311</coId><text>什么是基数?</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>5</from><to>6</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>7028-1634729735311</coId><text>比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}, 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。</text><inline-styles><font-family><from>0</from><to>5</to><value>微软雅黑</value></font-family><font-family><from>6</from><to>27</to><value>Tahoma</value></font-family><font-family><from>27</from><to>42</to><value>微软雅黑</value></font-family><font-family><from>42</from><to>59</to><value>Tahoma</value></font-family><font-family><from>59</from><to>61</to><value>微软雅黑</value></font-family><font-family><from>61</from><to>62</to><value>Tahoma</value></font-family><font-family><from>62</from><to>67</to><value>微软雅黑</value></font-family><font-family><from>67</from><to>68</to><value>Tahoma</value></font-family><font-family><from>68</from><to>69</to><value>微软雅黑</value></font-family><font-family><from>69</from><to>70</to><value>Tahoma</value></font-family><font-family><from>70</from><to>96</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>7770-1634729535960</coId><text>1、pfadd</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>7</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3485-1634729760356</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6012-1634729760356</coId><text>pfadd &lt;key&gt;&lt; element&gt; [element ...]   添加指定元素到 HyperLogLog 中</text><inline-styles><font-family><from>0</from><to>38</to><value>Tahoma</value></font-family><font-family><from>38</from><to>45</to><value>微软雅黑</value></font-family><font-family><from>46</from><to>58</to><value>Tahoma</value></font-family><font-family><from>58</from><to>59</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4417-1634729760356</coId><source>https://note.youdao.com/yws/res/14148/D6E569FC00AD43A5AEF7D639749F726C</source><text/><styles><align>justify</align><width>436</width><height>22</height></styles></image><para><coId>4575-1634729760356</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>2291-1634729760356</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1340-1634729760356</coId><source>https://note.youdao.com/yws/res/14149/402106F11E3E449DB45A0DF27A8E6BBF</source><text/><styles><align>justify</align><width>316</width><height>125</height></styles></image><para><coId>5570-1634729760356</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>4621-1634729760356</coId><text>将所有元素添加到指定HyperLogLog数据结构中。如果执行命令后HLL估计的近似基数发生变化，则返回1，否则返回0。</text><inline-styles><font-family><from>0</from><to>10</to><value>微软雅黑</value></font-family><font-family><from>10</from><to>21</to><value>Tahoma</value></font-family><font-family><from>21</from><to>34</to><value>微软雅黑</value></font-family><font-family><from>34</from><to>37</to><value>Tahoma</value></font-family><font-family><from>37</from><to>52</to><value>微软雅黑</value></font-family><font-family><from>52</from><to>53</to><value>Tahoma</value></font-family><font-family><from>53</from><to>58</to><value>微软雅黑</value></font-family><font-family><from>58</from><to>59</to><value>Tahoma</value></font-family><font-family><from>59</from><to>60</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8818-1634729760356</coId><text>2、pfcount</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>9</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6980-1634729760356</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5097-1634729760356</coId><text>pfcount&lt;key&gt; [key ...] 计算HLL的近似基数，可以计算多个HLL，比如用HLL存储每天的UV，计算一周的UV可以使用7天的UV合并计算即可</text><inline-styles><font-family><from>0</from><to>23</to><value>Tahoma</value></font-family><font-family><from>23</from><to>25</to><value>微软雅黑</value></font-family><font-family><from>25</from><to>28</to><value>Tahoma</value></font-family><font-family><from>28</from><to>40</to><value>微软雅黑</value></font-family><font-family><from>40</from><to>43</to><value>Tahoma</value></font-family><font-family><from>43</from><to>47</to><value>微软雅黑</value></font-family><font-family><from>47</from><to>50</to><value>Tahoma</value></font-family><font-family><from>50</from><to>55</to><value>微软雅黑</value></font-family><font-family><from>55</from><to>57</to><value>Tahoma</value></font-family><font-family><from>57</from><to>63</to><value>微软雅黑</value></font-family><font-family><from>63</from><to>65</to><value>Tahoma</value></font-family><font-family><from>65</from><to>69</to><value>微软雅黑</value></font-family><font-family><from>69</from><to>70</to><value>Tahoma</value></font-family><font-family><from>70</from><to>72</to><value>微软雅黑</value></font-family><font-family><from>72</from><to>74</to><value>Tahoma</value></font-family><font-family><from>74</from><to>80</to><value>微软雅黑</value></font-family><color><from>23</from><to>33</to><value>#ff0000</value></color></inline-styles><styles><align>justify</align></styles></para><image><coId>5026-1634729760356</coId><source>https://note.youdao.com/yws/res/14150/67C87FFE5D57444388DB1B73EEE7FE21</source><text/><styles><align>justify</align><width>397</width><height>27</height></styles></image><para><coId>7931-1634729760356</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>9293-1634729760359</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1362-1634729760359</coId><source>https://note.youdao.com/yws/res/14151/17B69E762E394FE193763486D7C5B058</source><text/><styles><align>justify</align><width>252</width><height>200</height></styles></image><para><coId>5335-1634729760359</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5046-1634729760359</coId><text>3、pfmerge</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>9</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5654-1634729760359</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2025-1634729760359</coId><text>pfmerge&lt;destkey&gt;&lt;sourcekey&gt; [sourcekey ...]  将一个或多个HLL合并后的结果存储在另一个HLL中，比如每月活跃用户可以使用每天的活跃用户来合并计算可得</text><inline-styles><font-family><from>0</from><to>45</to><value>Tahoma</value></font-family><font-family><from>45</from><to>51</to><value>微软雅黑</value></font-family><font-family><from>51</from><to>54</to><value>Tahoma</value></font-family><font-family><from>54</from><to>66</to><value>微软雅黑</value></font-family><font-family><from>66</from><to>69</to><value>Tahoma</value></font-family><font-family><from>69</from><to>97</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>7532-1634729760359</coId><source>https://note.youdao.com/yws/res/14147/CF665D838EB1462DBF309701F12FE8C6</source><text/><styles><align>justify</align><width>554</width><height>21</height></styles></image><para><coId>2146-1634729760359</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>3472-1634729760359</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1582-1634729760359</coId><source>https://note.youdao.com/yws/res/14146/973E251F18164E77AFDC47131EAC0994</source><text/><styles><align>justify</align><width>322</width><height>118</height></styles></image><para><coId>4121-1634729760359</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><heading compat="true" level="1"><coId>2063-1634727224030</coId><text>Geospatial</text><inline-styles><bold><from>0</from><to>10</to><value>true</value></bold><font-family><from>0</from><to>10</to><value>Arial</value></font-family><font-size><from>0</from><to>10</to><value>28</value></font-size></inline-styles><styles><align>justify</align></styles></heading><para><coId>4196-1634729809606</coId><text>Redis 3.2 中增加了对GEO类型的支持。GEO，Geographic，地理信息的缩写。该类型，就是元素的2维坐标，在地图上就是经纬度。redis基于该类型，提供了经纬度设置，查询，范围查询，距离查询，经纬度Hash等常见操作。</text><inline-styles><font-family><from>0</from><to>10</to><value>Tahoma</value></font-family><font-family><from>10</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>18</to><value>Tahoma</value></font-family><font-family><from>18</from><to>24</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>27</to><value>Tahoma</value></font-family><font-family><from>27</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>38</to><value>Tahoma</value></font-family><font-family><from>38</from><to>56</to><value>微软雅黑</value></font-family><font-family><from>56</from><to>57</to><value>Tahoma</value></font-family><font-family><from>57</from><to>71</to><value>微软雅黑</value></font-family><font-family><from>71</from><to>76</to><value>Tahoma</value></font-family><font-family><from>76</from><to>107</to><value>微软雅黑</value></font-family><font-family><from>107</from><to>111</to><value>Tahoma</value></font-family><font-family><from>111</from><to>117</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>6563-1634729809809</coId><text>1、geoadd</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>8</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1993-1634729830436</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9600-1634729830436</coId><text>geoadd&lt;key&gt;&lt; longitude&gt;&lt;latitude&gt;&lt;member&gt; [longitude latitude member...]   添加地理位置（经度，纬度，名称）</text><inline-styles><font-family><from>0</from><to>75</to><value>Tahoma</value></font-family><font-family><from>75</from><to>91</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4241-1634729830436</coId><source>https://note.youdao.com/yws/res/14161/C1FA3BDB59084C9C92D1D4E7839E7E93</source><text/><styles><align>justify</align><width>554</width><height>22</height></styles></image><para><coId>7778-1634729830436</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>3127-1634729830436</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>5271-1634729830436</coId><text>geoadd china:city 121.47 31.23 shanghai</text><inline-styles><font-family><from>0</from><to>39</to><value>Tahoma</value></font-family><back-color><from>13</from><to>17</to><value>#ffff00</value></back-color></inline-styles><styles><align>justify</align></styles></para><para><coId>6613-1634729830436</coId><text>geoadd china:city 106.50 29.53 chongqing 114.05 22.52 shenzhen 116.38 39.90 beijing</text><inline-styles><font-family><from>0</from><to>83</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>4398-1634729830436</coId><source>https://note.youdao.com/yws/res/14156/96B180CFB6DC46C8A673986554EAC494</source><text/><styles><align>justify</align><width>554</width><height>59</height></styles></image><para><coId>9740-1634729830437</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1882-1634729830437</coId><text>两极无法直接添加，一般会下载城市数据，直接通过 Java 程序一次性导入。</text><inline-styles><font-family><from>0</from><to>23</to><value>微软雅黑</value></font-family><font-family><from>24</from><to>29</to><value>Tahoma</value></font-family><font-family><from>29</from><to>37</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>3667-1634729830437</coId><text>有效的经度从 -180 度到 180 度。有效的纬度从 -85.05112878 度到 85.05112878 度。</text><inline-styles><font-family><from>0</from><to>6</to><value>微软雅黑</value></font-family><font-family><from>7</from><to>12</to><value>Tahoma</value></font-family><font-family><from>12</from><to>15</to><value>微软雅黑</value></font-family><font-family><from>15</from><to>19</to><value>Tahoma</value></font-family><font-family><from>19</from><to>28</to><value>微软雅黑</value></font-family><font-family><from>28</from><to>41</to><value>Tahoma</value></font-family><font-family><from>41</from><to>44</to><value>微软雅黑</value></font-family><font-family><from>44</from><to>56</to><value>Tahoma</value></font-family><font-family><from>56</from><to>58</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>2492-1634729830437</coId><text>当坐标位置超出指定范围时，该命令将会返回一个错误。</text><inline-styles><font-family><from>0</from><to>25</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>1661-1634729830437</coId><text>已经添加的数据，是无法再次往里面添加的。</text><inline-styles><font-family><from>0</from><to>20</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align><text-indent>1</text-indent></styles></para><para><coId>7830-1634729830437</coId><text>2、geopos  </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>10</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>1418-1634729830437</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2598-1634729830437</coId><text>geopos  &lt;key&gt;&lt;member&gt; [member...]  获得指定地区的坐标值</text><inline-styles><font-family><from>0</from><to>35</to><value>Tahoma</value></font-family><font-family><from>35</from><to>45</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>5011-1634729830437</coId><source>https://note.youdao.com/yws/res/14162/5DC33D7E898647DB96455B34FC49FF2E</source><text/><styles><align>justify</align><width>464</width><height>27</height></styles></image><para><coId>6258-1634729830437</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>6028-1634729830437</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>2173-1634729830437</coId><source>https://note.youdao.com/yws/res/14157/DB6E0E8A9DA548E5AA1CB486316CA56E</source><text/><styles><align>justify</align><width>423</width><height>62</height></styles></image><para><coId>9170-1634729830437</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>3020-1634729830437</coId><text>3、geodist</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>9</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3099-1634729830437</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3892-1634729830437</coId><text>geodist&lt;key&gt;&lt;member1&gt;&lt;member2&gt;  [m|km|ft|mi ]  获取两个位置之间的直线距离</text><inline-styles><font-family><from>0</from><to>47</to><value>Tahoma</value></font-family><font-family><from>47</from><to>60</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>2594-1634729830437</coId><source>https://note.youdao.com/yws/res/14159/4C4750E400AD47B59C92393B9CE8BCD2</source><text/><styles><align>justify</align><width>554</width><height>28</height></styles></image><para><coId>4693-1634729830437</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>1465-1634729830437</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6338-1634729830437</coId><text>获取两个位置之间的直线距离</text><inline-styles><font-family><from>0</from><to>13</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>9192-1634729830437</coId><source>https://note.youdao.com/yws/res/14158/FE0A9467614A40E19C6256D889FD7266</source><text/><styles><align>justify</align><width>554</width><height>50</height></styles></image><para><coId>4198-1634729830437</coId><text/><inline-styles/><styles><align>justify</align></styles></para><para><coId>7083-1634729830437</coId><text>单位：</text><inline-styles><font-family><from>0</from><to>3</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>6181-1634729830437</coId><text>m 表示单位为米[默认值]。</text><inline-styles><font-family><from>0</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>8</to><value>微软雅黑</value></font-family><font-family><from>8</from><to>9</to><value>Tahoma</value></font-family><font-family><from>9</from><to>12</to><value>微软雅黑</value></font-family><font-family><from>12</from><to>13</to><value>Tahoma</value></font-family><font-family><from>13</from><to>14</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>8710-1634729830437</coId><text>km 表示单位为千米。</text><inline-styles><font-family><from>0</from><to>3</to><value>Tahoma</value></font-family><font-family><from>3</from><to>11</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9092-1634729830437</coId><text>mi 表示单位为英里。</text><inline-styles><font-family><from>0</from><to>3</to><value>Tahoma</value></font-family><font-family><from>3</from><to>11</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>7777-1634729830437</coId><text>ft 表示单位为英尺。</text><inline-styles><font-family><from>0</from><to>3</to><value>Tahoma</value></font-family><font-family><from>3</from><to>11</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>3626-1634729830437</coId><text>如果用户没有显式地指定单位参数， 那么 GEODIST 默认使用米作为单位</text><inline-styles><font-family><from>0</from><to>16</to><value>微软雅黑</value></font-family><font-family><from>20</from><to>28</to><value>Tahoma</value></font-family><font-family><from>28</from><to>37</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2345-1634729830437</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>9495-1634729830437</coId><text>4、georadius</text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family><font-family><from>1</from><to>2</to><value>微软雅黑</value></font-family><font-family><from>2</from><to>11</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2121-1634729830437</coId><text>（1）格式</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4962-1634729830437</coId><text>georadius&lt;key&gt;&lt; longitude&gt;&lt;latitude&gt;radius  m|km|ft|mi   以给定的经纬度为中心，找出某一半径内的元素</text><inline-styles><font-family><from>0</from><to>57</to><value>Tahoma</value></font-family><font-family><from>57</from><to>78</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>1579-1634729830437</coId><source>https://note.youdao.com/yws/res/14163/82CC15F650FC48C6A3AB579785A92561</source><text/><styles><align>justify</align><width>554</width><height>21</height></styles></image><para><coId>5354-1634729830437</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2052-1634729830437</coId><text>经度 纬度 距离 单位</text><inline-styles><font-family><from>0</from><to>2</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>4693-1634729830437</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para><para><coId>2638-1634729830437</coId><text>（2）实例</text><inline-styles><font-family><from>0</from><to>1</to><value>微软雅黑</value></font-family><font-family><from>1</from><to>2</to><value>Tahoma</value></font-family><font-family><from>2</from><to>5</to><value>微软雅黑</value></font-family></inline-styles><styles><align>justify</align></styles></para><image><coId>3190-1634729830437</coId><source>https://note.youdao.com/yws/res/14160/EC99E1DE2D3C4762B9D875333024879E</source><text/><styles><align>justify</align><width>519</width><height>60</height></styles></image><para><coId>2066-1634729830437</coId><text> </text><inline-styles><font-family><from>0</from><to>1</to><value>Tahoma</value></font-family></inline-styles><styles><align>justify</align></styles></para></body></note>