<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><para><coId>8873-1589598475397</coId><text>Classs的实例就对应着一个运行时类</text><inline-styles><font-family><from>0</from><to>19</to><value>SimSun</value></font-family><font-size><from>0</from><to>19</to><value>22</value></font-size></inline-styles><styles/></para><para><coId>4031-1589598549572</coId><text>获取Class实例的方式</text><inline-styles><font-family><from>0</from><to>12</to><value>SimSun</value></font-family><font-size><from>0</from><to>12</to><value>22</value></font-size></inline-styles><styles/></para><code><coId>9915-1589598520923</coId><text>public void test(){
    //方式一：调用运行时类的属性：.class
    Class clazz1=Person.class;
    System.out.println("clazz1");
    //方式二:通过运行时类的对象，调用getclass()
    Person p1=new Person();
    Class clazz2=p1.getClass();
    System.out.println(clazz2);
    //方式三:调用Class的静态方法：forName（String classPath）
   Class clazz3= Class.forName("完整类名");
   System.out.println(clazz3);
}
</text><inline-styles><font-family><from>0</from><to>7</to><value>SimSun</value></font-family><font-size><from>0</from><to>7</to><value>22</value></font-size></inline-styles><styles/><language>java</language><theme>default</theme></code><para><coId>7082-1589598520923</coId><text/><inline-styles/><styles/></para></body></note>