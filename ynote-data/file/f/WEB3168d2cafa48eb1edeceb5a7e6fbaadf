{"2":"1","3":"Ju9C-1621846617594","4":{"version":1,"incompatibleVersion":0,"fv":"0"},"5":[{"3":"qhUP-1658130662810","4":{"version":1,"u":"https://note.youdao.com/yws/res/20525/WEBRESOURCE8c547095876aaad2edb55d24dd9fd152","w":585,"h":451},"6":"im"},{"3":"S6Vn-1658130648592","5":[{"2":"2","3":"ohuc-1658130648582","7":[{"8":"常见数据类型的属性，如下：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"RUo0-1658130696611","4":{"version":1,"u":"https://note.youdao.com/yws/res/20530/WEBRESOURCE921e9cbf685a0684ef7cfeb55ba11c00","w":712,"h":324},"6":"im"},{"3":"84qD-1658130685831","5":[{"2":"2","3":"GHsB-1658130685827","7":[{"8":"创建数据库时可以指明字符集。创建表的时候，指名表的字符集。创建表，指名表中的字段时，可以指定字段的字符集。"}]}]},{"3":"NIEw-1658131874211","5":[{"2":"2","3":"f0QA-1658131874208","7":[{"8":"MYSQL5.7中，创建字段会显示字段宽度。例：tinyint(4)表示数据宽度为4，因为tinyint可以表示-128~127的数据范围，可以表示3位数，加上符号就是数据宽度4。"}]}]},{"3":"L7hC-1658130686206","4":{"l":"h1"},"5":[{"2":"2","3":"PJ0c-1658130686203","7":[{"8":"整数类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"BZm4-1658130686714","5":[{"2":"2","3":"pipt-1658130686712","7":[{"8":"整数类型一共有 5 种，包括 TINYINT、SMALLINT、MEDIUMINT、INT（INTEGER）和 BIGINT。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"RdrD-1658131652872","4":{"version":1,"u":"https://note.youdao.com/yws/res/20540/WEBRESOURCEf905f1e407182c8211525e4f98cb3605","w":585,"h":174},"6":"im"},{"3":"CDbG-1658130686909","4":{"l":"h3"},"5":[{"2":"2","3":"Zf7Q-1658130686907","7":[{"8":"可选属性","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"WfyM-1658130686992","4":{"l":"h4"},"5":[{"2":"2","3":"AV85-1658130686990","7":[{"8":"M，ZEROFILL","9":[{"0":"#34495e","2":"c"},{"2":"d"}]}]}],"6":"h"},{"3":"TOz5-1658130687081","5":[{"2":"2","3":"gSHI-1658130687079","7":[{"8":"M ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"2":"d"}]},{"8":":","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"},{"2":"d"}]},{"8":" 表示显示宽度，M的取值范围是(0, 255)。例如，int(5)：当数据宽度小于5位的时候在数字前面需要用字符填满宽度。该项功能需要配合“ ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"ZEROFILL ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"”使用，表示用“0”填满宽度，否则指定显示宽度无效。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"zQk8-1658132105692","4":{"version":1},"5":[{"2":"2","3":"0Ey6-1658132105691","7":[{"8":"如果设置了显示宽度，那么插入的数据宽度超过显示宽度限制，会不会截断或插入失败？","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"ew3T-1658132105695","4":{"version":1},"5":[{"2":"2","3":"isgs-1658132105694","7":[{"8":"答案：不会对插入的数据有任何影响，还是按照类型的实际宽度进行保存，即 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"显示宽度与类型可以存储的 值范围无关 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"从","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"MySQL 8.0.17","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"开始，整数数据类型不推荐使用显示宽度属性。","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"YqMo-1658132105699","4":{"version":1},"5":[{"2":"2","3":"EOAC-1658132105698","7":[{"8":"整型数据类型可以在定义表结构时指定所需要的显示宽度，如果不指定，则系统为每一种类型指定默认的宽度值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"zk2a-1658132255675","4":{"version":1,"u":"https://note.youdao.com/yws/res/20553/WEBRESOURCE38782c5b880f376b024c0e57ae753be0","w":286,"h":128,"s":{"fo":"left"}},"6":"im"},{"3":"mu3W-1658132281552","4":{"version":1,"u":"https://note.youdao.com/yws/res/20555/WEBRESOURCEa9af4f74bcdb2f994c4e1d381c0f13f9","w":236,"h":69,"s":{"fo":"left"}},"6":"im"},{"3":"Lywr-1658130687386","5":[{"2":"2","3":"30R4-1658130687384"}]},{"3":"FMkX-1658130687477","5":[{"2":"2","3":"qj0w-1658130687476"}]},{"3":"s8po-1658132281533","5":[{"2":"2","3":"CbL6-1658132281534"}]},{"3":"leY9-1658132286139","5":[{"2":"2","3":"4P9p-1658132286137"}]},{"3":"agMd-1658132460270","4":{"version":1},"6":"hr"},{"3":"7XHy-1658132313766","4":{"version":1,"u":"https://note.youdao.com/yws/res/20559/WEBRESOURCE8ef894ee5d9295b2ea414f66e8ef89ad","w":288,"h":52,"s":{"fo":"left"}},"6":"im"},{"3":"8UOm-1658132286528","5":[{"2":"2","3":"UH5a-1658132286526","7":[{"8":"#显示宽度为5。当insert的值不足5位时，使用0填充。当使用ZEROFILL时，会自动UNSIGNED"}]}]},{"3":"HXC2-1658132431824","4":{"version":1,"u":"https://note.youdao.com/yws/res/20564/WEBRESOURCE668f888c8e45c540e4404126c5506aaa","w":152,"h":127},"6":"im"},{"3":"Wz5f-1658132558864","4":{"version":1},"6":"hr"},{"3":"SWXQ-1658130650562","4":{"l":"h4"},"5":[{"2":"2","3":"tshy-1658130650560","7":[{"8":"UNSIGNED"}]}],"6":"h"},{"3":"2TIb-1658130650652","5":[{"2":"2","3":"RL4o-1658130650650","7":[{"8":"UNSIGNED ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":": 无符号类型（非负），所有的整数类型都有一个可选的属性UNSIGNED（无符号属性），无符号整数类型的最小取值为0。所以，如果需要在MySQL数据库中保存非负整数值时，可以将整数类型设置为无符号类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Vb4d-1658132702354","4":{"version":1},"5":[{"2":"2","3":"WogB-1658132702353","7":[{"8":"int类型默认显示宽度为int(11)，无符号int类型默认显示宽度为int(10)。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"hYgz-1658130650748","4":{"l":"h3"},"5":[{"2":"2","3":"VStK-1658130650746","7":[{"8":"适用场景 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"KYAN-1658130650836","5":[{"2":"2","3":"74t3-1658130650834","7":[{"8":"TINYINT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"：一般用于枚举数据，比如系统设定取值范围很小且固定的场景。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Mxkf-1658132747001","4":{"version":1},"5":[{"2":"2","3":"srtq-1658132747000","7":[{"8":"SMALLINT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"：可以用于较小范围的统计数据，比如统计工厂的固定资产库存数量等。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Nnx4-1658132747003","4":{"version":1},"5":[{"2":"2","3":"cCxk-1658132747002","7":[{"8":"MEDIUMINT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"：用于较大整数的计算，比如车站每日的客流量等。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"6SCI-1658132747006","4":{"version":1},"5":[{"2":"2","3":"p54m-1658132747005","7":[{"8":"INT","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"INTEGER ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"：取值范围足够大，一般情况下不用考虑超限问题，用得最多。比如商品编号。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"BCO2-1658132747008","4":{"version":1},"5":[{"2":"2","3":"tjt8-1658132747007","7":[{"8":"BIGINT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"：只有当你处理特别巨大的整数时才会用到。比如双十一的交易量、大型门户网站点击量、证券公司衍生产品持仓等。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"KIf8-1658130650929","4":{"l":"h3"},"5":[{"2":"2","3":"Jn0u-1658130650927","7":[{"8":"如何选择？","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"rIYn-1658130651022","5":[{"2":"2","3":"m0Um-1658130651021","7":[{"8":"在评估用哪种整数类型的时候，你需要考虑 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"存储空间 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"和 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"可靠性 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"的平衡问题：一方 面，用占用字节数少的整数类型可以节省存储空间；另一方面，要是为了节省存储空间， 使用的整数类型取值范围太小，一旦遇到超出取值范围的情况，就可能引起 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"系统错误 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，影响可靠性。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"26tW-1658132795956","4":{"version":1},"5":[{"2":"2","3":"6hgR-1658132795955","7":[{"8":"举个例子，商品编号采用的数据类型是 INT。原因就在于，客户门店中流通的商品种类较多，而且，每天都有旧商品下架，新商品上架，这样不断迭代，日积月累。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"NHRM-1658132795961","4":{"version":1},"5":[{"2":"2","3":"25Hc-1658132795960","7":[{"8":"如果使用 SMALLINT 类型，虽然占用字节数比 INT 类型的整数少，但是却不能保证数据不会超出范围65535。相反，使用 INT，就能确保有足够大的取值范围，不用担心数据超出范围影响可靠性的问题。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"db56-1658132795966","4":{"version":1},"5":[{"2":"2","3":"XCyl-1658132795965","7":[{"8":"你要注意的是，在实际工作中，","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"系统故障产生的成本远远超过增加几个字段存储空间所产生的成本","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"。因此，我建议你首先确保数据不会超过取值范围，在这个前提之下，再去考虑如何节省存储空间。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Mnus-1658130651124","4":{"l":"h1"},"5":[{"2":"2","3":"YjXP-1658130651121","7":[{"8":"浮点类型"}]}],"6":"h"},{"3":"9UN0-1658130651230","5":[{"2":"2","3":"mAmZ-1658130651228","7":[{"8":"浮点数和定点数类型的特点是可以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"处理小数 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，你可以把整数看成小数的一个特例。因此，浮点数和定点数的使用场景，比整数大多了。 MySQL支持的浮点数类型，分别是 FLOAT、DOUBLE、REAL。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"9f1s-1658132842000","4":{"li":"JMeQ-1658132859363","lt":"unordered","ll":1},"5":[{"2":"2","3":"e5lP-1658132841999","7":[{"8":"FLOAT 表示单精度浮点数；","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"NPBV-1658132857716","4":{"li":"JMeQ-1658132859363","lt":"unordered","ll":1},"5":[{"2":"2","3":"tOKH-1658132857715","7":[{"8":"DOUBLE 表示双精度浮点数；","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"OEqX-1658132952039","4":{"version":1,"u":"https://note.youdao.com/yws/res/20583/WEBRESOURCE5e67fa0891524c3b2206a3e969cd6133","w":585,"h":197},"6":"im"},{"3":"3JtN-1658132842613","4":{"li":"kRvt-1658132961394","lt":"unordered","ll":1},"5":[{"2":"2","3":"cF0r-1658132842612","7":[{"8":"REAL默认就是 DOUBLE。如果你把 SQL 模式设定为启用“ ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"REAL_AS_FLOAT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"”，那 么，MySQL 就认为REAL 是 FLOAT。如果要启用“REAL_AS_FLOAT”，可以通过以下 SQL 语句实现","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"uPHz-1658132971107","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"BmAd-1658132971106","5":[{"2":"2","3":"QLkJ-1658132842707","7":[{"8":"SET sql_mode \u003d “REAL_AS_FLOAT”;"}]}],"6":"cl"}],"6":"cd"},{"3":"vMxK-1658132842821","5":[{"2":"2","3":"YLl8-1658132842820","7":[{"8":"问题","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"1","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"FLOAT 和 DOUBLE 这两种数据类型的区别是啥呢？","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"wso9-1658132842918","5":[{"2":"2","3":"k3P7-1658132842917","7":[{"8":"FLOAT 占用字节数少，取值范围小；DOUBLE 占用字节数多，取值范围也大。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"AdEi-1658130651329","5":[{"2":"2","3":"l1pP-1658130651327","7":[{"8":"问题","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"2","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"为什么浮点数类型的无符号数取值范围，只相当于有符号数取值范围的一半，也就是只相当于有符号数取值范围大于等于零的部分呢？","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"7ul0-1658133954144","4":{"version":1},"5":[{"2":"2","3":"ZOTZ-1658133954142","7":[{"8":"MySQL 存储浮点数的格式为： ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"符号","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"(S) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"尾数","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"(M) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"和 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"阶码","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"(E) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。因此，无论有没有符号，MySQL 的浮点数都会存储表示符号的部分。因此， 所谓的无符号数取值范围，其实就是有符号数取值范围大于等于零的部分。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"p5xZ-1658130651435","4":{"l":"h3"},"5":[{"2":"2","3":"RXIg-1658130651434","7":[{"8":"数据精度说明","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"Y85U-1658133956492","5":[{"2":"2","3":"x0bE-1658133956490","7":[{"8":"对于浮点类型，在MySQL中单精度值使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"4 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节，双精度值使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"8 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"3c91-1658133956645","4":{"li":"10mm-1658134056358","lt":"unordered","ll":1},"5":[{"2":"2","3":"YCOr-1658133956644","7":[{"8":"MySQL允许使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"非标准语法 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"（其他数据库未必支持，因此如果涉及到数据迁移，则最好不要这么用）： ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"FLOAT(M,D) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"或 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"DOUBLE(M,D) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。这里，M称为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"精度 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，D称为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"标度 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。(M,D)中 M\u003d整数位+小数位，D\u003d小数位。 D\u003c\u003dM\u003c\u003d255，0\u003c\u003dD\u003c\u003d30。例如，定义为FLOAT(5,2)的一个列可以显示为-999.99-999.99。如果超过这个范围会报错。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"jP93-1658134039389","4":{"li":"10mm-1658134056358","lt":"unordered","ll":1},"5":[{"2":"2","3":"IaIt-1658134039388","7":[{"8":"FLOAT和DOUBLE类型在不指定(M,D)时，默认会按照实际的精度（由实际的硬件和操作系统决定）来显示。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"dY1G-1658134039394","4":{"li":"CsW5-1658134195877","lt":"unordered","ll":1},"5":[{"2":"2","3":"bnqm-1658134039393","7":[{"8":"说明：浮点类型，也可以加 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"UNSIGNED ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，但是不会改变数据范围，例如：FLOAT(3,2) UNSIGNED仍然只能表示0-9.99的范围。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Arxh-1658134039399","4":{"li":"CsW5-1658134195877","lt":"unordered","ll":1},"5":[{"2":"2","3":"fKFc-1658134039398","7":[{"8":"不管是否显式设置了精度(M,D)，这里MySQL的处理方案如下：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"WLly-1658133956804","4":{"li":"WEDR-1658134201753","lt":"unordered","ll":2,"s":{"in":0}},"5":[{"2":"2","3":"HX3S-1658133956802","7":[{"8":"如果存储时，整数部分超出了范围，MySQL就会报错，不允许存这样的值","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Guo7-1658134183834","4":{"li":"WEDR-1658134201753","lt":"unordered","ll":2,"s":{"in":0}},"5":[{"2":"2","3":"eawI-1658134183833","7":[{"8":"如果存储时，小数点部分若超出范围，就分以下情况：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"HXgZ-1658134183836","4":{"li":"XCS7-1658134215932","lt":"unordered","ll":1,"s":{"in":56}},"5":[{"2":"2","3":"ZQg8-1658134183835","7":[{"8":"若四舍五入后，整数部分没有超出范围，则只警告，但能成功操作并四舍五入删除多余的小数位后保存。例如在FLOAT(5,2)列内插入999.009，近似结果是999.01。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"o3EW-1658134183841","4":{"li":"XCS7-1658134215932","lt":"unordered","ll":1,"s":{"in":56}},"5":[{"2":"2","3":"CfXe-1658134183840","7":[{"8":"若四舍五入后，整数部分超出范围，则MySQL报错，并拒绝处理。如FLOAT(5,2)列内插入999.995和-999.995都会报错。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"ERU0-1658133956957","5":[{"2":"2","3":"n5do-1658133956954","7":[{"8":"从","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"MySQL 8.0.17","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"开始，","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"FLOAT(M,D) ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"和","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"DOUBLE(M,D)","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"用法在官方文档中已经明确不推荐使用","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"，将来可能被移除。另外，关于浮点型FLOAT和DOUBLE的UNSIGNED也不推荐使用了，将来也可能被移除。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"CV71-1658133957068","4":{"l":"h3"},"5":[{"2":"2","3":"NbQQ-1658133957066","7":[{"8":"精度误差说明","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"RDwH-1658133957236","5":[{"2":"2","3":"uVNY-1658133957234","7":[{"8":"浮点数类型有个缺陷，就是不精准。下面我来重点解释一下为什么 MySQL 的浮点数不够精准。比如，我们设计一个表，有f1这个字段，插入值分别为0.47,0.44,0.19，我们期待的运行结果是：0.47 + 0.44 + 0.19 \u003d 1.1。而使用sum之后查询则会是1.0999999999...","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Bm2U-1658133957415","4":{"l":"h1"},"5":[{"2":"2","3":"eaJT-1658133957413","7":[{"8":"定点数类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"CvXN-1658134368247","4":{"version":1,"u":"https://note.youdao.com/yws/res/20605/WEBRESOURCE15c228f8ae073ca4868448e5bea10aca","w":585,"h":80},"6":"im"},{"3":"OJzG-1658134314434","5":[{"2":"2","3":"JH2t-1658134314432","7":[{"8":"使用 DECIMAL(M,D) 的方式表示高精度小数。其中，M被称为精度，D被称为标度。0\u003c\u003dM\u003c\u003d65， 0\u003c\u003dD\u003c\u003d30，D\u003cM。例如，定义DECIMAL（5,2）的类型，表示该列取值范围是-999.99~999.99。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"LdsM-1658134371881","4":{"li":"eMhA-1658134475135","lt":"unordered","ll":1},"5":[{"2":"2","3":"PM7U-1658134371879","7":[{"8":"ECIMAL(M,D)","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"的最大取值范围与","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"DOUBLE","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型一样","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"，但是有效的数据范围是由M和D决定的。DECIMAL 的存储空间并不是固定的，由精度值M决定，总共占用的存储空间为M+2个字节。也就是说，在一些对精度要求不高的场景下，比起占用同样字节长度的定点数，浮点数表达的数值范围可以更大一些。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"bY9H-1658134468422","4":{"li":"eMhA-1658134475135","lt":"unordered","ll":1},"5":[{"2":"2","3":"SLTZ-1658134468421","7":[{"8":"定点数在MySQL内部是以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"字符串 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"的形式进行存储，这就决定了它一定是精准的。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"tZnp-1658134468424","4":{"li":"eMhA-1658134475135","lt":"unordered","ll":1},"5":[{"2":"2","3":"Orpt-1658134468423","7":[{"8":"当DECIMAL类型不指定精度和标度时，其默认为DECIMAL(10,0)。当数据的精度超出了定点数类型的精度范围时，则MySQL同","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"5CfX-1658134372385","4":{"l":"h4"},"5":[{"2":"2","3":"bGSO-1658134372384","7":[{"8":"浮点数 ","9":[{"2":"b"},{"0":"#880000","2":"c"}]},{"8":"vs ","9":[{"0":"#880000","2":"c"}]},{"8":"定点数","9":[{"2":"b"},{"0":"#880000","2":"c"}]}]}],"6":"h"},{"3":"reiX-1658134372497","4":{"li":"UwHE-1658134568008","lt":"unordered","ll":1},"5":[{"2":"2","3":"gYXL-1658134372496","7":[{"8":"浮点数相对于定点数的优点是在长度一定的情况下，浮点类型取值范围大，但是不精准，适用于需要取值范围大，又可以容忍微小误差的科学计算场景（比如计算化学、分子建模、流体动力学等）","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"hOTp-1658134562756","4":{"li":"UwHE-1658134568008","lt":"unordered","ll":1},"5":[{"2":"2","3":"68lx-1658134562755","7":[{"8":"定点数类型取值范围相对小，但是精准，没有误差，适合于对精度要求极高的场景 （比如涉及金额计算的场景）","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"ROip-1658134372595","4":{"l":"h4"},"5":[{"2":"2","3":"NI8y-1658134372594","7":[{"8":"开发中经验 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"PgkY-1658134372692","5":[{"2":"2","3":"1rE7-1658134372690","7":[{"8":"“由于 DECIMAL 数据类型的精准性，在我们的项目中，除了极少数（比如商品编号）用到整数类型外，其他的数值都用的是 DECIMAL，原因就是这个项目所处的零售行业，要求精准，一分钱也不能差。 ” ——来自某项目经理","9":[{"0":"#777777","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"B7UA-1658134372786","4":{"l":"h1"},"5":[{"2":"2","3":"Ia2Y-1658134372785","7":[{"8":"位类型：","9":[{"2":"b"},{"0":"#34495e","2":"c"}]},{"8":"BIT ","9":[{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"4bfS-1658134314623","5":[{"2":"2","3":"Cr2s-1658134314621","7":[{"8":"BIT类型中存储的是二进制值，类似010110。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"OOAO-1658134713396","4":{"version":1,"u":"https://note.youdao.com/yws/res/20619/WEBRESOURCE5e186876280029f5c0e28705b0b1b721","w":585,"h":69},"6":"im"},{"3":"OkKw-1658130651755","5":[{"2":"2","3":"ZhL1-1658130651753","7":[{"8":"BIT类型，如果没有指定(M)，默认是1位。这个1位，表示只能存1位的二进制值。这里(M)是表示二进制的位数，位数最小值为1，最大值为64。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"8SB6-1658134714247","5":[{"2":"2","3":"0rTB-1658134714245","7":[{"8":"注意：在向BIT类型的字段中插入数据时，一定要确保插入的数据在BIT类型支持的范围内。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"q9M6-1658134965331","5":[{"2":"2","3":"PXon-1658134965328","7":[{"8":"使用SELECT命令查询位字段时，可以用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"BIN() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"或 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"HEX() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"函数进行读取。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"jkXQ-1658134714416","5":[{"2":"2","3":"fqDb-1658134714414","7":[{"8":"可以看到，使用b+0查询数据时，可以直接查询出存储的十进制数据的值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"GTKS-1658134714552","4":{"l":"h1"},"5":[{"2":"2","3":"O8JH-1658134714550","7":[{"8":"日期与时间类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"lKE7-1658135125474","5":[{"2":"2","3":"m9l8-1658135125472","7":[{"8":"日期与时间是重要的信息，在我们的系统中，几乎所有的数据表都用得到。原因是客户需要知道数据的时间标签，从而进行数据查询、统计和处理。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"MUQY-1658195144453","4":{"version":1},"5":[{"2":"2","3":"f5tf-1658195144452","7":[{"8":"MySQL有多种表示日期和时间的数据类型，不同的版本可能有所差异，MySQL8.0版本支持的日期和时间类型主要有：YEAR类型、TIME类型、DATE类型、DATETIME类型和TIMESTAMP类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"ds2Y-1658135125576","4":{"li":"nYtr-1658195153054","lt":"unordered","ll":1},"5":[{"2":"2","3":"gXVj-1658135125575","7":[{"8":"YEAR ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型通常用来表示年","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"ulx2-1658195150161","4":{"li":"nYtr-1658195153054","lt":"unordered","ll":1},"5":[{"2":"2","3":"DfV6-1658195150160","7":[{"8":"DATE ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型通常用来表示年、月、日","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"J96C-1658195150164","4":{"li":"nYtr-1658195153054","lt":"unordered","ll":1},"5":[{"2":"2","3":"8hrB-1658195150162","7":[{"8":"TIME ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型通常用来表示时、分、秒","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Dzj7-1658195150166","4":{"li":"nYtr-1658195153054","lt":"unordered","ll":1},"5":[{"2":"2","3":"mSL2-1658195150165","7":[{"8":"DATETIME ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型通常用来表示年、月、日、时、分、秒","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"PJBQ-1658195150168","4":{"li":"nYtr-1658195153054","lt":"unordered","ll":1},"5":[{"2":"2","3":"mFlJ-1658195150167","7":[{"8":"TIMESTAMP ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型通常用来表示带时区的年、月、日、时、分、秒","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"MVv0-1658195176882","4":{"version":1,"u":"https://note.youdao.com/yws/res/20630/WEBRESOURCEcdb11b0225c8fac7da2ce441d09288a6","w":585,"h":261},"6":"im"},{"3":"4CdI-1658135126164","5":[{"2":"2","3":"6lCH-1658135126162","7":[{"8":"为什么时间类型 TIME 的取值范围不是 -23:59:59～23:59:59 呢？原因是 MySQL 设计的 TIME 类型，不光表示一天之内的时间，而且可以用来表示一个时间间隔，这个时间间隔可以超过 24 小时。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"2rZf-1658134714701","4":{"l":"h3"},"5":[{"2":"2","3":"1FJf-1658134714699","7":[{"8":"YEAR","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"QS4E-1658195177959","5":[{"2":"2","3":"WOLr-1658195177957","7":[{"8":"从","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"MySQL5.5.27","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"开始，","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"2","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"位格式的","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"YEAR","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"已经不推荐使用","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"。YEAR默认格式就是“YYYY”，没必要写成YEAR(4)， 从MySQL 8.0.19开始，不推荐使用指定显示宽度的YEAR(4)数据类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"6HI9-1658195178098","4":{"l":"h3"},"5":[{"2":"2","3":"lwc2-1658195178096","7":[{"8":"DATE","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"7A9E-1658195178256","5":[{"2":"2","3":"4P9W-1658195178253","7":[{"8":"DATE类型表示日期，没有时间部分，格式为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYY-MM-DD ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，其中，YYYY表示年份，MM表示月份，DD表示日期。需要 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"3","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"的存储空间。在向DATE类型的字段插入数据时，同样需要满足一定的格式条件。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"z3sk-1658195457616","4":{"li":"HGhW-1658195471385","lt":"unordered","ll":1},"5":[{"2":"2","3":"ewun-1658195457615","7":[{"8":"以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYY-MM-DD ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYYMMDD ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式表示的字符串日期，其最小取值为1000-01-01，最大取值为9999-12-03。YYYYMMDD格式会被转化为YYYY-MM-DD格式。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"3xrd-1658195457622","4":{"li":"HGhW-1658195471385","lt":"unordered","ll":1},"5":[{"2":"2","3":"KcdZ-1658195457621","7":[{"8":"以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YY-MM-DD ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYMMDD ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式表示的字符串日期，此格式中，年份为两位数值或字符串满足YEAR类型的格式条件为：当年份取值为00到69时，会被转化为2000到2069；当年份取值为70到99时，会被转化为1970到1999。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"NliX-1658195457630","4":{"li":"HGhW-1658195471385","lt":"unordered","ll":1},"5":[{"2":"2","3":"c3mP-1658195457629","7":[{"8":"使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"CURRENT_DATE() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"NOW() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"函数，会插入当前系统的日期。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"cq55-1658195178403","4":{"l":"h3"},"5":[{"2":"2","3":"dtr9-1658195178402","7":[{"8":"TIME","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"dBPy-1658195480040","5":[{"2":"2","3":"bzyL-1658195480038","7":[{"8":"TIME类型用来表示时间，不包含日期部分。在MySQL中，需要 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"3","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"的存储空间来存储TIME类型的数据，可以使用“HH:MM:SS”格式来表示TIME类型，其中，HH表示小时，MM表示分钟，SS表示秒。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"CVHy-1658195717796","4":{"version":1},"5":[{"2":"2","3":"cW2I-1658195717795","7":[{"8":"在MySQL中，向TIME类型的字段插入数据时，也可以使用几种不同的格式。（1）可以使用带有冒号的字符串，比如\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"D HH:MM:SS\u0027 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"HH:MM:SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027、\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"HH:MM ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027、\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"D HH:MM ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027、\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"D HH ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027或\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027格式，都能被正确地插入TIME类型的字段中。其中D表示天，其最小值为0，最大值为34。如果使用带有D格式的字符串插入TIME类型的字段时，D会被转化为小时，计算格式为D*24+HH。当使用带有冒号并且不带D的字符串表示时间时，表示当天的时间，比如12:10表示12:10:00，而不是00:12:10。 （2）可以使用不带有冒号的字符串或者数字，格式为\u0027 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"HHMMSS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"\u0027或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"HHMMSS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。如果插入一个不合法的字符串或者数字，MySQL在存储数据时，会将其自动转化为00:00:00进行存储。比如1210，MySQL会将最右边的两位解析成秒，表示00:12:10，而不是12:10:00。 （3）使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"CURRENT_TIME() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"NOW() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，会插入当前系统的时间。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"FVuI-1658195480218","4":{"l":"h3"},"5":[{"2":"2","3":"5YfB-1658195480217","7":[{"8":"DATETIME","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"vPn3-1658195810758","5":[{"2":"2","3":"MUfN-1658195810755","7":[{"8":"DATETIME类型在所有的日期时间类型中占用的存储空间最大，总共需要 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"8 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节的存储空间。在格式上为DATE类型和TIME类型的组合，可以表示为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYY-MM-DD HH:MM:SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，其中YYYY表示年份，MM表示月份，DD表示日期，HH表示小时，MM表示分钟，SS表示秒。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"uxVR-1658195860583","4":{"version":1},"5":[{"2":"2","3":"hbAo-1658195860582","7":[{"8":"在向DATETIME类型的字段插入数据时，同样需要满足一定的格式条件。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"1psX-1658195860585","4":{"li":"diAG-1658195902473","lt":"unordered","ll":1},"5":[{"2":"2","3":"YwAp-1658195860584","7":[{"8":"以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYY-MM-DD HH:MM:SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYYMMDDHHMMSS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式的字符串插入DATETIME类型的字段时，最小值为1000-01-01 00:00:00，最大值为9999-12-03 23:59:59。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"ljYb-1658195860589","4":{"li":"diAG-1658195902473","lt":"unordered","ll":2},"5":[{"2":"2","3":"mo1k-1658195860588","7":[{"8":"以YYYYMMDDHHM\tMSS格式的数字插入DATETIME类型的字段时，会被转化为YYYY-MM-DD HH:MM:SS格式。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Z0tM-1658195860593","4":{"li":"diAG-1658195902473","lt":"unordered","ll":1},"5":[{"2":"2","3":"hZz3-1658195860592","7":[{"8":"以 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YY-MM-DD HH:MM:SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式或者 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYMMDDHHMMSS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"格式的字符串插入DATETIME类型的字段时，两位","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"ZBQT-1658195899045","4":{"li":"diAG-1658195902473","lt":"unordered","ll":1},"5":[{"2":"2","3":"17sb-1658195899043","7":[{"8":"数的年份规则符合YEAR类型的规则，00到69表示2000到2069；70到99表示1970到1999。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Kvo4-1658195899047","4":{"li":"diAG-1658195902473","lt":"unordered","ll":1},"5":[{"2":"2","3":"YzGh-1658195899046","7":[{"8":"使用函数 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"CURRENT_TIMESTAMP() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"和 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"NOW() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，可以向DATETIME类型的字段插入系统的当前日期和时间。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"p70w-1658195860627","4":{"l":"h3"},"5":[{"2":"2","3":"sSqj-1658195860626","7":[{"8":"TIMESTAMP","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"BHeY-1658195810933","5":[{"2":"2","3":"QbA3-1658195810931","7":[{"8":"TIMESTAMP类型也可以表示日期时间，其显示格式与DATETIME类型相同，都是 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"YYYY-MM-DD HH:MM:SS ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，需要4个字节的存储空间。但是TIMESTAMP存储的时间范围比DATETIME要小很多，只能存储“1970-01-01 00:00:01 UTC”到“2038-01-19 03:14:07 UTC”之间的时间。其中，UTC表示世界统一时间，也叫作世界标准时间。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"S8tO-1658196046931","4":{"li":"FDG9-1658196055153","lt":"unordered","ll":1},"5":[{"2":"2","3":"w0kw-1658196046930","7":[{"8":"存储数据的时候需要对当前时间所在的时区进行转换，查询数据的时候再将时间转换回当前的时","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"xVvf-1658196046934","4":{"version":1},"5":[{"2":"2","3":"V4vg-1658196046932","7":[{"8":"区。因此，使用","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"TIMESTAMP","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"存储的同一个时间值，在不同的时区查询时会显示不同的时间。","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"QMpq-1658196046936","4":{"version":1},"5":[{"2":"2","3":"rvh5-1658196046935","7":[{"8":"向TIMESTAMP类型的字段插入数据时，当插入的数据格式满足YY-MM-DD HH:MM:SS和YYMMDDHHMMSS时，两位数值的年份同样符合YEAR类型的规则条件，只不过表示的时间范围要小很多。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"lbpB-1658196046941","4":{"version":1},"5":[{"2":"2","3":"J2T9-1658196046940","7":[{"8":"如果向TIMESTAMP类型的字段插入的时间超出了TIMESTAMP类型的范围，则MySQL会抛出错误信息。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"14Ls-1658195811217","4":{"l":"h3"},"5":[{"2":"2","3":"EYtm-1658195811214","7":[{"8":"TIMESTAMP","9":[{"0":"#880000","2":"c"}]},{"8":"和","9":[{"2":"b"},{"0":"#880000","2":"c"}]},{"8":"DATETIME","9":[{"0":"#880000","2":"c"}]},{"8":"的区别：","9":[{"2":"b"},{"0":"#880000","2":"c"}]}]}],"6":"h"},{"3":"qZ7r-1658195811527","4":{"li":"Y0NV-1658196089228","lt":"unordered","ll":1},"5":[{"2":"2","3":"ZwDS-1658195811524","7":[{"8":"TIMESTAMP存储空间比较小，表示的日期时间范围也比较小","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"fFKs-1658196086689","4":{"li":"Y0NV-1658196089228","lt":"unordered","ll":1},"5":[{"2":"2","3":"smBV-1658196086688","7":[{"8":"底层存储方式不同，TIMESTAMP底层存储的是毫秒值，距离1970-1-1 0:0:0 0毫秒的毫秒值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"TqxR-1658196086692","4":{"li":"Y0NV-1658196089228","lt":"unordered","ll":1},"5":[{"2":"2","3":"altH-1658196086691","7":[{"8":"两个日期比较大小或日期计算时，TIMESTAMP更方便、更快。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"9yQ6-1658196086695","4":{"li":"Y0NV-1658196089228","lt":"unordered","ll":1},"5":[{"2":"2","3":"oDuT-1658196086693","7":[{"8":"TIMESTAMP和时区有关。TIMESTAMP会根据用户的时区不同，显示不同的结果。而DATETIME则只能反映出插入时当地的时区，其他时区的人查看数据必然会有误差的。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"cHCn-1658196420432","4":{"l":"h3"},"5":[{"2":"2","3":"uhxT-1658196420431","7":[{"8":"开发中经验","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"eQ9Q-1658196080472","5":[{"2":"2","3":"hbCU-1658196080469","7":[{"8":"用得最多的日期时间类型，就是 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"DATETIME ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。虽然 MySQL 也支持 YEAR（年）、 TIME（时间）、DATE（日期），以及 TIMESTAMP 类型，但是在实际项目中，尽量用 DATETIME 类型。因为这个数据类型包括了完整的日期和时间信息，取值范围也最大，使用起来比较方便。毕竟，如果日期时间信息分散在好几个字段，很不容易记，而且查询的时候，SQL 语句也会更加复杂。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"rOcS-1658196428943","4":{"version":1},"5":[{"2":"2","3":"NfEz-1658196428942","7":[{"8":"此外，一般存注册时间、商品发布时间等，不建议使用DATETIME存储，而是使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"时间戳 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，因为DATETIME虽然直观，但不便于计算。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"wgs7-1658196080673","4":{"l":"h1"},"5":[{"2":"2","3":"UBcB-1658196080670","7":[{"8":"文本字符串类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"5adS-1658196080804","5":[{"2":"2","3":"nklr-1658196080803","7":[{"8":"MySQL中，文本字符串总体上分为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"CHAR ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"VARCHAR ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"TINYTEXT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"TEXT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"MEDIUMTEXT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"LONGTEXT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"ENUM ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"SET ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"等类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"5R9K-1658196502392","4":{"version":1,"u":"https://note.youdao.com/yws/res/20658/WEBRESOURCE963f6b469ffbbc54f55c3889646e1fad","w":585,"h":211},"6":"im"},{"3":"gbqs-1658195178588","4":{"l":"h3"},"5":[{"2":"2","3":"UExX-1658195178586","7":[{"8":"CHAR","9":[{"0":"#34495e","2":"c"}]},{"8":"与","9":[{"2":"b"},{"0":"#34495e","2":"c"}]},{"8":"VARCHAR","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"d9xr-1658196504585","5":[{"2":"2","3":"E17l-1658196504582","7":[{"8":"CHAR和VARCHAR类型都可以存储比较短的字符串。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"AW7c-1658196559361","4":{"version":1,"u":"https://note.youdao.com/yws/res/20662/WEBRESOURCE894a392997a33d8330e773d63e4a71b2","w":585,"h":102},"6":"im"},{"3":"xxMp-1658196550007","5":[{"2":"2","3":"aZCn-1658196550004","7":[{"8":"CHAR","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"c9EP-1658196590269","4":{"li":"JAxJ-1658196601784","lt":"unordered","ll":1},"5":[{"2":"2","3":"IIcj-1658196590267","7":[{"8":"CHAR(M) 类型一般需要预先定义字符串长度。如果不指定(M)，则表示长度默认是1个字符。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"dbXx-1658196594055","4":{"li":"JAxJ-1658196601784","lt":"unordered","ll":1},"5":[{"2":"2","3":"QDNS-1658196594053","7":[{"8":"如果保存时，数据的实际长度比CHAR类型声明的长度小，则会在 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"右侧填充 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"空格以达到指定的长度。当MySQL检索CHAR类型的数据时，CHAR类型的字段会去除尾部的空格。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"M3wZ-1658196590276","4":{"li":"JAxJ-1658196601784","lt":"unordered","ll":1},"5":[{"2":"2","3":"0gFD-1658196590275","7":[{"8":"定义CHAR类型字段时，声明的字段长度即为CHAR类型字段所占的存储空间的字节数。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"rSVJ-1658196550153","5":[{"2":"2","3":"wj7u-1658196550151","7":[{"8":"VARCHAR","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"t1V3-1658196745709","4":{"li":"rMDm-1658196755615","lt":"unordered","ll":1},"5":[{"2":"2","3":"icl4-1658196745708","7":[{"8":"VARCHAR(M) 定义时， ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"必须指定 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"长度M，否则报错。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"joOM-1658196745712","4":{"li":"rMDm-1658196755615","lt":"unordered","ll":1},"5":[{"2":"2","3":"cXtR-1658196745710","7":[{"8":"MySQL4.0版本以下，varchar(20)：指的是20字节，如果存放UTF8汉字时，只能存6个（每个汉字3字节） ；MySQL5.0版本以上，varchar(20)：指的是20字符。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"9KVf-1658196745716","4":{"li":"rMDm-1658196755615","lt":"unordered","ll":1},"5":[{"2":"2","3":"P2VG-1658196745715","7":[{"8":"检索VARCHAR类型的字段数据时，会保留数据尾部的空格。VARCHAR类型的字段所占用的存储空间为字符串实际长度加1个字节。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"stZi-1658196563191","5":[{"2":"2","3":"QWfP-1658196563188","7":[{"8":"哪些情况使用 ","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"CHAR ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"或 ","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"VARCHAR ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"更好","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"0N41-1658196772536","4":{"version":1,"u":"https://note.youdao.com/yws/res/20669/WEBRESOURCE688cd6e9699c982086fc884519a67353","w":585,"h":98},"6":"im"},{"3":"PY4w-1658196759398","5":[{"2":"2","3":"Ilfv-1658196759396","7":[{"8":"不同存储引擎中的字符串使用情况"}]}]},{"3":"0kSI-1658196808375","4":{"li":"CWDm-1658196821465","lt":"unordered","ll":1},"5":[{"2":"2","3":"P9C4-1658196808374","7":[{"8":"MyISAM ","9":[{"0":"#e96900","2":"c"}]},{"8":"数据存储引擎和数据列：MyISAM数据表，最好使用固定长度(CHAR)的数据列代替可变长度(VARCHAR)的数据列。这样使得整个表静态化，从而使 ","9":[{"0":"#34495e","2":"c"}]},{"8":"数据检索更快 ","9":[{"0":"#e96900","2":"c"},{"0":"NSimSun","2":"ff"}]},{"8":"，用空间换时间。","9":[{"0":"#34495e","2":"c"}]}]}],"6":"l"},{"3":"ceVD-1658196807026","4":{"li":"CWDm-1658196821465","lt":"unordered","ll":1},"5":[{"2":"2","3":"NUYc-1658196807025","7":[{"8":"MEMORY ","9":[{"0":"#e96900","2":"c"}]},{"8":"存储引擎和数据列：MEMORY数据表目前都使用固定长度的数据行存储，因此无论使用CHAR或VARCHAR列都没有关系，两者都是作为CHAR类型处理的。","9":[{"0":"#34495e","2":"c"}]}]}],"6":"l"},{"3":"6SPi-1658196807031","4":{"li":"CWDm-1658196821465","lt":"unordered","ll":1},"5":[{"2":"2","3":"f9Or-1658196807030","7":[{"8":"InnoDB ","9":[{"0":"#e96900","2":"c"}]},{"8":"存储引擎，建议使用VARCHAR类型。因为对于InnoDB数据表，内部的行存储格式并没有区分固定长度和可变长度列（所有数据行都使用指向数据列值的头指针），而且","9":[{"0":"#34495e","2":"c"}]},{"8":"主要影响性能的因素是数据行使用的存储总量","9":[{"2":"b"},{"0":"#880000","2":"c"}]},{"8":"，由于char平均占用的空间多于varchar，所以除了简短并且固定长度的，其他考虑varchar。这样节省空间，对磁盘I/O和数据存储总量比","9":[{"0":"#34495e","2":"c"}]}]}],"6":"l"},{"3":"9YV7-1658196759678","4":{"l":"h3"},"5":[{"2":"2","3":"ZGe2-1658196759677","7":[{"8":"TEXT","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"RKod-1658196759851","5":[{"2":"2","3":"UxfJ-1658196759850","7":[{"8":"在MySQL中，TEXT用来保存文本类型的字符串，总共包含4种类型，分别为TINYTEXT、TEXT、 MEDIUMTEXT 和 LONGTEXT 类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"DJFz-1658196928591","4":{"version":1},"5":[{"2":"2","3":"uVqY-1658196928590","7":[{"8":"在向TEXT类型的字段保存和查询数据时，系统自动按照实际长度存储，不需要预先定义长度。这一点和VARCHAR类型相同。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"8XwN-1658196928595","4":{"version":1},"5":[{"2":"2","3":"O9kv-1658196928594","7":[{"8":"每种TEXT类型保存的数据长度和所占用的存储空间不同，如下：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"bxYZ-1658197443790","4":{"version":1,"u":"https://note.youdao.com/yws/res/20675/WEBRESOURCEa2b629481b8cb8c4bf5592bd9935d0f2","w":585,"h":245},"6":"im"},{"3":"X03H-1658196504983","5":[{"2":"2","3":"YmNw-1658196504980","7":[{"8":"由于实际存储的长度不确定，","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"MySQL ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"不允许 ","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"TEXT ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型的字段做主键","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"。遇到这种情况，你只能采用CHAR(M)，或者 VARCHAR(M)。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"fkjP-1658196505141","4":{"l":"h3"},"5":[{"2":"2","3":"f2In-1658196505137","7":[{"8":"ENUM","9":[{"0":"#34495e","2":"c"}]},{"8":"类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"czET-1658197501706","5":[{"2":"2","3":"ahct-1658197501703","7":[{"8":"ENUM类型也叫作枚举类型，ENUM类型的取值范围需要在定义字段时进行指定。设置字段值时，ENUM类型只允许从成员中选取单个值，不能一次选取多个值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"KQlg-1658197728999","4":{"version":1},"5":[{"2":"2","3":"pyYX-1658197728998","7":[{"8":"其所需要的存储空间由定义ENUM类型时指定的成员个数决定。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Qyvz-1658197734706","4":{"version":1,"u":"https://note.youdao.com/yws/res/20680/WEBRESOURCEda9c1323a0275ecfb60de8c7d15b0801","w":585,"h":66},"6":"im"},{"3":"kGPg-1658197501893","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"ruym-1658197501892","7":[{"8":"当ENUM类型包含1～255个成员时，需要1个字节的存储空间；","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"twff-1658197739234","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"xW6h-1658197739233","7":[{"8":"当ENUM类型包含256～65535个成员时，需要2个字节的存储空间。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"yFpr-1658197739236","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"Tkr8-1658197739235","7":[{"8":"ENUM类型的成员个数的上限为65535个","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"bbz6-1658197865244","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"aqAw-1658197865242","7":[{"8":"忽略大小写 ","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]}]}],"6":"l"},{"3":"PnVT-1658197870326","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"Hifv-1658197870323","7":[{"8":"允许按照角标的方式获取指定索引位置的枚举值","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]}]}],"6":"l"},{"3":"jmvM-1658197882704","4":{"li":"zdRp-1658197741083","lt":"unordered","ll":1},"5":[{"2":"2","3":"thHb-1658197882701","7":[{"8":"当","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"ENUM","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型的字段没有声明为","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]},{"8":"NOT NULL","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"时，插入","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]},{"8":"NULL","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"也是有效的 ","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"4ZR1-1658197750505","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"7FTt-1658197750503","5":[{"2":"2","3":"Iy6K-1658197502059","7":[{"8":"CREATE TABLE test_enum( "}]}],"6":"cl"},{"3":"6L5x-1658197765244","5":[{"2":"2","3":"ZXCO-1658197765243","7":[{"8":"season ENUM(\u0027春\u0027,\u0027夏\u0027,\u0027秋\u0027,\u0027冬\u0027,\u0027unknow\u0027) "}]}],"6":"cl"},{"3":"wuaS-1658197765246","5":[{"2":"2","3":"9dvP-1658197765245","7":[{"8":");"}]}],"6":"cl"},{"3":"eqQN-1658197769574","5":[{"2":"2","3":"LAh8-1658197769573","7":[{"8":"INSERT INTO test_enum "}]}],"6":"cl"},{"3":"d9vf-1658197769785","5":[{"2":"2","3":"GXnY-1658197769784","7":[{"8":"VALUES(\u0027春\u0027),(\u0027秋\u0027); "}]}],"6":"cl"}],"6":"cd"},{"3":"AlqQ-1658197502264","4":{"l":"h3"},"5":[{"2":"2","3":"WZrl-1658197502261","7":[{"8":"SET","9":[{"0":"#34495e","2":"c"}]},{"8":"类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"KE51-1658196505297","5":[{"2":"2","3":"8K7z-1658196505294","7":[{"8":"SET表示一个字符串对象，可以包含0个或多个成员，但成员个数的上限为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"64 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。设置字段值时，可以取取值范围内的 0 个或多个值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"PicN-1658197820793","4":{"version":1},"5":[{"2":"2","3":"ziEZ-1658197820792","7":[{"8":"当SET类型包含的成员个数不同时，其所占用的存储空间也是不同的，具体如下：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Sl7D-1658197951147","4":{"version":1,"u":"https://note.youdao.com/yws/res/20692/WEBRESOURCEabcdef0c422398c081a8eb20068b6b13","w":585,"h":200},"6":"im"},{"3":"ip04-1658197849362","5":[{"2":"2","3":"b7Ow-1658197849358","7":[{"8":"SET类型在存储数据时成员个数越多，其占用的存储空间越大。注意：SET类型在选取成员时，可以一次选择多个成员，这一点与ENUM类型不同。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"kX4r-1658197981830","4":{"li":"McMF-1658197984826","lt":"unordered","ll":1},"5":[{"2":"2","3":"kcsA-1658197981827","7":[{"8":"#","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"插入重复的","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"SET","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型成员时，","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"MySQL","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"会自动删除重复的成员","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]}]}],"6":"l"},{"3":"mNBg-1658197991736","4":{"li":"McMF-1658197984826","lt":"unordered","ll":1},"5":[{"2":"2","3":"K2Om-1658197991733","7":[{"8":"#","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"向","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]},{"8":"SET","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"类型的字段插入","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]},{"8":"SET","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"成员中不存在的值时，","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]},{"8":"MySQL","9":[{"0":"#aa5500","2":"c"},{"0":16,"2":"fs"}]},{"8":"会抛出错误。","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"7MtH-1658197998302","4":{"li":"McMF-1658197984826","lt":"unordered","ll":1},"5":[{"2":"2","3":"DMyl-1658197998299","7":[{"8":"可以选择多个插入 ","9":[{"0":"#aa5500","2":"c"},{"0":"NSimSun","2":"ff"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"0Mvg-1658197964970","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"fLeN-1658197964968","5":[{"2":"2","3":"BekZ-1658197849514","7":[{"8":"CREATE TABLE test_set( s SET (\u0027A\u0027, \u0027B\u0027, \u0027C\u0027) );"}]}],"6":"cl"},{"3":"Xi9V-1658197969799","5":[{"2":"2","3":"5BPe-1658197969796","7":[{"8":"INSERT INTO test_set (s) VALUES (\u0027A\u0027), (\u0027A,B\u0027); "}]}],"6":"cl"}],"6":"cd"},{"3":"8tfs-1658198014862","4":{"l":"h1"},"5":[{"2":"2","3":"bhvj-1658198014861","7":[{"8":"二进制字符串类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"Olno-1658197850027","5":[{"2":"2","3":"12ka-1658197850025","7":[{"8":"MySQL中的二进制字符串类型主要存储一些二进制数据，比如可以存储图片、音频和视频等二进制数据。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"K9KY-1658198420873","4":{"version":1},"5":[{"2":"2","3":"mSdx-1658198420872","7":[{"8":"MySQL中支持的二进制字符串类型主要包括BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"eDJm-1658197850161","4":{"l":"h3"},"5":[{"2":"2","3":"Ycqp-1658197850156","7":[{"8":"BINARY","9":[{"0":"#34495e","2":"c"}]},{"8":"与","9":[{"2":"b"},{"0":"#34495e","2":"c"}]},{"8":"VARBINARY","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"t3vF-1658197850321","5":[{"2":"2","3":"QEJy-1658197850318","7":[{"8":"BINARY和VARBINARY类似于CHAR和VARCHAR，只是它们存储的是二进制字符串。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"kqSs-1658198453503","4":{"version":1},"5":[{"2":"2","3":"62a8-1658198453502","7":[{"8":"BINARY (M)为固定长度的二进制字符串，M表示最多能存储的字节数，取值范围是0~255个字符。如果未指定(M)，表示只能存储 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"1","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"个字节 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。例如BINARY (8)，表示最多能存储8个字节，如果字段值不足(M)个字节，将在右边填充\u0027\\0\u0027以补齐指定长度。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"wA1l-1658198453510","4":{"version":1},"5":[{"2":"2","3":"hZAw-1658198453509","7":[{"8":"VARBINARY (M)为可变长度的二进制字符串，M表示最多能存储的字节数，总字节数不能超过行的字节长度限制65535，另外还要考虑额外字节开销，VARBINARY类型的数据除了存储数据本身外，还需要1或2个字节来存储数据的字节数。VARBINARY类型 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"必须指定","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"(M) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"，否则报错。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"obkQ-1658198497824","4":{"version":1,"u":"https://note.youdao.com/yws/res/20705/WEBRESOURCEe9957b1ba792ae991755cfd83c387cb7","w":585,"h":99},"6":"im"},{"3":"0Puj-1658197846486","4":{"l":"h3"},"5":[{"2":"2","3":"mZOu-1658197846485","7":[{"8":"BLOB","9":[{"0":"#34495e","2":"c"}]},{"8":"类型 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"N471-1658198535451","5":[{"2":"2","3":"Qzt8-1658198535448","7":[{"8":"BLOB是一个 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"二进制大对象 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，可以容纳可变数量的数据。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"brAi-1658199504692","4":{"version":1},"5":[{"2":"2","3":"XmJF-1658199504691","7":[{"8":"MySQL中的BLOB类型包括TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB 4种类型，它们可容纳值的最大长度不同。可以存储一个二进制的大对象，比如 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"图片 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"、 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"音频 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"和 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"视频 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"等。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"4WVk-1658199504697","4":{"version":1},"5":[{"2":"2","3":"OZOH-1658199504696","7":[{"8":"需要注意的是，在实际工作中，往往不会在MySQL数据库中使用BLOB类型存储大对象数据，通常会将图片、音频和视频文件存储到 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"服务器的磁盘上 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，并将图片、音频和视频的访问路径存储到MySQL中。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"p2VL-1658199522214","4":{"version":1,"u":"https://note.youdao.com/yws/res/20711/WEBRESOURCE627b7e3412c03398f7608ae0b5c6a68e","w":585,"h":170},"6":"im"},{"3":"VnTm-1658199573554","5":[{"2":"2","3":"Z1Uv-1658199573551","7":[{"8":"TEXT","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"和","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"BLOB","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"的使用注意事项：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"ai9g-1658199625795","4":{"version":1},"5":[{"2":"2","3":"zWaJ-1658199625794","7":[{"8":"在使用text和blob字段类型时要注意以下几点，以便更好的发挥数据库的性能。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"vwvF-1658199625797","4":{"version":1},"5":[{"2":"2","3":"1y2m-1658199625796","7":[{"8":"① BLOB和TEXT值也会引起自己的一些问题，特别是执行了大量的删除或更新操作的时候。删除这种值会在数据表中留下很大的\" ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"空洞 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"\"，以后填入这些\"空洞\"的记录可能长度不同。为了提高性能，建议定期使用 OPTIMIZE TABLE 功能对这类表进行 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"碎片整理 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"I7VC-1658199625805","4":{"version":1},"5":[{"2":"2","3":"0Zmz-1658199625804","7":[{"8":"② 如果需要对大文本字段进行模糊查询，MySQL 提供了 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"前缀索引 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。但是仍然要在不必要的时候避免检索大型的BLOB或TEXT值。例如，SELECT * 查询就不是很好的想法，除非你能够确定作为约束条件的WHERE子句只会找到所需要的数据行。否则，你可能毫无目的地在网络上传输大量的值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"iZ3W-1658199625813","4":{"version":1},"5":[{"2":"2","3":"p8BD-1658199625811","7":[{"8":"③ 把BLOB或TEXT列 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"分离到单独的表 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"中。在某些环境中，如果把这些数据列移动到第二张数据表中，可以让你把原数据表中的数据列转换为固定长度的数据行格式，那么它就是有意义的。这会 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"减少主表中的碎片 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，使你得到固定长度数据行的性能优势。它还使你在主数据表上运行 SELECT * 查询的时候不会通过网络传输大量的BLOB或TEXT值。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"OsI9-1658199573791","4":{"l":"h1"},"5":[{"2":"2","3":"7A2T-1658199573789","7":[{"8":"JSON ","9":[{"0":"#34495e","2":"c"}]},{"8":"类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"gmr6-1658199573971","5":[{"2":"2","3":"b82M-1658199573969","7":[{"8":"JSON（JavaScript Object Notation）是一种轻量级的 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"数据交换格式 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。它易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"JSON ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"可以将 ","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"JavaScript ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"对象中表示的一组数据转换为字符串，然后就可以在网络或者程序之间轻松地传递这个字符串，并在需要的时候将它还原为各编程语言所支持的数据格式。","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"VMlw-1658199869464","5":[{"2":"2","3":"BjvO-1658199869461","7":[{"8":"在MySQL 5.7中，就已经支持JSON数据类型。在MySQL 8.x版本中，JSON类型提供了可以进行自动验证的JSON文档和优化的存储结构，使得在MySQL中存储和读取JSON类型的数据更加方便和高效。 创建数据表，表中包含一个JSON类型的字段 js 。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"s5Lr-1658200014495","4":{"wrap":false,"la":"sql","th":"default"},"5":[{"3":"egUE-1658200014494","5":[{"2":"2","3":"QitW-1658199574155","7":[{"8":"CREATE TABLE test_json( js json );"}]}],"6":"cl"},{"3":"gLzU-1658200019524","5":[{"2":"2","3":"lOvJ-1658200019521","7":[{"8":"INSERT INTO test_json (js) "}]}],"6":"cl"},{"3":"RHJt-1658200024558","5":[{"2":"2","3":"hHaz-1658200024557","7":[{"8":"VALUES (\u0027{\"name\":\"songhk\", \"age\":18, \"address\":{\"province\":\"beijing\", "}]}],"6":"cl"},{"3":"PnI3-1658200024560","5":[{"2":"2","3":"UYCr-1658200024559","7":[{"8":"\"city\":\"beijing\"}}\u0027); "}]}],"6":"cl"},{"3":"4A4P-1658200029898","5":[{"2":"2","3":"iIgc-1658200029895"}],"6":"cl"}],"6":"cd"},{"3":"pz4c-1658199574266","5":[{"2":"2","3":"9pgm-1658199574264","7":[{"8":"当需要检索JSON类型的字段中数据的某个具体值时，可以使用“-\u003e”和“-\u003e\u003e”符号。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"HTpW-1658200095318","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"OqUJ-1658200095317","5":[{"2":"2","3":"M9Tx-1658198535679","7":[{"8":"mysql\u003e SELECT js -\u003e \u0027$.name\u0027 AS NAME,js -\u003e \u0027$.age\u0027 AS age ,js -\u003e \u0027$.address.province\u0027 "}]}],"6":"cl"},{"3":"0kag-1658200096596","5":[{"2":"2","3":"9U0f-1658200096595","7":[{"8":"AS province, js -\u003e \u0027$.address.city\u0027 AS city"}]}],"6":"cl"},{"3":"em37-1658200096598","5":[{"2":"2","3":"71GS-1658200096597","7":[{"8":"-\u003e FROM test_json; "}]}],"6":"cl"},{"3":"yxCd-1658200096600","5":[{"2":"2","3":"EOYL-1658200096599","7":[{"8":"+----------+------+-----------+-----------+"}]}],"6":"cl"},{"3":"0WSL-1658200096602","5":[{"2":"2","3":"snUw-1658200096601","7":[{"8":"| NAME | age | province | city | "}]}],"6":"cl"},{"3":"GP6p-1658200096604","5":[{"2":"2","3":"0u7P-1658200096603","7":[{"8":"+----------+------+-----------+-----------+"}]}],"6":"cl"},{"3":"MVmG-1658200096606","5":[{"2":"2","3":"lGdt-1658200096605","7":[{"8":"| \"songhk\" | 18 | \"beijing\" | \"beijing\" | "}]}],"6":"cl"},{"3":"YTHT-1658200096608","5":[{"2":"2","3":"HEVo-1658200096607","7":[{"8":"+----------+------+-----------+-----------+"}]}],"6":"cl"},{"3":"ihVC-1658200096610","5":[{"2":"2","3":"nFl1-1658200096609","7":[{"8":"1 row in set (0.00 sec)"}]}],"6":"cl"}],"6":"cd"},{"3":"CV2m-1658134715078","4":{"l":"h1"},"5":[{"2":"2","3":"mbhr-1658134715076","7":[{"8":"空间类型","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"MRgD-1658200154725","4":{"version":1},"5":[{"2":"2","3":"zb2W-1658200154726","7":[{"8":"MySQL 空间类型扩展支持地理特征的生成、存储和分析。这里的地理特征表示世界上具有位置的任何东西，可以是一个实体，例如一座山；可以是空间，例如一座办公楼；也可以是一个可定义的位置，例如一个十字路口等等。MySQL中使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"Geometry","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"（几何） ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"来表示所有地理特征。Geometry指一个点或点的集合，代表世界上任何具有位置的事物。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"gRVO-1658200161205","4":{"version":1},"5":[{"2":"2","3":"4b58-1658200161204","7":[{"8":"MySQL的空间数据类型（Spatial Data Type）对应于OpenGIS类，包括单值类型：GEOMETRY、POINT、 LINESTRING、POLYGON以及集合类型：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTION 。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Uc7G-1658200154845","4":{"l":"h1"},"5":[{"2":"2","3":"Ryas-1658200154843","7":[{"8":"小结及选择建议","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"Zbwd-1658200155221","4":{"version":1},"5":[{"2":"2","3":"vkPq-1658200155219","7":[{"8":"在定义数据类型时，如果确定是 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"整数 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，就用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"INT ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"； 如果是 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"小数 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"，一定用定点数类型","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"DECIMAL(M,D) ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"； 如果是日期与时间，就用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"DATETIME ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"pN6T-1658200237463","4":{"version":1},"5":[{"2":"2","3":"TWXA-1658200237462","7":[{"8":"这样做的好处是，首先确保你的系统不会因为数据类型定义出错。不过，凡事都是有两面的，可靠性好，并不意味着高效。比如，TEXT 虽然使用方便，但是效率不如 CHAR(M) 和 VARCHAR(M)。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"YgpE-1658200297885","4":{"version":1},"5":[{"2":"2","3":"jGxy-1658200297882","7":[{"8":"阿里巴巴《","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"Java","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"开发手册》之","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"MySQL","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"数据库：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"7fES-1658200298107","4":{"version":1},"5":[{"2":"2","3":"JCMu-1658200298105","7":[{"8":"任何字段如果为非负数，必须是 UNSIGNED ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"glCe-1658200304659","4":{"li":"IFp6-1658200315073","lt":"unordered","ll":1},"5":[{"2":"2","3":"22P4-1658200304658","7":[{"8":"【 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"强制 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"】小数类型为 DECIMAL，禁止使用 FLOAT 和 DOUBLE。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"T7VK-1658200304661","4":{"li":"IFp6-1658200315073","lt":"unordered","ll":2},"5":[{"2":"2","3":"724i-1658200304660","7":[{"8":"说明：在存储的时候，FLOAT 和 DOUBLE 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。如果存储的数据范围超过 DECIMAL 的范围，建议将数据拆成整数和小数并分开存储。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"hL9R-1658200304668","4":{"li":"IFp6-1658200315073","lt":"unordered","ll":1},"5":[{"2":"2","3":"iSRy-1658200304667","7":[{"8":"【 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"强制 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"】如果存储的字符串长度几乎相等，使用 CHAR 定长字符串类型。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"},{"3":"Pimv-1658200304671","4":{"li":"IFp6-1658200315073","lt":"unordered","ll":1},"5":[{"2":"2","3":"ZYIH-1658200304670","7":[{"8":"【 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"强制 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"】VARCHAR 是可变长字符串，不预先分配存储空间，长度不要超过 5000。如果存储长度大于此值，定义字段类型为 TEXT，独立出来一张表，用主键来对应，避免影响其它字段索引效率。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}],"6":"l"}],"__compress__":true,"title":""}