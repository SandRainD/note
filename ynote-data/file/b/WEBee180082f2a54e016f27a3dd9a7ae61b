{"2":"1","3":"Ju9C-1621846617594","4":{"version":1,"incompatibleVersion":0,"fv":"0"},"5":[{"3":"3060-1621846615933","4":{"l":"h3"},"5":[{"2":"2","3":"p5PQ-1621846617594","7":[{"8":"自增","9":[{"2":"b"},{"0":"#34495e","2":"c"}]},{"8":"ID","9":[{"0":"#34495e","2":"c"}]},{"8":"的问题","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"5Qar-1658991466684","5":[{"2":"2","3":"gVdw-1658991466681","7":[{"8":"自增ID做主键，简单易懂，几乎所有数据库都支持自增类型，只是实现上各自有所不同而已。自增ID除了简单，其他都是缺点，总体来看存在以下几方面的问题：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"vH0U-1658991467195","5":[{"2":"2","3":"J7Dg-1658991467193","7":[{"8":"1. ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"可靠性不高","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"6ESX-1658991494505","4":{"version":1},"5":[{"2":"2","3":"0iMP-1658991494504","7":[{"8":"存在自增ID回溯的问题，这个问题直到最新版本的MySQL 8.0才修复。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"A4qb-1658991494508","4":{"version":1},"5":[{"2":"2","3":"51bJ-1658991494507","7":[{"8":"2. ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"安全性不高","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"U6z8-1658991494510","4":{"version":1},"5":[{"2":"2","3":"5FWz-1658991494509","7":[{"8":"对外暴露的接口可以非常容易猜测对应的信息。比如：/User/1/这样的接口，可以非常容易猜测用户ID的值为多少，总用户数量有多少，也可以非常容易地通过接口进行数据的爬取。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"khx7-1658991494514","4":{"version":1},"5":[{"2":"2","3":"p0Vr-1658991494513","7":[{"8":"3. ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"性能差","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"lKHW-1658991494516","4":{"version":1},"5":[{"2":"2","3":"zxvI-1658991494515","7":[{"8":"自增ID的性能较差，需要在数据库服务器端生成。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"LMwl-1658991494518","4":{"version":1},"5":[{"2":"2","3":"8rYE-1658991494517","7":[{"8":"4. ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"交互多","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"M4m9-1658991494520","4":{"version":1},"5":[{"2":"2","3":"aMOi-1658991494519","7":[{"8":"业务还需要额外执行一次类似 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"last_insert_id() ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"}]},{"8":"的函数才能知道刚才插入的自增值，这需要多一次的网络交互。在海量并发的系统中，多1条SQL，就多一次性能上的开销。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"c2WT-1658991494524","4":{"version":1},"5":[{"2":"2","3":"jTT7-1658991494523","7":[{"8":"5. ","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"局部唯一性","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"dSNb-1658991494526","4":{"version":1},"5":[{"2":"2","3":"OmFm-1658991494525","7":[{"8":"最重要的一点，自增ID是局部唯一，只在当前数据库实例中唯一，而不是全局唯一，在任意服务器间都是唯一的。对于目前分布式系统来说，这简直就是噩梦。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"GG4z-1658991467280","4":{"l":"h3"},"5":[{"2":"2","3":"Crxb-1658991467278","7":[{"8":"业务字段做主键","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"VDmC-1658991467390","5":[{"2":"2","3":"9ke4-1658991467388","7":[{"8":"为了能够唯一地标识一个会员的信息，需要为 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"会员信息表 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"设置一个主键。那么，怎么为这个表设置主键，才能达到我们理想的目标呢？ 这里我们考虑业务字段做主键。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"yStn-1658991695799","4":{"version":1,"u":"https://note.youdao.com/yws/res/0/WEBRESOURCE7fdc936a2949c2534602d65ca1354880","w":582,"h":134},"6":"im"},{"3":"ov9R-1658991472940","5":[{"2":"2","3":"at1C-1658991472938","7":[{"8":"选择卡号（","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"cardno","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"）","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"SFpy-1658991473446","5":[{"2":"2","3":"Wpys-1658991473444","7":[{"8":"但实际情况是， ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"会员卡号可能存在重复使用 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"的情况。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"WWWh-1658991473547","5":[{"2":"2","3":"dRqU-1658991473546","7":[{"8":"从系统设计的角度看，这个变化只是修改了会员信息表中的卡号是“10000001”这个会员 信息，并不会影响到数据一致性。也就是说，修改会员卡号是“10000001”的会员信息， 系统的各个模块，都会获取到修改后的会员信息，不会出现“有的模块获取到修改之前的会员信息，有的模块获取到修改后的会员信息，而导致系统内部数据不一致”的情况。因此，从 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"信息系统层面 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"上看是没问题的。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"2OvW-1658991473652","5":[{"2":"2","3":"TJBS-1658991473651","7":[{"8":"但是从使用 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"系统的业务层面 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"来看，就有很大的问题 了，会对商家造成影响。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Dhej-1658991473748","5":[{"2":"2","3":"r0lr-1658991473746","7":[{"8":"比如，我们有一个销售流水表（trans），记录了所有的销售流水明细。2020 年 12 月 01 日，张三在门店购买了一本书，消费了 89 元。那么，系统中就有了张三买书的流水记录","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Kh1p-1658991473845","4":{"l":"h3"},"5":[{"2":"2","3":"NlFC-1658991473844","7":[{"8":"推荐的主键设计 ","9":[{"2":"b"},{"0":"#34495e","2":"c"}]}]}],"6":"h"},{"3":"3c1M-1658991473948","5":[{"2":"2","3":"tDXk-1658991473946","7":[{"8":"非核心业务 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"：对应表的主键自增ID，如告警、日志、监控等信息。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"aRuS-1658992117438","4":{"version":1},"5":[{"2":"2","3":"yiEe-1658992117437","7":[{"8":"核心业务 ","9":[{"0":"#e96900","2":"c"},{"0":16,"2":"fs"},{"0":"NSimSun","2":"ff"}]},{"8":"：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]},{"8":"主键设计至少应该是全局唯一且是单调递增","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"。全局唯一保证在各系统之间都是唯一的，单调递增是希望插入时不影响数据库性能。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"dVvu-1658992117442","4":{"version":1},"5":[{"2":"2","3":"04bq-1658992117441","7":[{"8":"这里推荐最简单的一种主键设计：UUID。 ","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"6khO-1658991474053","5":[{"2":"2","3":"K0hC-1658991474051"}]},{"3":"imrE-1658991474145","5":[{"2":"2","3":"kWct-1658991474143","7":[{"8":"UUID","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"的特点：","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"y2Mu-1658992124124","4":{"version":1},"5":[{"2":"2","3":"wFux-1658992124123","7":[{"8":"全局唯一，占用36字节，数据无序，插入性能差","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"Ivzr-1658991474259","5":[{"2":"2","3":"m3Sx-1658991474257","7":[{"8":"MySQL数据库的UUID组成如下所示：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"BnlX-1658992135926","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"UWTK-1658992135925","5":[{"2":"2","3":"7xeu-1658992133097","7":[{"8":"UUID = 时间+UUID版本（16字节）- 时钟序列（4字节） - MAC地址（12字节）"}]}],"6":"cl"}],"6":"cd"},{"3":"nX2z-1658992360270","4":{"version":1,"u":"https://note.youdao.com/yws/res/a/WEBRESOURCEcdb427086d494c04b2e0cfa1ac02a9ba","w":582,"h":215},"6":"im"},{"3":"KFtD-1658991474449","5":[{"2":"2","3":"kZv7-1658991474448","7":[{"8":"UUID根据字符串进行存储，设计时还带有无用\"-\"字符串，因此总共需要36个字节。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"2sTB-1658991474535","5":[{"2":"2","3":"FgaM-1658991474533","7":[{"8":"因为UUID的设计中，将时间低位放在最前面，而这部分的数据是一直在变化的，并且是无序。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"x5SO-1658991474624","5":[{"2":"2","3":"2uYC-1658991474623","7":[{"8":"改造","9":[{"2":"b"},{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]},{"8":"UUID","9":[{"0":"#880000","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"8e3x-1658991474720","5":[{"2":"2","3":"abJa-1658991474718","7":[{"8":"若将时间高低位互换，则时间就是单调递增的了，也就变得单调递增了。MySQL 8.0可以更换时间低位和时间高位的存储方式，这样UUID就是有序的UUID了。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"aVtO-1658992392540","4":{"version":1},"5":[{"2":"2","3":"xy9e-1658992392539","7":[{"8":"MySQL 8.0还解决了UUID存在的空间占用的问题，除去了UUID字符串中无意义的\"-\"字符串，并且将字符串用二进制类型保存，这样存储空间降低为了16字节。","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"mGhQ-1658991474816","5":[{"2":"2","3":"Odre-1658991474815","7":[{"8":"可以通过MySQL8.0提供的uuid_to_bin函数实现上述功能，同样的，MySQL也提供了bin_to_uuid函数进行转化：","9":[{"0":"#34495e","2":"c"},{"0":16,"2":"fs"}]}]}]},{"3":"tRIh-1658992477670","4":{"wrap":false,"la":"","th":"default"},"5":[{"3":"f5Ba-1658992477669","5":[{"2":"2","3":"jTb2-1658991474928","7":[{"8":"SET @uuid = UUID(); "}]}],"6":"cl"},{"3":"ovbb-1658992478502","4":{},"5":[{"2":"2","3":"mnqS-1658992478501","7":[{"8":"SELECT @uuid,uuid_to_bin(@uuid),uuid_to_bin(@uuid,TRUE);"}]}],"6":"cl"}],"6":"cd"},{"3":"wAyq-1658991475023","5":[{"2":"2","3":"vziH-1658991475022","7":[{"8":"在当今的互联网环境中，非常不推荐自增ID作为主键的数据库设计。更推荐类似有序UUID的全局唯一的实现。"}]}]},{"3":"k4ow-1658991475138","5":[{"2":"2","3":"DfgK-1658991475136","7":[{"8":"另外在真实的业务系统中，主键还可以加入业务和系统属性，如用户的尾号，机房的信息等。这样的主键设计就更为考验架构师的水平了。"}]}]},{"3":"YnCZ-1658991475231","5":[{"2":"2","3":"OTVF-1658991475229"}]}],"title":"","__compress__":true}