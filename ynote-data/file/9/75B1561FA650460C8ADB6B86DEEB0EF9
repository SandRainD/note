> Warp可以实现流布局，单行的Wrap跟Row表现几乎一致。但Row与Colum都是单行单列的，Wrap则突破了这个限制，mainAxis上空见不足时，则向crosAxis上去扩展展示

定义按钮
```
class LayoutDemo extends StatelessWidget{
    @override
    Widget build(BuildContext context){
        return RaisedButton(
        //按钮
            child:Text('第一季'),
        
           //按钮自定义颜色
           textColor:Theme.of(context).accentColor
           onPressed:(){
               
           }
        );
    }
}
```
自定义一个button组件，封装起来


```
class MyButton extends StatelessWidget{
    final String text ;
    //实例化text参数(使用final关键字,必须要实例化)
    const MyButton(this.text,{Key,key}):super(Key:key);
    @override
    Widget build(BuildContext context){
        return RaisedButton(
        //按钮
            child:Text(this.text),
        
           //按钮自定义颜色
           textColor:Theme.of(context).accentColor
           onPressed:(){
               
           }
        );
    }
}
```
Wrap

属性 | 说明
---|---
direction | 主轴的方向,默认水平
alignment | 主轴的对齐方式
spacing | 主轴方向上的间距
textDirection | 文本方向
verticalDirection | 定义了children摆放顺序，默认是down，键Flex相关属性
runAlignment | run的对齐方式。run可以理解为新的行或者列，如果时水平方向布局的化，run可以理解为新的一行
runspacing | run的间距


```
class LayoutDemo extends SataelessWidget{
    @override
    Widget build(BuildContext context){
        return Wrap(
            spacing:10,//主轴方向上10的间距,水平
            runSpacing:10,//次轴方向的间距,y轴
            children:<Widget>[
                MyButton("第一集"),
                MyButton("第二集"),
                MyButton("第三集"),
                MyButton("第四集"),
                MyButton("第五集"),
                MyButton("第六集"),
                MyButton("第七集"),
                MyButton("第八集"),
                MyButton("第九集"),
                MyButton("第十集"),
            ],
        );
    }
}
```
