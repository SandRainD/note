<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head><list id="7620-1622101082535" type="unordered"/></head><body><para><coId>6650-1620217435158</coId><text>1、HandlerInterceptor 接口</text><inline-styles><bold><from>0</from><to>23</to><value>true</value></bold><font-size><from>0</from><to>23</to><value>24</value></font-size></inline-styles><styles><line-height>1.3333333333333333</line-height></styles></para><para><coId>2010-1620734807164</coId><text/><inline-styles/><styles><line-height>1.3333333333333333</line-height></styles></para><code><coId>1067-1620734491804</coId><text>/**
 * 登录检查
 * 1、配置好拦截器要拦截哪些请求
 * 2、把这些配置放在容器中
 */
@Slf4j
public class LoginInterceptor implements HandlerInterceptor {
    /**
     * 目标方法执行之前
     * @param request
     * @param response
     * @param handler
     * @return
     * @throws Exception
     */
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, 
        Object handler) throws Exception {
        String requestURI = request.getRequestURI();
        log.info("preHandle拦截的请求路径是{}",requestURI);

        //登录检查逻辑
        HttpSession session = request.getSession();

        Object loginUser = session.getAttribute("loginUser");

        if(loginUser != null){
            //放行
            return true;
        }

        //拦截住。未登录。跳转到登录页
        request.setAttribute("msg","请先登录");
//        re.sendRedirect("/");
        request.getRequestDispatcher("/").forward(request,response);
        return false;
    }

    /**
     * 目标方法执行完成以后
     * @param request
     * @param response
     * @param handler
     * @param modelAndView
     * @throws Exception
     */
    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, 
        ModelAndView modelAndView) throws Exception {
        log.info("postHandle执行{}",modelAndView);
    }

    /**
     * 页面渲染以后
     * @param request
     * @param response
     * @param handler
     * @param ex
     * @throws Exception
     */
    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, 
        Object handler, Exception ex) throws Exception {
        log.info("afterCompletion执行异常{}",ex);
    }
}
</text><inline-styles><color><from>0</from><to>3</to><value>#6a737d</value></color><color><from>3</from><to>5</to><value>#595959</value></color><color><from>5</from><to>11</to><value>#6a737d</value></color><color><from>11</from><to>13</to><value>#595959</value></color><color><from>13</from><to>30</to><value>#6a737d</value></color><color><from>30</from><to>32</to><value>#595959</value></color><color><from>32</from><to>46</to><value>#6a737d</value></color><color><from>46</from><to>48</to><value>#595959</value></color><color><from>48</from><to>50</to><value>#6a737d</value></color><color><from>50</from><to>51</to><value>#595959</value></color><color><from>51</from><to>57</to><value>#1f7f9a</value></color><color><from>57</from><to>58</to><value>#595959</value></color><color><from>58</from><to>64</to><value>#d73a49</value></color><color><from>64</from><to>65</to><value>#595959</value></color><color><from>65</from><to>70</to><value>#d73a49</value></color><color><from>70</from><to>71</to><value>#595959</value></color><color><from>71</from><to>87</to><value>#005cc5</value></color><color><from>87</from><to>88</to><value>#595959</value></color><color><from>88</from><to>98</to><value>#d73a49</value></color><color><from>98</from><to>124</to><value>#595959</value></color><color><from>124</from><to>127</to><value>#6a737d</value></color><color><from>127</from><to>133</to><value>#595959</value></color><color><from>133</from><to>143</to><value>#6a737d</value></color><color><from>143</from><to>149</to><value>#595959</value></color><color><from>149</from><to>165</to><value>#6a737d</value></color><color><from>165</from><to>171</to><value>#595959</value></color><color><from>171</from><to>188</to><value>#6a737d</value></color><color><from>188</from><to>194</to><value>#595959</value></color><color><from>194</from><to>210</to><value>#6a737d</value></color><color><from>210</from><to>216</to><value>#595959</value></color><color><from>216</from><to>225</to><value>#6a737d</value></color><color><from>225</from><to>231</to><value>#595959</value></color><color><from>231</from><to>250</to><value>#6a737d</value></color><color><from>250</from><to>256</to><value>#595959</value></color><color><from>256</from><to>258</to><value>#6a737d</value></color><color><from>258</from><to>263</to><value>#595959</value></color><color><from>263</from><to>272</to><value>#1f7f9a</value></color><color><from>272</from><to>277</to><value>#595959</value></color><color><from>277</from><to>283</to><value>#d73a49</value></color><color><from>283</from><to>284</to><value>#595959</value></color><color><from>284</from><to>291</to><value>#22863a</value></color><color><from>291</from><to>360</to><value>#595959</value></color><color><from>369</from><to>375</to><value>#22863a</value></color><color><from>375</from><to>385</to><value>#595959</value></color><color><from>385</from><to>391</to><value>#d73a49</value></color><color><from>391</from><to>412</to><value>#595959</value></color><color><from>412</from><to>418</to><value>#22863a</value></color><color><from>418</from><to>430</to><value>#595959</value></color><color><from>430</from><to>431</to><value>#d73a49</value></color><color><from>431</from><to>474</to><value>#595959</value></color><color><from>474</from><to>495</to><value>#669900</value></color><color><from>495</from><to>518</to><value>#595959</value></color><color><from>518</from><to>526</to><value>#6a737d</value></color><color><from>526</from><to>555</to><value>#595959</value></color><color><from>555</from><to>556</to><value>#d73a49</value></color><color><from>556</from><to>588</to><value>#595959</value></color><color><from>588</from><to>594</to><value>#22863a</value></color><color><from>594</from><to>605</to><value>#595959</value></color><color><from>605</from><to>606</to><value>#d73a49</value></color><color><from>606</from><to>628</to><value>#595959</value></color><color><from>628</from><to>639</to><value>#669900</value></color><color><from>639</from><to>651</to><value>#595959</value></color><color><from>651</from><to>653</to><value>#d73a49</value></color><color><from>653</from><to>664</to><value>#595959</value></color><color><from>664</from><to>666</to><value>#d73a49</value></color><color><from>666</from><to>667</to><value>#595959</value></color><color><from>667</from><to>671</to><value>#990055</value></color><color><from>671</from><to>686</to><value>#595959</value></color><color><from>686</from><to>690</to><value>#6a737d</value></color><color><from>690</from><to>703</to><value>#595959</value></color><color><from>703</from><to>709</to><value>#d73a49</value></color><color><from>709</from><to>710</to><value>#595959</value></color><color><from>710</from><to>714</to><value>#990055</value></color><color><from>714</from><to>735</to><value>#595959</value></color><color><from>735</from><to>751</to><value>#6a737d</value></color><color><from>751</from><to>781</to><value>#595959</value></color><color><from>781</from><to>786</to><value>#669900</value></color><color><from>786</from><to>787</to><value>#595959</value></color><color><from>787</from><to>793</to><value>#669900</value></color><color><from>793</from><to>796</to><value>#595959</value></color><color><from>796</from><to>827</to><value>#6a737d</value></color><color><from>827</from><to>865</to><value>#595959</value></color><color><from>865</from><to>868</to><value>#669900</value></color><color><from>868</from><to>905</to><value>#595959</value></color><color><from>905</from><to>911</to><value>#d73a49</value></color><color><from>911</from><to>912</to><value>#595959</value></color><color><from>912</from><to>917</to><value>#990055</value></color><color><from>917</from><to>930</to><value>#595959</value></color><color><from>930</from><to>933</to><value>#6a737d</value></color><color><from>933</from><to>939</to><value>#595959</value></color><color><from>939</from><to>951</to><value>#6a737d</value></color><color><from>951</from><to>957</to><value>#595959</value></color><color><from>957</from><to>973</to><value>#6a737d</value></color><color><from>973</from><to>979</to><value>#595959</value></color><color><from>979</from><to>996</to><value>#6a737d</value></color><color><from>996</from><to>1002</to><value>#595959</value></color><color><from>1002</from><to>1018</to><value>#6a737d</value></color><color><from>1018</from><to>1024</to><value>#595959</value></color><color><from>1024</from><to>1045</to><value>#6a737d</value></color><color><from>1045</from><to>1051</to><value>#595959</value></color><color><from>1051</from><to>1070</to><value>#6a737d</value></color><color><from>1070</from><to>1076</to><value>#595959</value></color><color><from>1076</from><to>1078</to><value>#6a737d</value></color><color><from>1078</from><to>1083</to><value>#595959</value></color><color><from>1083</from><to>1092</to><value>#1f7f9a</value></color><color><from>1092</from><to>1097</to><value>#595959</value></color><color><from>1097</from><to>1103</to><value>#d73a49</value></color><color><from>1103</from><to>1104</to><value>#595959</value></color><color><from>1104</from><to>1108</to><value>#22863a</value></color><color><from>1108</from><to>1178</to><value>#595959</value></color><color><from>1178</from><to>1184</to><value>#22863a</value></color><color><from>1184</from><to>1194</to><value>#595959</value></color><color><from>1203</from><to>1230</to><value>#595959</value></color><color><from>1230</from><to>1236</to><value>#d73a49</value></color><color><from>1236</from><to>1266</to><value>#595959</value></color><color><from>1266</from><to>1282</to><value>#669900</value></color><color><from>1282</from><to>1309</to><value>#595959</value></color><color><from>1309</from><to>1312</to><value>#6a737d</value></color><color><from>1312</from><to>1318</to><value>#595959</value></color><color><from>1318</from><to>1326</to><value>#6a737d</value></color><color><from>1326</from><to>1332</to><value>#595959</value></color><color><from>1332</from><to>1348</to><value>#6a737d</value></color><color><from>1348</from><to>1354</to><value>#595959</value></color><color><from>1354</from><to>1371</to><value>#6a737d</value></color><color><from>1371</from><to>1377</to><value>#595959</value></color><color><from>1377</from><to>1393</to><value>#6a737d</value></color><color><from>1393</from><to>1399</to><value>#595959</value></color><color><from>1399</from><to>1410</to><value>#6a737d</value></color><color><from>1410</from><to>1416</to><value>#595959</value></color><color><from>1416</from><to>1435</to><value>#6a737d</value></color><color><from>1435</from><to>1441</to><value>#595959</value></color><color><from>1441</from><to>1443</to><value>#6a737d</value></color><color><from>1443</from><to>1448</to><value>#595959</value></color><color><from>1448</from><to>1457</to><value>#1f7f9a</value></color><color><from>1457</from><to>1462</to><value>#595959</value></color><color><from>1462</from><to>1468</to><value>#d73a49</value></color><color><from>1468</from><to>1469</to><value>#595959</value></color><color><from>1469</from><to>1473</to><value>#22863a</value></color><color><from>1473</from><to>1548</to><value>#595959</value></color><color><from>1557</from><to>1563</to><value>#22863a</value></color><color><from>1563</from><to>1587</to><value>#595959</value></color><color><from>1587</from><to>1593</to><value>#d73a49</value></color><color><from>1593</from><to>1623</to><value>#595959</value></color><color><from>1623</from><to>1646</to><value>#669900</value></color><color><from>1646</from><to>1659</to><value>#595959</value></color><back-color><from>0</from><to>360</to><value>#f9f9f9</value></back-color><back-color><from>369</from><to>1194</to><value>#f9f9f9</value></back-color><back-color><from>1203</from><to>1548</to><value>#f9f9f9</value></back-color><back-color><from>1557</from><to>1659</to><value>#f9f9f9</value></back-color></inline-styles><styles/><language>java</language><theme>tomorrow</theme></code><para><coId>1122-1620734491804</coId><text>配置拦截器：</text><inline-styles><font-size><from>0</from><to>6</to><value>16</value></font-size></inline-styles><styles/></para><code><coId>6776-1622100307679</coId><text>/**
 * 1、编写一个拦截器实现HandlerInterceptor接口
 * 2、拦截器注册到容器中（实现WebMvcConfigurer的addInterceptors）
 * 3、指定拦截规则【如果是拦截所有，静态资源也会被拦截】
 */
@Configuration
public class AdminWebConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new LoginInterceptor())
                .addPathPatterns("/**")  //所有请求都被拦截包括静态资源
                .excludePathPatterns("/","/login","/css/**","/fonts/**","/images/**","/js/**"); //放行的请求
    }
}
</text><inline-styles/><styles/><language>java</language><theme>tomorrow</theme></code><para><coId>3916-1622100307679</coId><text/><inline-styles/><styles/></para><para><coId>5879-1622100771468</coId><text/><inline-styles/><styles/></para><para><coId>7961-1622100771660</coId><text/><inline-styles/><styles/></para><para><coId>1576-1622100771837</coId><text>拦截器原理</text><inline-styles><font-size><from>0</from><to>5</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>5420-1622101075972</coId><text>1、根据当前请求，找到HandlerExecutionChain【可以处理请求的handler以及handler的所有 拦截器】</text><inline-styles><bold><from>11</from><to>33</to><value>true</value></bold><font-size><from>0</from><to>64</to><value>15</value></font-size><color><from>0</from><to>64</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><para><coId>9382-1622101082540</coId><text>2、先来顺序执行 所有拦截器的 preHandle方法</text><inline-styles><bold><from>4</from><to>9</to><value>true</value></bold><font-size><from>0</from><to>27</to><value>15</value></font-size><color><from>0</from><to>27</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><list-item level="1" list-id="7620-1622101082535"><coId>6477-1622101082540</coId><text>1、如果当前拦截器prehandler返回为true。则执行下一个拦截器的preHandle</text><inline-styles><font-size><from>0</from><to>46</to><value>15</value></font-size><color><from>0</from><to>46</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></list-item><list-item level="1" list-id="7620-1622101082535"><coId>9072-1622101082540</coId><text>2、如果当前拦截器返回为false。直接    倒序执行所有已经执行了的拦截器的  afterCompletion；</text><inline-styles><font-size><from>0</from><to>58</to><value>15</value></font-size><color><from>0</from><to>58</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></list-item><para><coId>4812-1622101082540</coId><text>3、如果任何一个拦截器返回false。直接跳出不执行目标方法</text><inline-styles><bold><from>0</from><to>30</to><value>true</value></bold><font-size><from>0</from><to>30</to><value>15</value></font-size><color><from>0</from><to>30</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><para><coId>5052-1622101082540</coId><text>4、所有拦截器都返回True。执行目标方法</text><inline-styles><bold><from>0</from><to>21</to><value>true</value></bold><font-size><from>0</from><to>21</to><value>15</value></font-size><color><from>0</from><to>21</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><para><coId>6330-1622101082540</coId><text>5、倒序执行所有拦截器的postHandle方法。</text><inline-styles><bold><from>0</from><to>25</to><value>true</value></bold><font-size><from>0</from><to>25</to><value>15</value></font-size><color><from>0</from><to>25</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><para><coId>9596-1622101082540</coId><text>6、前面的步骤有任何异常都会直接倒序触发 afterCompletion</text><inline-styles><bold><from>0</from><to>21</to><value>true</value></bold><font-size><from>0</from><to>36</to><value>15</value></font-size><color><from>0</from><to>36</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para><para><coId>2512-1622101082540</coId><text>7、页面成功渲染完成以后，也会倒序触发 afterCompletion</text><inline-styles><font-size><from>0</from><to>35</to><value>15</value></font-size><color><from>0</from><to>35</to><value>#404040</value></color></inline-styles><styles><line-height>1.74</line-height></styles></para></body></note>