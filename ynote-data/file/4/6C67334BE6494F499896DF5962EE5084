<?xml version="1.0" encoding="UTF-8" standalone="no"?><note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3"><head/><body><para><coId>2720-1641198149590</coId><text>Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</text><inline-styles><font-size><from>0</from><to>48</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>4684-1641265554719</coId><text>1、下载运行sentinel   java- jar sentinel.jar</text><inline-styles><font-size><from>0</from><to>39</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>5061-1641265580512</coId><text>2、编辑sentinelclient代码</text><inline-styles><font-size><from>0</from><to>20</to><value>16</value></font-size></inline-styles><styles/></para><attach><coId>7166-1641265630620</coId><source>https://note.youdao.com/yws/res/16636/BC695BA12F014841852872DA7D175776</source><resource>https://note.youdao.com/yws/res/16637/FFC51460A3664357B143AA1FB7A5EF0E</resource><filename>cloudalibaba-sentinel8401.zip</filename><filelength>4601</filelength><styles/></attach><para><coId>8998-1641265630620</coId><text>3、运行nacos，sentinel，client</text><inline-styles><font-size><from>0</from><to>25</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>1980-1641265652624</coId><text>4、查看sentinel 大师board，发现无服务，sentinel是懒加载机制，需要执行一次controller层的方法</text><inline-styles><font-size><from>0</from><to>62</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>6036-1641265707646</coId><text/><inline-styles/><styles/></para><para><coId>9655-1641347677005</coId><text/><inline-styles/><styles/></para><para><coId>7460-1641347677137</coId><text>流程控制主要在sentinel dashboard中完成</text><inline-styles><font-size><from>0</from><to>28</to><value>16</value></font-size></inline-styles><styles/></para><para><coId>6063-1641265631679</coId><text/><inline-styles/><styles/></para><para><coId>8612-1641265631872</coId><text>·流控模式:</text><inline-styles/><styles/></para><para><coId>1123-1641347989212</coId><text>。直接: api达到限流条件时，直接限流</text><inline-styles/><styles/></para><para><coId>9698-1641347989212</coId><text>。关联:当关联的资源达到阈值时，就限流自己</text><inline-styles/><styles/></para><para><coId>6436-1641347989212</coId><text>。链路:只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流)【api级别的针对来源】</text><inline-styles/><styles/></para><para><coId>5250-1641347989212</coId><text>·流控效果:</text><inline-styles/><styles/></para><para><coId>2233-1641347989212</coId><text>。快速失败:直接失败，抛异常</text><inline-styles/><styles/></para><para><coId>7342-1641347989212</coId><text>o Warm Up:根据codeFactor (冷加载因子，默认3)的值，从阈值/codeFactor，经过预热时长，才达到设置的QPS阈值</text><inline-styles/><styles/></para><para><coId>8453-1641347989212</coId><text>。排队等待:匀速排队，让请求以匀速的速度通过，阈值类型必须设置为QPS，否则无效</text><inline-styles/><styles/></para><para><coId>8482-1641347989213</coId><text/><inline-styles/><styles/></para></body></note>